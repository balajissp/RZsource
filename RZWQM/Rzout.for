C $Id: Rzout.for,v 1.1 2002/08/28 00:00:48 rojas Exp $
C
      SUBROUTINE CENTER(LABEL)
C
C======================================================================
C
C       PURPOSE:
C
C       VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C       FIRST  L
C       LAST   L
C       SPACE  L
C
C       COMMENTS:
C
C       EXTERNAL REFERENCES:
C                 IFIRLT
C                 ITRIM
C
C       CALLED FROM:  FIXLAB
C
C       PROGRAMMER:  SANDY MAPLE
C
C       VERSION:   1
C
C-----------------------------------------------------------------------
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      CHARACTER LABEL*12,TEMP*12
      INTEGER BEGIN,LAST,SPACE
C
      TEMP=' '
      BEGIN=IFIRLT(LABEL,12)
      LAST=ITRIM(LABEL)
C
      SPACE=(11-LAST+BEGIN)/2
C
      TEMP(SPACE+1:)=LABEL
      LABEL=TEMP
C
      RETURN
      END
C
      SUBROUTINE CLOSER(FLAG)
C
C======================================================================
C
C       PURPOSE: THE PURPOSE OF THE CLOSER SUBROUTINE IS TO CLOSE ALL FILES
C             OPENED BY THE OPENER SUBROUTINE.
C
C       REF:
C
C       VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C       CNTRL  I   CONTROL FILE UNIT NUMBER
C       MXNOD  P   MAXIMUM LENGTH OF VECTORS
C       NUMSCA     P   NUMBER OF SCALAR VARIABLES
C       NUMSCN     P   NUMBER OF SCNRIOS
C       NUMVEC     P   NUMBER OF VECTOR VARIABLES
C       SC         I   CURRENT SCNRIO (1-7)
C       SCAPLT    I/O  SCALAR PLOT FILE UNIT NUMBER
C       SCASSL     I   VECTOR OF CURRENT SCNRIO'S SCALAR SEQUENCE LIST
C       SCATAB     I   VECTOR OF SCALAR TABULAR OUTPUT FILE UNIT NUMBERS
C       USCASS     I   VECTOR OF USER SELECTED SCALAR SEQUENCE LIST
C       UVECSS     I   VECTOR OF USER SELECTED VECTOR SEQUENCE LIST
C       VECPLT     I   VECTOR PLOT FILE UNIT NUMBER
C       VECSSL     I   VECTOR OF CURRENT SCNRIO'S VECTOR SEQUENCE LIST
C       VECTAB     I   VECTOR OF VECTOR TABULAR OUTPUT FILE UNIT NUMBERS
C
C       COMMENTS:
C
C       EXTERNAL REFERENCES: NONE
C
C       CALLED FROM:  OUTINT
C
C       PROGRAMMER:  SANDY MAPLE
C
C       VERSION:   1
C
C-----------------------------------------------------------------------
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      INTEGER SC,CNTRL,SCAPLT,VECPLT,SCATAB(6),VECTAB(6)
C
C    TO REDUCE ARGUMENT PASSING TO SUBROUTINES ALL VARIABLE SEQUENCE
C    LISTS, FILE UNIT NUMBERS, LABELS AND THE CURRENT SCNRIO NUMBER
C    ARE COMMON UNDER THE FOLLOWING BLOCKS
C
      COMMON /FUNIT/ SC,CNTRL,SCAPLT,VECPLT,SCATAB,VECTAB,ISCA,IVEC
      COMMON /SC1/ ISTAB,IVTAB,ISPLT,IVPLT
C
      INTEGER FLAG
C
      IF(SC.NE.-1) THEN
        IF(FLAG.EQ.1) THEN
          CALL FAPEND(71,19)
          CLOSE(19,STATUS='DELETE')
          WRITE(71,'(A)') '1'
        ENDIF
C
        DO 10 I=1,ISCA
          CALL FAPEND(71,SCATAB(I))
          CLOSE(SCATAB(I),STATUS='DELETE')
   10   CONTINUE
C
        DO 20 I=1,IVEC
          CALL FAPEND(71,VECTAB(I))
          CLOSE(VECTAB(I),STATUS='DELETE')
   20   CONTINUE
C
        IF(FLAG.GT.2) CLOSE(71,STATUS='KEEP')
C
        IF(FLAG.GT.1) THEN
          IF(IVPLT.EQ.1) THEN
            CLOSE(VECPLT,STATUS='KEEP')
          ELSE
            CLOSE(VECPLT,STATUS='DELETE')
          ENDIF
C
          IF(ISPLT.EQ.1) THEN
            CLOSE(SCAPLT,STATUS='KEEP')
          ELSE
            CLOSE(SCAPLT,STATUS='DELETE')
          ENDIF
        ENDIF
      ENDIF
C     
C     ..RETURN TO MAIN PROGRAM
C     
      RETURN
      END
C
C
      SUBROUTINE CNTLRD(IBRKTH,ICHEM,IMAGIC,NOSTAR,NUTEQ,INP1,IPHOS)
C
C======================================================================
C
C       PURPOSE: OPENS CONTROL DATA FILE 'CNTRL.DAT' AND READS
C              ALL INFORMATION.  (FIRST REWINDS THE FILE)
C
C       VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C
C       COMMENTS:
C
C       EXTERNAL REFERENCES:
C
C       CALLED FROM:  PLTHD
C
C       PROGRAMMER:  SANDY MAPLE
C
C       VERSION:   1
C
C-----------------------------------------------------------------------
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(NUMSCN=7,MAXSCA=41,MAXVEC=23,MAXCOL=22)
      CHARACTER string*255
C
      INTEGER SCASSL(MAXSCA),USSSL(MAXSCA)
      INTEGER VECSSL(MAXVEC+1),UVSSL(MAXVEC+1)
      INTEGER ASSSL(NUMSCN+1,MAXSCA),AVSSL(NUMSCN+1,MAXVEC)
      INTEGER SC,CNTRL,SCAPLT,VECPLT,SCATAB(6),VECTAB(6)
      INTEGER SNMVAR,SNMPLT,VNMVAR,VNMPLT
      INTEGER DUM(MAXSCA),SSTAT(MAXSCA),NUTEQ(13)
      INTEGER SPLTVR(MAXCOL,MAXSCA+2),VPLTVR(MAXCOL,MAXSCA+2)
C
      COMMON /SSLIST/ SCASSL,USSSL,VECSSL,UVSSL,ASSSL,AVSSL
      COMMON /FUNIT/ SC,CNTRL,SCAPLT,VECPLT,SCATAB,VECTAB,ISCA,IVEC
      COMMON /SC1/ ISTAB,IVTAB,ISPLT,IVPLT
C
      COMMON /CNTL/ SNMVAR,SNMPLT,VNMVAR,VNMPLT,SSTAT,SPLTVR,VPLTVR
C
      CNTRL=INP1
      NOSTAR=1
C     
C     ..OPEN CONTROL DATA FILE AND READ ALL INFORMATION
      REWIND(UNIT=INP1)
      CALL ECHO(INP1)
      READ(INP1,*,ERR=60) SC
      CALL ECHO(INP1)
      READ(INP1,*,ERR=70) SNMVAR,SNMPLT
      SNMVAR=MIN(SNMVAR,MAXCOL-1)
      CALL ECHO(INP1)
      READ(INP1,*,ERR=80) (USSSL(I),I=2,SNMVAR+1)
      CALL ECHO(INP1)
      READ(INP1,*,ERR=90) (SSTAT(I),I=1,SNMVAR+1)
      CALL ECHO(INP1)
      DO 30 I=1,SNMPLT
        READ(INP1,*,ERR=100) (DUM(J),J=1,SNMVAR+1)
        DO 10 J=1,MAXSCA+2
          SPLTVR(I,J)=0
   10   CONTINUE
        DO 20 J=1,SNMVAR+1
          IF(DUM(J).EQ.1) SPLTVR(I,2)=J-1
          IF(DUM(J).EQ.2) THEN
            SPLTVR(I,1)=SPLTVR(I,1)+1
            SPLTVR(I,SPLTVR(I,1)+2)=J-1
          ENDIF
   20   CONTINUE
   30 CONTINUE
      CALL ECHO(INP1)
      READ(INP1,*,ERR=110) VNMVAR
      VNMPLT=MIN(VNMVAR,MAXCOL-2)
      CALL ECHO(INP1)
      READ(INP1,*,ERR=120) (UVSSL(I),I=3,VNMVAR+2)
      UVSSL(2)=1
      DO 50 I=1,VNMPLT
        DO 40 J=1,12
          VPLTVR(I,J)=0
   40   CONTINUE
        VPLTVR(I,2)=1
        VPLTVR(I,3)=I+1
   50 CONTINUE
      CALL ECHO(INP1)
      READ(INP1,*,ERR=130) IVTAB,ISTAB,IVPLT,ISPLT
      CALL ECHO(INP1)
      READ(INP1,*,ERR=140) IBRKTH
      if (ibrkth.eq.0) ibrkth=1
      CALL ECHO(INP1)
      READ(INP1,*,ERR=150) IMAGIC
      CALL ECHO(INP1)
        read (inp1,1110) string
        k=inumb(string)
        backspace (inp1)
       if(k.eq.2) then
      READ(INP1,*,ERR=160) ICHEM,NOSTAR
      else
      READ(INP1,*,ERR=160) ICHEM,NOSTAR,IPHOS
      endif
      IF (NOSTAR.LT.0) NOSTAR=1
      IF (ICHEM.LT.0) ICHEM=0
      IF (IPHOS.LT.0) IPHOS=0
      CALL ECHO(INP1)
      READ (INP1,1110) string
      k=inumb(string)
      backspace (inp1)
      IF(k.eq.12) THEN
        READ(INP1,*,ERR=170) NUTEQ(1:12)
        NUTEQ(13) = 0 !Balaji 13th element is experimental
      ELSE
        READ(INP1,*,ERR=170) NUTEQ(1:13)
      ENDIF

C       READ(INP1,*,ERR=170) (NUTEQ(I),I=1,12)
C
C     
C     ..ERROR MESSAGE IF CONTROL DATA FILE IS INCORRECTLY FORMATTED
      GOTO 180
   60 STOP'>>> ERROR <<< READING CONTROL DATA FILE FOR OUTPUT'
   70 STOP'>>> ERROR <<< READING SCALAR NUM VARS AND PLOTS'
   80 STOP'>>> ERROR <<< READING SCALAR VARIABLES'
   90 STOP'>>> ERROR <<< READING SCALAR STATS'
  100 STOP'>>> ERROR <<< READING SCALAR PLOT DEFINITION MATRIX'
  110 STOP'>>> ERROR <<< READING NUMBER OF VECTOR VARIABLES'
  120 STOP'>>> ERROR <<< READING VECTOR VARIABLES'
      STOP'>>> ERROR <<< READING SC #1 DAY AND TIME'
  130 STOP'>>> ERROR <<< READING OUTPUT CONTROL VARIABLES'
  140 STOP'>>> ERROR <<< READING BREAK THRU NODE NUMBER'
  150 STOP'>>> ERROR <<< READING DEBUG FLAG'
  160 STOP'>>> ERROR <<< CHEMISTRY SHUTDOWN OR STARS FLAG'
  170 STOP'>>> ERROR <<< SYSTEM RESTART FLAGS'
 1110 FORMAT(A255)
C     
C     ..INPUT FORMAT STATEMENTS
C     
C
C
  180 RETURN
c 1000 FORMAT(11X,I3)
c 1100 FORMAT(16X,I10)
c 1200 FORMAT(A80)
c 1300 FORMAT(22X,I10)
      END
C
      SUBROUTINE FAPEND(UNIT1,UNIT2)
C
C======================================================================
C
C       PURPOSE:
C
C       VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C
C       COMMENTS:
C
C       EXTERNAL REFERENCES:
C
C       CALLED FROM:
C
C       PROGRAMMER:  SANDY MAPLE
C
C       VERSION:   1
C
C-----------------------------------------------------------------------
      INTEGER UNIT1,UNIT2
      CHARACTER STR*129
C
      REWIND(UNIT2)
   10 READ(UNIT2,*,END=20) STR
      WRITE(UNIT1,*) STR
      GOTO 10
   20 CLOSE(UNIT=UNIT2,STATUS='DELETE')
C     
      RETURN
 1000 FORMAT(1X,A129)
      END
C
C
      SUBROUTINE FIXLAB(LABELP,LABELS,LABEL)
C
C======================================================================
C
C       PURPOSE:
C
C       REF:
C
C       VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C       BREAK  L
C       I      L
C
C       COMMENTS:
C
C       EXTERNAL REFERENCES:
C                 CENTER
C
C       CALLED FROM:  TABHD
C                 VTAB
C
C       PROGRAMMER:  SANDY MAPLE
C
C       VERSION:   1
C
C-----------------------------------------------------------------------
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      CHARACTER LABEL*30
      CHARACTER LABELP*12,LABELS*12
      CHARACTER SUB(4)*7
      INTEGER BREAK
C
      DATA(SUB(I),I=1,4) /'TION','LOGICAL','SION','ING'/
C
      DO 10 BREAK=13,1,-1
        IF(LABEL(BREAK:BREAK).EQ.' ') THEN
          LABELP=LABEL(1:BREAK-1)
          LABELS=LABEL(BREAK:20)
          CALL CENTER(LABELP)
          CALL CENTER(LABELS)
          RETURN
        ENDIF
   10 CONTINUE
C
      DO 20 I=1,4
        BREAK=INDEX(LABEL,SUB(I))
        IF(BREAK.NE.0) THEN
          LABELP=LABEL(1:BREAK-1)//'-'
          LABELS=LABEL(BREAK:20)
          CALL CENTER(LABELP)
          CALL CENTER(LABELS)
          RETURN
        ENDIF
   20 CONTINUE
C     
      LABELP=LABEL(1:12)
      LABELS=LABEL(13:20)
      CALL CENTER(LABELP)
      CALL CENTER(LABELS)
C     
      RETURN
      END
C
      SUBROUTINE HZPARO
C
C======================================================================
C
C       PURPOSE:
C
C       REF:
C
C       VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C
C       COMMENTS:
C
C       EXTERNAL REFERENCES:
C
C       CALLED FROM:
C
C       PROGRAMMER:  SANDY MAPLE
C
C       VERSION:   1
C
C-----------------------------------------------------------------------
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(MXNOD=300,MAXHOR=12,MAXSCT=11,MXPEST=3,MXCHEM=15,
     + MXSPEC=10)
C
      COMMON /SOIL/ SOILPP(8,MAXHOR),pori(mxnod)
C
      COMMON /GEOMTR/XLONG,ASPECT,DELZ(MXNOD),ELEV,HORTHK(MAXHOR),SLOPE,
     +    AREA,TL(MXNOD),TLT(MXNOD),XLAT,ZN(MXNOD),NHOR,NN,NNT
C
      COMMON /IPCHEM/ A,ALH(MXNOD,MXCHEM),B,BDH(MAXHOR),DEG(MAXHOR),
     +    BDHR(MAXHOR),MICP(MAXHOR),NMICP
C
      COMMON /IPMACF/ AGSZ(MAXHOR),FDEP(MAXHOR),MCPOR(MAXHOR),PI,
     +    PL(MAXHOR),RP(MAXHOR),SFCT,TWOPI,WP(MAXHOR),NHCMP,YESMAC,
     +    EFFWR,EFFWC,XPRESF
      DOUBLE PRECISION MICP,MCPOR
      INTEGER YESMAC
C
      COMMON /HEAT/ CSH(MXNOD),T(MXNOD),SOLTP1(MAXHOR,5),
     +    SOLTP2(MAXSCT,MAXHOR,3)
C
      COMMON /HYDROL/ AEF,BOTFLX,DRDEP,DRSPAC,DRRAD,CLAT(MAXHOR),
     +    H(MXNOD),HKBAR(MXNOD),QF(MXNOD),SOILHP(13,MAXHOR),HFC,HWP,
     +    THETA(MXNOD),thetai(mxnod),RICH_EPS,IREBOT,ITBL,IDRAIN,
     +    MAXITER_RICH,MAXCYCLE_RICH
C
      PARAMETER(NUMSCN=7,NUMSCA=107,NUMVEC=59,IHZNUM=21)
C
      INTEGER FNUM
      CHARACTER SCNRIO(NUMSCN+1)*30,SCALAR(NUMSCA)*30,VECTOR(NUMVEC)*30
      CHARACTER HZLABS(IHZNUM)*30
C
      COMMON /LABLS/ SCNRIO,SCALAR,VECTOR,HZLABS
C
      CHARACTER SOLTYP*10,NMPEST*30,PLNAME*30
      COMMON /NAMES/ NMPEST(MXPEST),SOLTYP(MAXHOR),PLNAME(MXSPEC)
C
      PARAMETER(FNUM=19)
C
      OPEN(UNIT=FNUM,FILE='INPAR.OUT',STATUS='UNKNOWN')
      WRITE(FNUM,1200)
      WRITE(FNUM,1300)
      WRITE(FNUM,1400)
c      WRITE(FNUM,1500)
      WRITE(FNUM,1100) (' ',I=1,5)
      WRITE(FNUM,1600) XLONG
      WRITE(FNUM,1700) ELEV
      WRITE(FNUM,1800) ASPECT
      WRITE(FNUM,1900) XLAT
      WRITE(FNUM,2000) SLOPE
      WRITE(FNUM,2100)
      WRITE(FNUM,2200) (' ',I=1,5)
      WRITE(FNUM,2300)
      WRITE(FNUM,2400) (I,I=1,NHOR)
      WRITE(FNUM,2500) 'DEPTH(CM)  :',(HORTHK(I),I=1,NHOR)
      WRITE(FNUM,2600) 'SOIL TYPE  :',(SOLTYP(I),I=1,NHOR)
      DO 10 I=1,8
        WRITE(FNUM,2500) HZLABS(I),(SOILPP(I,J),J=1,NHOR)
   10 CONTINUE
      DO 20 I=1,13
        WRITE(FNUM,2500) HZLABS(I+8),(SOILHP(I,J),J=1,NHOR)
   20 CONTINUE
      WRITE(FNUM,2500) 'DRY VOL HEAT CAP :',(SOLTP1(I,5),I=1,NHOR)
      WRITE(FNUM,2500) 'MICROPOROSITY :',(MICP(J),J=1,NHOR)
      WRITE(FNUM,2500) 'MACROPOROSITY :',(MCPOR(J),J=1,NHOR)
      WRITE(FNUM,2500) 'AVG RAD OF PORES :',(RP(J),J=1,NHOR)
      WRITE(FNUM,2500) '% DEAD END PORES :',(FDEP(J),J=1,NHOR)
C
      RETURN
c 1000 FORMAT(' ',A20,': ',G11.5)
 1100 FORMAT(' ',A)
 1200 FORMAT(T46,'UNITED STATES DEPARTMENT OF AGRICULTURE')
 1300 FORMAT(T51,'AGRICULTURAL RESEARCH SERVICE')
 1400 FORMAT(T51,'ROOT ZONE WATER QUALITY MODEL')
C1136 FORMAT (T47,'MODELING NATURE IS OUR SOUL PURPOSE! ')
C1136 FORMAT (T47,'    "MODELING A PERFECT WORLD"')
C1136 FORMAT (T47,'  WORK WITH NATURE NOT AGAINST HER!  ')
c 1500 FORMAT(T47,'WHERE TAMING NATURE IS SECOND NATURE.')
 1600 FORMAT(T11,'LONGITUDE OF TEST SITE = ',G13.5,' RADIAN(S)')
 1700 FORMAT(T11,'ELEVATION    = ',G13.5,' METER(S)')
 1800 FORMAT(T11,'ASPECT     = ',G13.5,' RADIAN(S)')
 1900 FORMAT(T11,'LATITUDE    = ',G13.5,' RADIAN(S)')
 2000 FORMAT(T11,'SLOPE     = ',G13.5,' RADIAN(S)')
C
 2100 FORMAT('1',T46,'INITIAL PARAMETERS BY SOIL HORIZON LAYER')
 2200 FORMAT(' ',A)
 2300 FORMAT(T57,'HORIZON LAYER NUMBER')
 2400 FORMAT(T17,12(1X,I8))
 2500 FORMAT(T2,A20,12(1X,G8.3))
 2600 FORMAT(T2,A20,12(1X,A8))
      END
C
C
      FUNCTION IFIRLT(ST,LENG)
C
C======================================================================
C
C       PURPOSE:
C
C       REF:
C
C       VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C       IFIRLT     O
C       LENG   I
C
C       COMMENTS:
C
C       EXTERNAL REFERENCES:
C                 NONE
C
C       CALLED FROM:  CENTER
C
C       PROGRAMMER:  SANDY MAPLE
C
C       VERSION:   1
C
C-----------------------------------------------------------------------
C
      CHARACTER ST*12
      INTEGER I,LENG,IFIRLT
C
      I=1
      IF(ST(:LENG).NE.' ') THEN
   10   IF(ST(I:I).EQ.' ') THEN
          I=I+1
          GOTO 10
        ENDIF
      ENDIF
      IFIRLT=I
      RETURN
      END
C
      INTEGER FUNCTION ITRIM(STRING)
C
C======================================================================
C
C       PURPOSE:  THIS FUNCTION FINDS THE LOCATION OF THE LAST NONBLANK
C             CHARACTER IN A PROVIDED STRING
C
C       VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C       ITRIM  O  CHARACTER POSITION OF THE LAST LETTER
C       STRING     I  CHARACTER STRING TO USE
C
C       COMMENTS:
C
C       EXTERNAL REFERENCES:
C                 NONE
C
C       CALLED FROM:  OPENER
C                 PLTHD
C                 CENTER
C
C       PROGRAMMER:  SANDY MAPLE & KEN ROJAS
C
C       VERSION:   1
C
C-----------------------------------------------------------------------
C
      CHARACTER STRING*(*)
      INTEGER J
C
      J=LEN(STRING)
   10 IF(J.GT.1.AND.STRING(J:J).EQ.' ') THEN
        J=J-1
        GOTO 10
      ENDIF
      IF(J.EQ.1.AND.STRING(1:1).EQ.' ') THEN
        ITRIM=0
      ELSE
        ITRIM=J
      ENDIF
      END
C
      INTEGER FUNCTION INUMB(STRING)
C
C======================================================================
C
C       PURPOSE:  THIS FUNCTION FINDS number of data in a string
C
C       VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C       ITRIM  O  CHARACTER POSITION OF THE LAST LETTER
C       STRING     I  CHARACTER STRING TO USE
C
C       PROGRAMMER:  Liwang Ma
C
C       VERSION:   1
C
C-----------------------------------------------------------------------
C
      CHARACTER STRING*(*)
      INTEGER J,I
C
      J=itrim(STRING)
       inumb=0
       do i=1, j
           if ((((iachar(string(i:i)).ne.9).and.
     +    (iachar(string(i:i)).ne.32)).and.
     +  ((iachar(string(i+1:i+1)).eq.9).or.
     +    (iachar(string(i+1:i+1)).eq.32).or.
     +    (iachar(string(i+1:i+1)).eq.13)))) then
c        if ((string(i:i).ne.' ').and.(string(i+1:i+1).eq.' ')) then
	    inumb=inumb+1
        endif
c	  write (*,*) iachar(string(i:i)),string(i:i)
	enddo
      END
c
C
      INTEGER FUNCTION IPATH(STRING)
C
C======================================================================
C
C       PURPOSE:  THIS FUNCTION FINDS THE LOCATION OF THE LAST NONBLANK
C             CHARACTER IN A PROVIDED STRING
C
C       VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C       ITRIM  O  CHARACTER POSITION OF THE LAST LETTER
C       STRING     I  CHARACTER STRING TO USE
C
C       COMMENTS:
C
C       EXTERNAL REFERENCES:
C                 NONE
C
C       CALLED FROM:  OPENER
C                 PLTHD
C                 CENTER
C
C       PROGRAMMER:  SANDY MAPLE & KEN ROJAS
C
C       VERSION:   1
C
C-----------------------------------------------------------------------
C
      CHARACTER STRING*(*)
      INTEGER J
C
      J=ITRIM(STRING)
   10 IF(J.GT.1.AND.STRING(J:J).EQ.'\') THEN
        J=J+1
        GOTO 10
      ENDIF
      IF(J.EQ.1.AND.STRING(1:1).EQ.'\') THEN
        IPATH=0
      ELSE
        IPATH=J
      ENDIF
      END
C
C
      SUBROUTINE OPENER(FLAG,NSC)
C
C======================================================================
C
C       PURPOSE: THE PURPOSE OF THE OPENER SUBROUTINE IS TO OPEN THE
C              CONTROL DATA FILE, 'CNTRL.DAT' AND DISCERN THE SCNRIO
C              NUMBER, SC, THEN ALL APPROPRIATE FILES ARE OPENED AND
C              ASSIGNED TO UNIT NUMBERS.
C
C       REF:
C
C       VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C       CNTRL I/O  CONTROL FILE UNIT NUMBER
C       NUMSCA     P   NUMBER OF SCALAR VARIABLES
C       NUMSCN     P   NUMBER OF SCNRIOS
C       NUMVEC     P   NUMBER OF VECTOR VARIABLES
C       SC        I/O  CURRENT SCNRIO (1-7)
C       SCAPLT    I/O  SCALAR PLOT FILE UNIT NUMBER
C       SCASSL     I   VECTOR OF CURRENT SCNRIO'S SCALAR SEQUENCE LIST
C       SCATAB    I/O  VECTOR OF SCALAR TABULAR OUTPUT FILE UNIT NUMBERS
C       USCASS     I   VECTOR OF USER SELECTED SCALAR SEQUENCE LIST
C       UVECSS     I   VECTOR OF USER SELECTED VECTOR SEQUENCE LIST
C       VECPLT    I/O  VECTOR PLOT FILE UNIT NUMBER
C       VECSSL     I   VECTOR OF CURRENT SCNRIO'S VECTOR SEQUENCE LIST
C       VECTAB    I/O  VECTOR OF VECTOR TABULAR OUTPUT FILE UNIT NUMBERS
C
C       COMMENTS:
C
C       EXTERNAL REFERENCES:
C                 ITRIM
C
C       CALLED FROM:  OUTINT
C
C       PROGRAMMER:  SANDY MAPLE
C
C       VERSION:   1
C
C-----------------------------------------------------------------------
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      INTEGER SC,CNTRL,SCAPLT,VECPLT,SCATAB(6),VECTAB(6)
C
      COMMON /FUNIT/ SC,CNTRL,SCAPLT,VECPLT,SCATAB,VECTAB,ISCA,IVEC
C
      CHARACTER SCANAM*30,VECNAM*30,STBNAM*30,VTBNAM*30
      CHARACTER TEMP*30
      INTEGER FLAG,NSC
C
C     ..INITIALIZATION OF PARAMETERS AND FILE UNIT NUMBERS
      SCAPLT=32
      VECPLT=33
      STBNAM='DAILY'
      VTBNAM='LAYER'
C     
C     ..OPEN TEMPORARY TABULAR OUTPUT FILES
      DO 10 I=1,ISCA
        SCATAB(I)=I+VECPLT
        TEMP=STBNAM
        LAST=ITRIM(TEMP)
        TEMP(LAST+1:)=CHAR(I+48)
        TEMP(LAST+2:)='.OUT'
        OPEN(UNIT=SCATAB(I),FILE=TEMP,STATUS='UNKNOWN',ACCESS=
     +      'SEQUENTIAL')
   10 CONTINUE
      DO 20 I=1,IVEC
        VECTAB(I)=I+VECPLT+6
        TEMP=VTBNAM
        LAST=ITRIM(TEMP)
        TEMP(LAST+1:)=CHAR(I+48)
        TEMP(LAST+2:)='.OUT'
        OPEN(UNIT=VECTAB(I),FILE=TEMP,STATUS='UNKNOWN',ACCESS=
     +      'SEQUENTIAL')
   20 CONTINUE
C     
      IF(FLAG.EQ.1) THEN
        OPEN(UNIT=71,FILE='RZWQM.OUT',STATUS='UNKNOWN',ACCESS=
     +      'SEQUENTIAL')
      ELSE
C       
C       ..ASSIGN NAMES OF OUTPUT FILES
        IF(NSC.EQ.1) THEN
          SCANAM='EVENTS.PLT'
          VECNAM='EVENTL.PLT'
        ELSE
          SCANAM='DAILY.PLT'
          VECNAM='LAYER.PLT'
        ENDIF
C       
C       ..OPEN PLOT OUTPUT DATA FILES
C
        OPEN(UNIT=SCAPLT,FILE=SCANAM,STATUS='UNKNOWN',ACCESS=
     +      'SEQUENTIAL',RECL=400)
        OPEN(UNIT=VECPLT,FILE=VECNAM,STATUS='UNKNOWN',ACCESS=
     +      'SEQUENTIAL',RECL=400)
      ENDIF
C     
C     ..RETURN TO MAIN PROGRAM
C     
      RETURN
      END
C
      SUBROUTINE OUTIN1(NSC,IBRKTH,ICHEM,IMAGIC,NOSTAR,NUTEQ,INP1,IPHOS)
C
C======================================================================
C
C       PURPOSE:  THIS ROUTINE INITIALIZES ALL THE OUTPUT FILES WITH
C             THE APPROPIATE SCNRIO LABELS AND VARIABLES.
C
C       VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C       ASCASS     L   2D ARRAY OF ALL SCNRIO'S SCALAR SEQUENCE LISTS
C       AVECSS     L   2D ARRAY OF ALL SCNRIO'S VECTOR SEQUENCE LISTS
C       CNTRL  I   CONTROL FILE UNIT NUMBER
C       MXNOD  P   MAXIMUM LENGTH OF VECTORS
C       NUMSCA     P   NUMBER OF SCALAR VARIABLES
C       NUMSCN     P   NUMBER OF SCNRIOS
C       NUMVEC     P   NUMBER OF VECTOR VARIABLES
C       SC         I   CURRENT SCNRIO (1-7)
C       SCAPLT     I   SCALAR PLOT FILE UNIT NUMBER
C       SCASSL     I   VECTOR OF CURRENT SCNRIO'S SCALAR SEQUENCE LIST
C       SCATAB     I   VECTOR OF SCALAR TABULAR OUTPUT FILE UNIT NUMBERS
C       USCASS     I   VECTOR OF USER SELECTED SCALAR SEQUENCE LIST
C       UVECSS     I   VECTOR OF USER SELECTED VECTOR SEQUENCE LIST
C       VECPLT     I   VECTOR PLOT FILE UNIT NUMBER
C       VECSSL     I   VECTOR OF CURRENT SCNRIO'S VECTOR SEQUENCE LIST
C       VECTAB     I   VECTOR OF VECTOR TABULAR OUTPUT FILE UNIT NUMBERS
C
C       COMMENTS:
C
C       EXTERNAL REFERENCES:
C                 FILECL
C                 FILEOP
C                 PLTHEA
C                 TABHEA
C
C       CALLED FROM: MAIN
C
C       PROGRAMMER:  SANDY MAPLE
C
C       VERSION:   1
C
C-----------------------------------------------------------------------
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      PARAMETER(MXNOD=300)
      PARAMETER(NUMSCN=7,NUMSCA=107,NUMVEC=59,IHZNUM=21,MAXSCA=41,MAXVEC
     +    =23)
C
      INTEGER SCASSL(MAXSCA),USSSL(MAXSCA)
      INTEGER VECSSL(MAXVEC+1),UVSSL(MAXVEC+1)
      INTEGER ASSSL(NUMSCN+1,MAXSCA),AVSSL(NUMSCN+1,MAXVEC)
      INTEGER SC,CNTRL,SCAPLT,VECPLT,SCATAB(6),VECTAB(6),NUTEQ(12)
      CHARACTER SCNRIO(NUMSCN+1)*30,SCALAR(NUMSCA)*30,VECTOR(NUMVEC)*30
      CHARACTER HZLABS(IHZNUM)*30
C
      COMMON /SSLIST/ SCASSL,USSSL,VECSSL,UVSSL,ASSSL,AVSSL
      COMMON /FUNIT/ SC,CNTRL,SCAPLT,VECPLT,SCATAB,VECTAB,ISCA,IVEC
      COMMON /LABLS/ SCNRIO,SCALAR,VECTOR,HZLABS
C
      DIMENSION V(MXNOD)
      DATA V /MXNOD*0.0D0/
C
C     ..READ INPUT FILE 'CNTRL.DAT'
      CALL CNTLRD(IBRKTH,ICHEM,IMAGIC,NOSTAR,NUTEQ,INP1,IPHOS)
C     
C     ..MAKE SURE WE'RE NOT IN DEBUG MODE
      IF(NSC.NE.-1) THEN
        SC=NUMSCN+1
C       
C       ..SET SCNRIO NAME FOR INPUT VARIABLE OUTPUT
        SCNRIO(NUMSCN+1)=SCNRIO(SC)
C       
C       ..FILL SCNRIO SEQUENCE LISTS WITH INPUT DUMP LIST
        ISCA=1
        DO 10 I=1,MAXSCA
          SCASSL(I)=ASSSL(SC,I)
          IF(SCASSL(I).NE.0) ISCA=ISCA+1
   10   CONTINUE
        IVEC=2
        DO 20 I=1,MAXVEC
          VECSSL(I)=AVSSL(SC,I)-1
          IF(VECSSL(I).GT.0) IVEC=IVEC+1
   20   CONTINUE
        ISCA=INT(ISCA/10)+1
        IVEC=INT(IVEC/10)+1
C       
C       ..OPEN CONTROL FILE AND APPROPRIATE OUTPUT FILES
C
        CALL OPENER(1,SC)
C       
C       ..PLACE HEADERS FOR INPUT VARIABLES ON TABULAR FILES
C       
        CALL SGATE(DBLE(I),-2,V(1))
        CALL VGATE(DBLE(I),-2,V)
      ENDIF
C     
C     ..RETURN TO MAIN PROGRAM
      RETURN
      END
C
C
      SUBROUTINE OUTIN2(NSC,IBRKTH,ICHEM,IMAGIC,NOSTAR,NUTEQ,INP1,IYYY
     &           ,IPHOS)
C
C======================================================================
C
C       PURPOSE:  THIS ROUTINE INITIALIZES ALL THE OUTPUT FILES WITH
C             THE APPROPIATE SCNRIO LABELS AND VARIABLES.
C
C       VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C       ASCASS     L   2D ARRAY OF ALL SCNRIO'S SCALAR SEQUENCE LISTS
C       AVECSS     L   2D ARRAY OF ALL SCNRIO'S VECTOR SEQUENCE LISTS
C       CNTRL  I   CONTROL FILE UNIT NUMBER
C       NUMSCA     P   NUMBER OF SCALAR VARIABLES
C       NUMSCN     P   NUMBER OF SCNRIOS
C       NUMVEC     P   NUMBER OF VECTOR VARIABLES
C       SC         I   CURRENT SCNRIO (1-7)
C       SCAPLT     I   SCALAR PLOT FILE UNIT NUMBER
C       SCASSL     I   VECTOR OF CURRENT SCNRIO'S SCALAR SEQUENCE LIST
C       SCATAB     I   VECTOR OF SCALAR TABULAR OUTPUT FILE UNIT NUMBERS
C       USCASS     I   VECTOR OF USER SELECTED SCALAR SEQUENCE LIST
C       UVECSS     I   VECTOR OF USER SELECTED VECTOR SEQUENCE LIST
C       VECPLT     I   VECTOR PLOT FILE UNIT NUMBER
C       VECSSL     I   VECTOR OF CURRENT SCNRIO'S VECTOR SEQUENCE LIST
C       VECTAB     I   VECTOR OF VECTOR TABULAR OUTPUT FILE UNIT NUMBERS
C
C       COMMENTS:
C
C       EXTERNAL REFERENCES:
C                 FILECL
C                 FILEOP
C                 PLTHEA
C                 TABHEA
C
C       CALLED FROM: MAIN
C
C       PROGRAMMER:  SANDY MAPLE
C
C       VERSION:   1
C
C-----------------------------------------------------------------------
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      PARAMETER(NUMSCN=7,MAXSCA=41,MAXVEC=23,MAXCOL=22)
C
      INTEGER SCASSL(MAXSCA),USSSL(MAXSCA)
      INTEGER VECSSL(MAXVEC+1),UVSSL(MAXVEC+1)
      INTEGER ASSSL(NUMSCN+1,MAXSCA),AVSSL(NUMSCN+1,MAXVEC)
      INTEGER SC,CNTRL,SCAPLT,VECPLT,SCATAB(6),VECTAB(6)
C
      COMMON /SSLIST/ SCASSL,USSSL,VECSSL,UVSSL,ASSSL,AVSSL
      COMMON /FUNIT/ SC,CNTRL,SCAPLT,VECPLT,SCATAB,VECTAB,ISCA,IVEC
      COMMON /SC1/ ISTAB,IVTAB,ISPLT,IVPLT
C
      INTEGER SNMVAR,SNMPLT,VNMVAR,VNMPLT
      INTEGER SSTAT(MAXSCA),NUTEQ(12)
      INTEGER SPLTVR(MAXCOL,MAXSCA+2),VPLTVR(MAXCOL,MAXSCA+2)
      COMMON /CNTL/ SNMVAR,SNMPLT,VNMVAR,VNMPLT,SSTAT,SPLTVR,VPLTVR
C
      LOGICAL FOUND
C
C     ..READ INPUT FILE 'CNTRL.DAT'
      CALL CNTLRD(IBRKTH,ICHEM,IMAGIC,NOSTAR,NUTEQ,INP1,IPHOS)
      CLOSE(UNIT=INP1,STATUS='KEEP')
C     
C     ..MAKE SURE WE'RE NOT IN DEBUG MODE
      IF(NSC.NE.-1) THEN
C       
C       ..CONCATENATE TABULAR FILES
        CALL CLOSER(1)
C       
C       ..CHECK FOR ILLEGAL SCALAR PLOT CHOICES
        IF(NSC.EQ.7) THEN
          ISCA=SNMVAR
        ELSE
          ISCA=1
          DO 10 I=1,MAXSCA
            SCASSL(I)=ASSSL(NSC,I)
            IF(SCASSL(I).NE.0.AND.ISTAB.NE.0) ISCA=ISCA+1
   10     CONTINUE
        ENDIF
        IF(NSC.NE.7.AND.ISPLT.NE.0) THEN
          DO 30 I=2,SNMVAR
            FOUND=.FALSE.
            DO 20 J=1,MAXSCA
              IF(USSSL(I).EQ.SCASSL(J)) FOUND=.TRUE.
   20       CONTINUE
            IF(.NOT.FOUND) STOP
     +          '>> ERROR << SCALAR PLOT CHOICES NOT AVAILABLE'
   30     CONTINUE
        ENDIF
C       
C       ..CHECK FOR ILLEGAL VECTOR PLOT REQUESTS
        IF(NSC.EQ.7) THEN
          IVEC=VNMVAR
        ELSE
          IVEC=2
          DO 40 I=1,MAXVEC
            VECSSL(I)=AVSSL(NSC,I)-1
            IF(VECSSL(I).GT.0.AND.IVTAB.NE.0) IVEC=IVEC+1
   40     CONTINUE
        ENDIF
        IF(NSC.NE.7.AND.IVPLT.NE.0) THEN
          DO 60 I=3,VNMVAR+2
            FOUND=.FALSE.
            DO 50 J=1,MAXVEC
              IF(UVSSL(I)-1.EQ.VECSSL(J).OR.UVSSL(I)-1.EQ.0) FOUND=
     +            .TRUE.
   50       CONTINUE
            IF(.NOT.FOUND) STOP
     +          '>> ERROR << VECTOR PLOT CHOICES NOT AVAILABLE'
   60     CONTINUE
        ENDIF
        ISCA=INT(ISCA/10)+1
        IVEC=INT(IVEC/10)+1
C       
C       ..OPEN CONTROL FILE AND APPROPRIATE OUTPUT FILES
C       PRINT*,ISCA,IVEC
        CALL OPENER(2,NSC)
C       
C       ..PLACE HEADERS ON PLOTTING FILES AND ON SCALAR TABULAR OUTPUT FILES
        CALL PLTHD(NSC,IYYY)
      ENDIF
      SC=NSC
C     
C     ..RETURN TO MAIN PROGRAM
C
      RETURN
      END
C
      SUBROUTINE PLTHD(NSC,IYYY)
C
C======================================================================
C
C       PURPOSE: THE PLTHEAD SUBROUTINE READS THE CONTROL DATA FILE
C             'CNTRL.DAT' AND FILLS THE SCNRIO AND USER VARIABLE
C             SEQUENCE LISTS, THE HEADERS ARE PLACED AT THE TOP OF
C             THE 2-D AND 3-D PLOTTING FILES
C
C       VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C       ASCASS     I   2D ARRAY OF ALL SCNRIO'S SCALAR SEQUENCE LISTS
C       AVECSS     I   2D ARRAY OF ALL SCNRIO'S VECTOR SEQUENCE LISTS
C       CNTRL  I   CONTROL FILE UNIT NUMBER
C       NUMPLO     L   NUMBER OF PLOTS TO BE MADE
C       NUMSCA     P   NUMBER OF SCALAR VARIABLES
C       NUMSCN     P   NUMBER OF SCNRIOS
C       NUMVAR     L   NUMBER OF VARIABLES IN SCNRIO SEQUENCE LIST
C       NUMVEC     P   NUMBER OF VECTOR VARIABLES
C       PLTVAR     L   VECTOR OF PLOTTING VARIABLES
C       SC         I   CURRENT SCNRIO (1-7)
C       SCAPLT     I   SCALAR PLOT FILE UNIT NUMBER
C       SCASSL    I/O  VECTOR OF CURRENT SCNRIO'S SCALAR SEQUENCE LIST
C       SCATAB     I   VECTOR OF SCALAR TABULAR OUTPUT FILE UNIT NUMBERS
C       STAT   L   VECTOR OF STATISTICAL REQUESTS
C       USCASS    I/O  VECTOR OF USER SELECTED SCALAR SEQUENCE LIST
C       UVECSS    I/O  VECTOR OF USER SELECTED VECTOR SEQUENCE LIST
C       VECPLT     I   VECTOR PLOT FILE UNIT NUMBER
C       VECSSL    I/O  VECTOR OF CURRENT SCNRIO'S VECTOR SEQUENCE LIST
C       VECTAB     I   VECTOR OF VECTOR TABULAR OUTPUT FILE UNIT NUMBERS
C
C       COMMENTS:
C
C       EXTERNAL REFERENCES:
C                 ITRIM
C
C       CALLED FROM:  OUTINT
C
C       PROGRAMMER:  SANDY MAPLE
C
C       VERSION:   1
C
C-----------------------------------------------------------------------
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      PARAMETER(NUMSCN=7,NUMSCA=107,NUMVEC=59,IHZNUM=21,MAXSCA=41,MAXVEC
     +    =23,MAXCOL=22)
C
      INTEGER SCASSL(MAXSCA),USSSL(MAXSCA)
      INTEGER VECSSL(MAXVEC+1),UVSSL(MAXVEC+1)
      INTEGER ASSSL(NUMSCN+1,MAXSCA),AVSSL(NUMSCN+1,MAXVEC)
      INTEGER SC,CNTRL,SCAPLT,VECPLT,SCATAB(6),VECTAB(6)
      INTEGER SNMVAR,SNMPLT,VNMVAR,VNMPLT,NSC
      INTEGER SSTAT(MAXSCA)
      INTEGER SPLTVR(MAXCOL,MAXSCA+2),VPLTVR(MAXCOL,MAXSCA+2)
      CHARACTER SCNRIO(NUMSCN+1)*30,SCALAR(NUMSCA)*30,VECTOR(NUMVEC)*30
      CHARACTER HZLABS(IHZNUM)*30
C
      COMMON /SSLIST/ SCASSL,USSSL,VECSSL,UVSSL,ASSSL,AVSSL
      COMMON /FUNIT/ SC,CNTRL,SCAPLT,VECPLT,SCATAB,VECTAB,ISCA,IVEC
      COMMON /LABLS/ SCNRIO,SCALAR,VECTOR,HZLABS
      COMMON /SC1/ ISTAB,IVTAB,ISPLT,IVPLT
C
      COMMON /CNTL/ SNMVAR,SNMPLT,VNMVAR,VNMPLT,SSTAT,SPLTVR,VPLTVR
C
      INTEGER DSSTAT(MAXSCA)
      INTEGER DUSSSL(MAXSCA),DUVSSL(MAXSCA)
      INTEGER DSPTVR(MAXCOL,MAXSCA+2),DVPTVR(MAXCOL,MAXSCA+2)
      INTEGER ILAST
C
C
      DATA(DUSSSL(I),I=1,11) /7,1,2,36,39,5,40,6,3,46,48/
      DATA(DSSTAT(I),I=1,11) /0,0,0,0,0,0,0,0,0,0,0/
      DATA(DUVSSL(I),I=1,5) /4,1,40,41,2/
      DATA((DSPTVR(I,J),J=1,9),I=1,2) /3,0,1,2,3,0,0,0,0,4,0,4,5,6,7,0,
     +    0,0/
      DATA((DVPTVR(I,J),J=1,3),I=1,3) /0,1,2,0,1,3,0,1,4/
C
C     ..CHECK FOR SWITCH FROM SCENARIO 1 TO SCENARIO 2 AND COMPENSATE
      IF(SC.NE.NSC) THEN
        SNMVAR=7
        SNMPLT=2
        DO 10 I=1,SNMVAR+1
          USSSL(I)=DUSSSL(I)
          SSTAT(I)=DSSTAT(I)
   10   CONTINUE
        DO 30 I=1,SNMPLT
          DO 20 J=1,SNMVAR
            SPLTVR(I,J)=DSPTVR(I,J)
   20     CONTINUE
   30   CONTINUE
        VNMVAR=4
        VNMPLT=3
        DO 40 I=1,VNMVAR+1
          UVSSL(I)=DUVSSL(I)
   40   CONTINUE
        DO 60 I=1,VNMPLT
          DO 50 J=1,VNMVAR
            VPLTVR(I,J)=DVPTVR(I,J)
   50     CONTINUE
   60   CONTINUE
      ENDIF
C     
C     ..FILL SCALAR SEQUENCE LISTS AND CHECK FOR ILLEGAL PLOT REQUESTS
      IF((ISPLT.EQ.1).AND.NSC.EQ.NUMSCN) THEN
        DO 70 I=1,SNMVAR
          SCASSL(I)=USSSL(I+1)
   70   CONTINUE
        DO 80 I=SNMVAR+1,MAXSCA
          SCASSL(I)=-1
   80   CONTINUE
      ENDIF
C     
C     ..FILL VECTOR LISTS AND CHECK FOR ILLEGAL PLOT REQUESTS
      IF(IVPLT.EQ.1.AND.NSC.EQ.NUMSCN) THEN
        J=0
        DO 90 I=1,VNMVAR+1
          J=J+1
          IF(UVSSL(I+1).EQ.1) THEN
            J=J-1
          ELSE
            VECSSL(J)=UVSSL(I+1)-1
          ENDIF
   90   CONTINUE
        DO 100 I=VNMVAR+1,MAXVEC
          VECSSL(I)=-1
  100   CONTINUE
      ENDIF
C     
C     ..WRITE HEADER FOR 2-D BATCH PLOTTING DATA FILE
      IF(ISPLT.EQ.1) THEN
        USSSL(1)=SNMVAR
        WRITE(SCAPLT,1100)
        WRITE(SCAPLT,1000)
        WRITE(SCAPLT,1600) SNMVAR+1,SNMVAR
        WRITE(SCAPLT,1900)
        DO 110 IQ=2,SNMVAR+1
          WRITE(SCAPLT,1600) 1
          WRITE(SCAPLT,1600) 0,1
          WRITE(SCAPLT,1600) IQ-1
          WRITE(SCAPLT,1300) SCALAR(USSSL(IQ))  !'RZWQM2 PLOT'
          WRITE(SCAPLT,1300) 'DAY'
          WRITE(SCAPLT,1300) SCALAR(USSSL(IQ))
  110   CONTINUE
C
C
C       
C       ..WRITE APPROPRIATE SCALAR LABELS TO 2-D PLOTTING FILE
        WRITE(SCAPLT,2000)
        IF(NSC.EQ.1) THEN
          WRITE(SCAPLT,1300) 'MINUTE'
        ELSE
          WRITE(SCAPLT,1300) 'DAY'
        ENDIF
        DO 120 IQ=2,SNMVAR+1
          ILAST=ITRIM(SCALAR(USSSL(IQ)))
          WRITE(SCAPLT,1300) SCALAR(USSSL(IQ))(:ILAST)
  120   CONTINUE
        WRITE(SCAPLT,2100)
        WRITE(SCAPLT,1700) IYYY
      ENDIF
C     
C     ..WRITE HEADER FOR 3-D PLOTTING DATA FILE
C     
      IF(IVPLT.EQ.1) THEN
        WRITE(VECPLT,1200)
        WRITE(VECPLT,1900)
        UVSSL(1)=VNMVAR+1
        WRITE(VECPLT,1700) VNMVAR, 1
C       
C       P3NAM = SCNRIO(NSC)
C       ILAST = ITRIM(P3NAM)
C       WRITE (VECPLT,265)
C       WRITE (VECPLT,200)
C       WRITE (VECPLT,220) P3NAM(:ILAST)
C       WRITE (VECPLT,230)
C       WRITE (VECPLT,240)
C       WRITE (VECPLT,230)
C       IQ = 1
C323    IF (P3NAM(IQ:IQ).NE.' ') THEN
C       IQ = IQ + 1
C       GOTO 323
C       ENDIF
C       IF (IQ.GT.7) IQ = 5
C       P3NAM = P3NAM(:IQ-1)
C       P3NAM(IQ:IQ+5) = '3D.TKF'
C       ILAST = ITRIM(P3NAM)
C       WRITE (VECPLT,220) P3NAM(:ILAST)
C       UVSSL(1) = VNMVAR+1
C       WRITE (VECPLT,250) VNMVAR+2
C       WRITE (VECPLT,220) '***** DATA TRANSLATION *****'
C       WRITE (VECPLT,250) 0
C       WRITE (VECPLT,220) '***** PLOTS *****'
C       WRITE (VECPLT,250) VNMPLT
C       DO 61 I=1,VNMPLT
C       WRITE (VECPLT,260) (VPLTVR(I,J),J=1,3)
C61     CONTINUE
C       
C       ..WRITE APPROPRIATE VECTOR LABELS TO 3-D PLOTTING FILE
        WRITE(VECPLT,2000)
        IF(NSC.EQ.1) THEN
          WRITE(VECPLT,1300) 'MINUTE'
        ELSE
          WRITE(VECPLT,1300) 'DAY'
        ENDIF
        DO 130 IQ=2,VNMVAR+2
          ILAST=ITRIM(VECTOR(UVSSL(IQ)))
          WRITE(VECPLT,1300) VECTOR(UVSSL(IQ))(:ILAST)
  130   CONTINUE
        WRITE(VECPLT,2100)
      ENDIF
C
C     
C     ..OUTPUT FORMAT STATEMENTS
C     
C     ..RETURN TO MAIN PROGRAM
      RETURN
 1000 FORMAT(29('*'),/'* Plot Definitions     *',/
     +    '*  - Number of Columns *',/'*  - Number of Subplots *',/29(
     +    '*'))
 1100 FORMAT('RZWQM2-2D')
 1200 FORMAT('RZWQM2-3D')
 1300 FORMAT(A)
c 1400 FORMAT(' *******************************')
c 1500 FORMAT(' *  INFORMATION TO MAKE PLOTS  *')
 1600 FORMAT(' ',2I3)
 1700 FORMAT(i5,I5)
c 1800 FORMAT(' ',32I3)
 1900 FORMAT(29('*'),/'* Subplot Definitions     *',/29('*'))
 2000 FORMAT(29('*'),/'*   COLUMN LABELS     *',/29('*'))
 2100 FORMAT('****************** DATA STARTS HERE *****************')
      END
C
      SUBROUTINE SGATE(TIME,MSF,V)
C
C======================================================================
C
C       PURPOSE:  THE PURPOSE OF THE SGATE SUBROUTINE IS TO SEND THE
C             GIVEN SCALAR VALUE, V TO THE CORRECT DATA COLLECTION
C             FILES, BOTH TABULAR AND PLOTTING
C
C       VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C       CNTRL  I   CONTROL FILE UNIT NUMBER
C       MSF        I   MASTER SEQUENCE FLAG
C       NUMSCA     P   NUMBER OF SCALAR VARIABLES
C       NUMSCN     P   NUMBER OF SCNRIOS
C       NUMVAL     L   NUMBER OF VALUES IN TABVTR
C       NUMVEC     P   NUMBER OF VECTOR VARIABLES
C       PVECTO     L   VECTOR OF PLOTTABLE DATA
C       SC         I   CURRENT SCNRIO (1-7)
C       SCAPLT     I   SCALAR PLOT FILE UNIT NUMBER
C       SCASSL     I   VECTOR OF CURRENT SCNRIO'S SCALAR SEQUENCE LIST
C       SCATAB     I   VECTOR OF SCALAR TABULAR OUTPUT FILE UNIT NUMBERS
C       TIME  I/O  TIME FACTOR FOR TABULAR OUTPUT
C       TVECTO     L   VECTOR OF TABULAR DATA
C       UNIT   L   DERIVED FILE UNIT NUMBER
C       USCASS     I   VECTOR OF USER SELECTED SCALAR SEQUENCE LIST
C       UVECSS     I   VECTOR OF USER SELECTED VECTOR SEQUENCE LIST
C       V      I   SCALAR VALUE TO BE STORED
C       VECPLT     I   VECTOR PLOT FILE UNIT NUMBER
C       VECSSL     I   VECTOR OF CURRENT SCNRIO'S VECTOR SEQUENCE LIST
C       VECTAB     I   VECTOR OF VECTOR TABULAR OUTPUT FILE UNIT NUMBERS
C
C       COMMENTS:
C
C       EXTERNAL REFERENCES:
C                 SWRITE
C
C       CALLED FROM:  EVERY ROUTINE USED TO GENERATE SCALAR DATA
C
C       PROGRAMMER:  SANDY MAPLE
C
C       VERSION:   1
C
C-----------------------------------------------------------------------
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      PARAMETER(NUMSCN=7,MAXSCA=41,MAXVEC=23,MAXCOL=22)
C
      INTEGER SCASSL(MAXSCA),USSSL(MAXSCA)
      INTEGER VECSSL(MAXVEC+1),UVSSL(MAXVEC+1)
      INTEGER ASSSL(NUMSCN+1,MAXSCA),AVSSL(NUMSCN+1,MAXVEC)
      INTEGER SC,CNTRL,SCAPLT,VECPLT,SCATAB(6),VECTAB(6)
C
      COMMON /SSLIST/ SCASSL,USSSL,VECSSL,UVSSL,ASSSL,AVSSL
      COMMON /FUNIT/ SC,CNTRL,SCAPLT,VECPLT,SCATAB,VECTAB,ISCA,IVEC
      COMMON /SC1/ ISTAB,IVTAB,ISPLT,IVPLT
C
      CHARACTER TF*10
      INTEGER MSF
      LOGICAL FIRST13,FIRSTT
      DIMENSION PLTVTR(MAXCOL),TABVTR(MAXSCA),SUBVTR(9),
     +    ILIST(0:MAXSCA)
C
C    ..TO SEND MSFOUT TO OUTPUT FILE 'MSFSCA.DAT' SET MSFOUT=1
C      PARAMETER(MSFOUT=1)
C
C    ..LIMIT REDEFINITION OF DATA VECTORS
      SAVE PLTVTR,TABVTR,FIRST13,ILIST,FIRSTT,NSCA
      DATA FIRST13 /.TRUE./
C
C    ..CHECK FOR SHUTDOWN
      IF(SC.NE.-1) THEN
C       
C       ..SET TIME FACTOR AND FIND NUMBER SCALARS TO DUMP
        IF(MSF.EQ.-2) THEN
          TF='  DAY   '
          IF(SC.EQ.NUMSCN+1) THEN
            TF='  TIME  '
          ELSEIF(SC.EQ.1) THEN
            TF='  HRS   '
          ENDIF
          NSCA=0
   10     NSCA=NSCA+1
          IF(SCASSL(NSCA).GT.0.AND.NSCA.LT.MAXSCA) GOTO 10
          NSCA=NSCA-1
          ILIST(0)=1
          DO 20 I=1,MAXSCA
            ILIST(I)=SCASSL(I)
   20     CONTINUE
          FIRSTT=.TRUE.
        ENDIF
C
        IF(FIRST13) THEN
          FIRST13=.FALSE.
        ENDIF
C       
C       ..CHECK FOR INPUT STATE VARIABLE OUTPUT FLAG (SC=8)
        IF(SC.EQ.NUMSCN+1) THEN
          JSTAB=ISTAB
          ISTAB=1
          GOTO 60
        ENDIF
C       
C       ..FIND POSITION OF MSF IN USSSL
C       
        IF(ISPLT.EQ.1) THEN
          DO 30 ICOL=1,USSSL(1)
            IF(USSSL(ICOL+1).EQ.MSF) GOTO 40
   30     CONTINUE
          GOTO 50
C         
C         ..STORE V IN
   40     PLTVTR(ICOL)=V
C         
C         ..CHECK FOR PLOT FILE DUMP FLAG
   50     IF(MSF.EQ.-1) CALL SWRITE(TIME,SCAPLT,PLTVTR,USSSL(1))
        ENDIF
C       
C       ..FIND POSITION OF MSF IN SCASSL
        JSTAB=ISTAB
   60   CONTINUE
        IF(ISTAB.EQ.1) THEN
          DO 70 ICOL=1,NSCA
            IF(SCASSL(ICOL).EQ.MSF) GOTO 80
   70     CONTINUE
          GOTO 90
   80     TABVTR(ICOL)=V
C
C         
C         ..CHECK FOR TABULAR DUMP FLAG
   90     IF(MSF.EQ.-1) THEN
            DO 110 IUNIT=1,ISCA
C             
C             ..FIND NUMBER OF COLUMNS TO OUTPUT
              ICOUNT=NSCA-IUNIT*9
              IF(ICOUNT.GE.0) THEN
                ICOL=9
              ELSEIF(ICOUNT.GT.-9) THEN
                ICOL=9+ICOUNT
              ELSE
                IF(FIRSTT) FIRSTT=.FALSE.
                GOTO 120
              ENDIF
              IF(FIRSTT) THEN
                CALL TABHD(ICOL,IUNIT,TF,ILIST)
                IF(IUNIT.EQ.ISCA) FIRSTT=.FALSE.
              ENDIF
              DO 100 I=1,ICOL
                SUBVTR(I)=TABVTR((IUNIT-1)*9+I)
  100         CONTINUE
              CALL SWRITE(TIME,SCATAB(IUNIT),SUBVTR,ICOL)
  110       CONTINUE
            FIRST13=.TRUE.
          ENDIF
        ENDIF
        ISTAB=JSTAB
      ENDIF
C     
C     ..RETURN TO SUBROUTINE IN MAIN PROGRAM
  120 RETURN
C     
C     ..FORMAT STATEMENTS
c 1000 FORMAT(1X,A)
      END
C
      SUBROUTINE SWRITE(TIME,OUTFIL,VECTOR,NUMVAL)
C
C======================================================================
C
C       PURPOSE:  THE PURPOSE OF SWRITE IS TO WRITE THE SCALAR VALUES
C             CONTAINED IN VECTOR TO THE FILE GIVEN BY OUTFIL
C
C       VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C       NUMVAL     I   NUMBER OF VALUES IN TVTOR
C       OUTFIL     I
C       VECTOR     I   LIST OF VECTOR VARIABLE LABELS (20 CHARACTERS LONG)
C
C       COMMENTS:
C
C       EXTERNAL REFERENCES:
C                 NONE
C
C       CALLED FROM:  SGATE
C
C       PROGRAMMER:  SANDY MAPLE
C
C       VERSION:   1
C
C-----------------------------------------------------------------------
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      INTEGER NUMVAL,OUTFIL
      DIMENSION VECTOR(*)
C
C    ..WRITE VECTOR TO OUTFIL
      WRITE(OUTFIL,1000) int(TIME),(VECTOR(I),I=1,NUMVAL)
      DO 10 I=1,NUMVAL
        VECTOR(I)=0.0D0
   10 CONTINUE
C     
C     ..RETURN TO CALLING SUBROUTINE
C
      RETURN
 1000 FORMAT(1X,I10,3x,30G15.6E2)
      END
C
      SUBROUTINE TABHD(ICOL,IUNIT,TF,ILIST)
C
C======================================================================
C
C       PURPOSE:  THE TABHD SUBROUTINE PLACES THE APPROPRIATE SCALAR
C             VARIABLE LABELS AT THE HEAD OF THE SCALAR TABULAR FILES
C
C       VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C       CNTRL  I   CONTROL FILE UNIT NUMBER
C       NUMCOL     P   NUMBER OF COLUMNS PER TABULAR OUTPUT FILE
C       NUMSCA     P   NUMBER OF SCALAR VARIABLES
C       NUMSCN     P   NUMBER OF SCNRIOS
C       NUMVAR     L   NUMBER OF VARIABLES IN SCNRIO SEQUENCE LIST
C       NUMVEC     P   NUMBER OF VECTOR VARIABLES
C       SC         I   CURRENT SCNRIO (1-7)
C       SCAPLT     I   SCALAR PLOT FILE UNIT NUMBER
C       SCASSL     I   VECTOR OF CURRENT SCNRIO'S SCALAR SEQUENCE LIST
C       SCATAB     I   VECTOR OF SCALAR TABULAR OUTPUT FILE UNIT NUMBERS
C       USCASS     I   VECTOR OF USER SELECTED SCALAR SEQUENCE LIST
C       UVECSS     I   VECTOR OF USER SELECTED VECTOR SEQUENCE LIST
C       VECPLT     I   VECTOR PLOT FILE UNIT NUMBER
C       VECSSL     I   VECTOR OF CURRENT SCNRIO'S VECTOR SEQUENCE LIST
C       VECTAB     I   VECTOR OF VECTOR TABULAR OUTPUT FILE UNIT NUMBERS
C
C       COMMENTS:
C
C       EXTERNAL REFERENCES:
C                 FIXLAB
C
C       CALLED FROM:  OUTINT
C
C       PROGRAMMER:  SANDY MAPLE
C
C       VERSION:   1
C
C-----------------------------------------------------------------------
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      PARAMETER(NUMSCN=7,NUMSCA=107,NUMVEC=59,IHZNUM=21,MAXSCA=41)
C
      INTEGER SC,CNTRL,SCAPLT,VECPLT,SCATAB(6),VECTAB(6)
      CHARACTER SCNRIO(NUMSCN+1)*30,SCALAR(NUMSCA)*30,VECTOR(NUMVEC)*30
      CHARACTER HZLABS(IHZNUM)*30
C
      COMMON /FUNIT/ SC,CNTRL,SCAPLT,VECPLT,SCATAB,VECTAB,ISCA,IVEC
C
      COMMON /LABLS/ SCNRIO,SCALAR,VECTOR,HZLABS
C
      CHARACTER TF*10,TFF*10
      CHARACTER LABELP(10)*12,LABELS(10)*12
      INTEGER ILIST(0:MAXSCA),IUNIT
C
C    ..PLACE APPROPRIATE LABELS ON THE SCALAR TABULAR FILES
      TFF=TF
      J=0
      DO 10 I=(IUNIT-1)*9+1,(IUNIT-1)*9+ICOL
        J=J+1
        CALL FIXLAB(LABELP(J),LABELS(J),SCALAR(ILIST(I)))
   10 CONTINUE
      WRITE(SCATAB(IUNIT),*) ' '
      IF(SC.EQ.NUMSCN+1) THEN
        WRITE(SCATAB(IUNIT),1200)
      ELSE
        WRITE(SCATAB(IUNIT),1100) SCNRIO(SC)
      ENDIF
      WRITE(SCATAB(IUNIT),1000) TFF,(LABELP(J),J=1,ICOL)
      WRITE(SCATAB(IUNIT),1000) ' ',(LABELS(J),J=1,ICOL)
      WRITE(SCATAB(IUNIT),*) ' '
C     
      RETURN
 1000 FORMAT(' ',A8,5X,9A13)
 1100 FORMAT(' ',12('*'),' SCENARIO:  ',A20,'   ',79('*'))
 1200 FORMAT(' ',12('*'),' INPUT DATA ',101('*'))
      END
C
      SUBROUTINE VGATE(TIME,MSF,V)
C
C======================================================================
C
C       PURPOSE:  THE PURPOSE OF THE SGATE SUBROUTINE IS TO SEND THE
C             GIVEN VECTOR VALUE, V TO THE CORRECT DATA COLLECTION
C             FILES, BOTH TABULAR AND PLOTTING
C
C       VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C       CNTRL  I   CONTROL FILE UNIT NUMBER
C       MSF        I   MASTER SEQUENCE FLAG
C       MXNOD  P   MAXIMUM LENGTH OF VECTORS
C       NUMSCA     P   NUMBER OF SCALAR VARIABLES
C       NUMSCN     P   NUMBER OF SCNRIOS
C       NUMV   L   NUMBER OF DATA VALUES
C       NUMVEC     P   NUMBER OF VECTOR VARIABLES
C       PTABLE     L   ARRAY OF DATA VECTORS FOR PLOTTING FILE
C       SC         I   CURRENT SCNRIO (1-7)
C       SCAPLT     I   SCALAR PLOT FILE UNIT NUMBER
C       SCASSL     I   VECTOR OF CURRENT SCNRIO'S SCALAR SEQUENCE LIST
C       SCATAB     I   VECTOR OF SCALAR TABULAR OUTPUT FILE UNIT NUMBERS
C       TIME   I   TIME FACTOR FOR TABULAR OUTPUT
C       TTABLE     L   ARRAY OF DATA VECTORS FOR TABULAR OUTPUT FILES
C       UNIT   L   DERIVED FILE UNIT NUMBER
C       USCASS     I   VECTOR OF USER SELECTED SCALAR SEQUENCE LIST
C       UVECSS     I   VECTOR OF USER SELECTED VECTOR SEQUENCE LIST
C       V      I   VECTOR VALUES TO BE STORED
C       VECPLT     I   VECTOR PLOT FILE UNIT NUMBER
C       VECSSL     I   VECTOR OF CURRENT SCNRIO'S VECTOR SEQUENCE LIST
C       VECTAB     I   VECTOR OF VECTOR TABULAR OUTPUT FILE UNIT NUMBERS
C
C       COMMENTS:
C
C       EXTERNAL REFERENCES:
C                 VTAB
C                 VWRITE
C
C       CALLED FROM:  EVERY ROUTINE USED TO GENERATE VECTOR DATA
C
C       PROGRAMMER:  SANDY MAPLE
C
C       VERSION:   1
C
C-----------------------------------------------------------------------
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      PARAMETER(MXNOD=300,MAXHOR=12)
      PARAMETER(NUMSCN=7,MAXSCA=41,MAXVEC=23,MAXCOL=22)
C
      INTEGER SCASSL(MAXSCA),USSSL(MAXSCA)
      INTEGER VECSSL(MAXVEC+1),UVSSL(MAXVEC+1)
      INTEGER ASSSL(NUMSCN+1,MAXSCA),AVSSL(NUMSCN+1,MAXVEC)
      INTEGER SC,CNTRL,SCAPLT,VECPLT,SCATAB(6),VECTAB(6)
C
      COMMON /SSLIST/ SCASSL,USSSL,VECSSL,UVSSL,ASSSL,AVSSL
C
      COMMON /FUNIT/ SC,CNTRL,SCAPLT,VECPLT,SCATAB,VECTAB,ISCA,IVEC
C
      COMMON /SC1/ ISTAB,IVTAB,ISPLT,IVPLT
C
      COMMON /GEOMTR/XLONG,ASPECT,DELZ(MXNOD),ELEV,HORTHK(MAXHOR),SLOPE,
     +    AREA,TL(MXNOD),TLT(MXNOD),XLAT,ZN(MXNOD),NHOR,NN,NNT
C
      CHARACTER TF*3
C
      DIMENSION V(MXNOD),PTABLE(MAXCOL,MXNOD),TTABLE(0:MAXVEC,MXNOD),
     +    ILIST(0:MAXVEC),SUBTAB(0:9,MXNOD)
C
C    ..LIMIT REDEFINITION OF DATA VECTOR TABLES
C
      SAVE PTABLE,TTABLE,ILIST,LENGTH,NVAR
C
C    ..CHECK FOR INITIALIZATION FLAG AND SHUTDOWN
      IF(SC.NE.-1) THEN
C       
        IF(MSF.EQ.-2) THEN
C         
C         ..SET LENGTH AND NUMBER OF OUTPUT VECTORS
C         
          LENGTH=NN
          TF='DAY'
          IF(SC.EQ.1) THEN
            LENGTH=NNT
            TF='HRS'
          ENDIF
          NVAR=0
   10     NVAR=NVAR+1
          IF(VECSSL(NVAR).NE.-1.AND.NVAR.LT.MAXVEC) GOTO 10
          NVAR=NVAR-1
C         
C         ..ZERO OUT DATA TABLES
C         
          DO 30 J=1,MAXCOL
            DO 20 I=1,MXNOD
              PTABLE(J,I)=0.0D0
   20       CONTINUE
   30     CONTINUE
          DO 50 J=0,MAXVEC
            DO 40 I=1,MXNOD
              TTABLE(J,I)=0.0D0
   40       CONTINUE
   50     CONTINUE
C         
C         ..SET DATA LABEL LIST
C         
          ILIST(0)=1
          DO 60 J=1,NVAR
            ILIST(J)=VECSSL(J)+1
   60     CONTINUE
        ENDIF
C       
C       ..CHECK FOR INPUT STATE VARIABLE OUTPUT FLAG
C       
        IF(SC.EQ.NUMSCN+1) THEN
          JVTAB=IVTAB
          IVTAB=1
          GOTO 110
        ENDIF
C       
C       ..FIND POSITION OF MASTER SEQUENCE FLAG IN PLOT VARIABLES LIST
C       
        IF(IVPLT.EQ.1) THEN
          DO 70 ICOL=1,UVSSL(1)
            IF(UVSSL(ICOL+1).EQ.MSF) GOTO 80
   70     CONTINUE
          GOTO 100
C         
C         ..PLACE INPUT DATA VECTOR IN APPROPRIATE POSITION IN TABULAR DATA
C         VECTOR TABLE
   80     DO 90 J=1,LENGTH
            PTABLE(ICOL,J)=V(J)
   90     CONTINUE
C         
C         ..CHECK FOR PLOT FILE DUMP FLAG
  100     IF(MSF.EQ.-1) CALL VWRITE(TIME,VECPLT,PTABLE,UVSSL(1))
        ENDIF
C       
C       ..IF DATA IS DEPTH PUT IN ZERO POSITION IN TABVTR
        JVTAB=IVTAB
  110   CONTINUE
        IF(IVTAB.EQ.1) THEN
          IF(MSF.EQ.1) THEN
            DO 120 J=1,LENGTH
              TTABLE(0,J)=V(J)
  120       CONTINUE
C         
C         ..ELSE PUT DATA IN APPROPRIATE POSTION IN TABVTR
          ELSE
C           
C           ..FIND POSITION OF MASTER SEQUENCE FLAG IN TABULAR VARIABLES LIST
            DO 140 ICOL=1,NVAR
              IF(VECSSL(ICOL).EQ.MSF-1) THEN
                DO 130 J=1,LENGTH
                  TTABLE(ICOL,J)=V(J)
  130           CONTINUE
              ENDIF
  140       CONTINUE
          ENDIF
C         
C         ..CHECK FOR DATA DUMP CONDITION
          IF(MSF.EQ.-1) THEN
C           
C           ..CYCLE THROUGH EACH OUTPUT FILE
            DO 180 IUNIT=1,IVEC
C             
C             ..FIND NUMBER OF COLUMNS TO OUTPUT
              ICOUNT=NVAR-IUNIT*9
              IF(ICOUNT.GE.0) THEN
                ICOL=9
              ELSEIF(ICOUNT.GT.-9) THEN
                ICOL=9+ICOUNT
              ELSE
                GOTO 190
              ENDIF
C             
C             ..FILL SUBTAB WITH DATA FROM TTABLE
              DO 150 I=1,LENGTH
                SUBTAB(0,I)=TTABLE(0,I)
  150         CONTINUE
              DO 170 J=1,ICOL
                DO 160 I=1,LENGTH
                  SUBTAB(J,I)=TTABLE((IUNIT-1)*9+J,I)
  160           CONTINUE
  170         CONTINUE
C             
C             ..SET DATA TO OUTPUT SUBROUTINE
              CALL VTAB(TIME,VECTAB(IUNIT),SUBTAB,LENGTH,ICOL,IUNIT,TF,
     +            ILIST)
  180       CONTINUE
          ENDIF
        ENDIF
        IVTAB=JVTAB
      ENDIF
C     
C     ..RETURN TO MAIN PROGRAM
  190 RETURN
      END
C
      SUBROUTINE VTAB(TIME,OUTFIL,TABLE,LENGTH,ICOL,IUNIT,TF,ILIST)
C
C======================================================================
C
C       PURPOSE:
C
C       VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C       CNTRL  I   CONTROL FILE UNIT NUMBER
C       MXNOD  P   MAXIMUM LENGTH OF VECTORS
C       N      I
C       NUMSCA     P   NUMBER OF SCALAR VARIABLES
C       NUMSCN     P   NUMBER OF SCNRIOS
C       NUMVEC     P   NUMBER OF VECTOR VARIABLES
C       OUTFIL     I
C       SC         I   CURRENT SCNRIO (1-7)
C       SCAPLT     I   SCALAR PLOT FILE UNIT NUMBER
C       SCASSL     I   VECTOR OF CURRENT SCNRIO'S SCALAR SEQUENCE LIST
C       SCATAB     I   VECTOR OF SCALAR TABULAR OUTPUT FILE UNIT NUMBERS
C       TABLE  I
C       TIME   I   TIME FACTOR FOR TABULAR OUTPUT
C       UNIT   I   DERIVED FILE UNIT NUMBER
C       USCASS     I   VECTOR OF USER SELECTED SCALAR SEQUENCE LIST
C       UVECSS     I   VECTOR OF USER SELECTED VECTOR SEQUENCE LIST
C       VECPLT     I   VECTOR PLOT FILE UNIT NUMBER
C       VECSSL     I   VECTOR OF CURRENT SCNRIO'S VECTOR SEQUENCE LIST
C       VECTAB     I   VECTOR OF VECTOR TABULAR OUTPUT FILE UNIT NUMBERS
C
C       COMMENTS:
C
C       EXTERNAL REFERENCES:
C                 FIXLAB
C
C       CALLED FROM:  VGATE
C
C       PROGRAMMER:  SANDY MAPLE
C
C       VERSION:   1
C
C-----------------------------------------------------------------------
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(MXNOD=300)
      PARAMETER(NUMSCN=7,NUMSCA=107,NUMVEC=59,IHZNUM=21,MAXVEC=23)
C
      INTEGER SC,CNTRL,SCAPLT,VECPLT,SCATAB(6),VECTAB(6)
      CHARACTER SCNRIO(NUMSCN+1)*30,SCALAR(NUMSCA)*30,VECTOR(NUMVEC)*30
      CHARACTER HZLABS(IHZNUM)*30
C
      COMMON /FUNIT/ SC,CNTRL,SCAPLT,VECPLT,SCATAB,VECTAB,ISCA,IVEC
      COMMON /LABLS/ SCNRIO,SCALAR,VECTOR,HZLABS
C
      CHARACTER TF*3
      CHARACTER LABELP(10)*12,LABELS(10)*12
      INTEGER OUTFIL,IUNIT,LENGTH,ILIST
      DIMENSION TABLE(0:9,MXNOD),ILIST(0:MAXVEC)
C
      CALL FIXLAB(LABELP(1),LABELS(1),VECTOR(ILIST(0)))
      J=1
      DO 10 I=(IUNIT-1)*9+1,(IUNIT-1)*9+ICOL
        J=J+1
        CALL FIXLAB(LABELP(J),LABELS(J),VECTOR(ILIST(I)))
   10 CONTINUE
C
      WRITE(OUTFIL,*) ' '
      WRITE(OUTFIL,*) ' '
      IF(SC.EQ.8) THEN
        WRITE(OUTFIL,1000) SCNRIO(SC)
      ELSE
        WRITE(OUTFIL,1100) SCNRIO(SC),TIME,TF
      ENDIF
      WRITE(OUTFIL,1200) (LABELP(I),I=1,ICOL+1)
      WRITE(OUTFIL,1200) (LABELS(I),I=1,ICOL+1)
      WRITE(OUTFIL,*) ' '
C
      DO 20 J=1,LENGTH
        WRITE(OUTFIL,1300) TABLE(0,J),(TABLE(I,J),I=1,ICOL)
   20 CONTINUE
C
      RETURN
 1000 FORMAT(' ',12('*'),'  INITIAL VALUES FOR  SCENARIO:  ',A20,66('*')
     +    )
 1100 FORMAT(' ',12('*'),'   SCENARIO:  ',A20,44('*'),
     +    '    TIME FACTOR = ',G13.5,A3,1X,6('*'))
 1200 FORMAT(' ',10A13)
 1300 FORMAT(1X,F12.1,9G15.6E2)
      END
C
      SUBROUTINE VWRITE(TIME,OUTFIL,TABLE,N)
C
C======================================================================
C
C       PURPOSE:  THE PURPOSE OF VWRITE IS TO WRITE THE VECTOR VALUES
C             CONTAINED IN VECTOR TO THE FILE GIVEN BY OUTFIL
C
C       VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C       CNTRL I/O  CONTROL FILE UNIT NUMBER
C       MXNOD  P   MAXIMUM LENGTH OF VECTORS
C       N      I
C       NUMSCA     P   NUMBER OF SCALAR VARIABLES
C       NUMSCN     P   NUMBER OF SCNRIOS
C       NUMVEC     P   NUMBER OF VECTOR VARIABLES
C       OUTFIL     I
C       SC         I   CURRENT SCNRIO (1-7)
C       SCAPLT     I   SCALAR PLOT FILE UNIT NUMBER
C       SCASSL     I   VECTOR OF CURRENT SCNRIO'S SCALAR SEQUENCE LIST
C       SCATAB     I   VECTOR OF SCALAR TABULAR OUTPUT FILE UNIT NUMBERS
C       TABLE  I
C       TIME   I   TIME FACTOR FOR TABULAR OUTPUT
C       USCASS     I   VECTOR OF USER SELECTED SCALAR SEQUENCE LIST
C       UVECSS     I   VECTOR OF USER SELECTED VECTOR SEQUENCE LIST
C       VECPLT     I   VECTOR PLOT FILE UNIT NUMBER
C       VECSSL     I   VECTOR OF CURRENT SCNRIO'S VECTOR SEQUENCE LIST
C       VECTAB     I   VECTOR OF VECTOR TABULAR OUTPUT FILE UNIT NUMBERS
C
C       COMMENTS:
C
C       EXTERNAL REFERENCES:
C                 NONE
C
C       CALLED FROM:  VGATE
C
C       PROGRAMMER:  SANDY MAPLE
C
C       VERSION:   1
C
C-----------------------------------------------------------------------
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(MXNOD=300,MAXHOR=12)
      PARAMETER(MAXCOL=22)
C
      INTEGER SC,CNTRL,SCAPLT,VECPLT,SCATAB(6),VECTAB(6)
C
      COMMON /FUNIT/ SC,CNTRL,SCAPLT,VECPLT,SCATAB,VECTAB,ISCA,IVEC
C
      COMMON /GEOMTR/XLONG,ASPECT,DELZ(MXNOD),ELEV,HORTHK(MAXHOR),SLOPE,
     +    AREA,TL(MXNOD),TLT(MXNOD),XLAT,ZN(MXNOD),NHOR,NN,NNT
C
      INTEGER N,OUTFIL,LENGTH
      DIMENSION TABLE(MAXCOL,MXNOD)
C
      IF(SC.GT.1) THEN
        LENGTH=NN
      ELSE
        LENGTH=NNT
      ENDIF
C
      DO 10 J=1,LENGTH
        WRITE(OUTFIL,1000) int(TIME),(TABLE(I,J),I=1,N)
   10 CONTINUE
C
      RETURN
 1000 FORMAT(1X,I10,3x,30G15.6E3)
      END
