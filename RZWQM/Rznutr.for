C $Id: Rznutr.for,v 1.1 2002/08/27 23:59:42 rojas Exp $
C
      SUBROUTINE FCORR(FAER,FANAER,FRN2O,PWFPC)
C
C======================================================================
C
C       PURPOSE: CALCULATE CORRECTION FACTOR FOR OXYGEN & MOISTURE
C              CONTENTS
C
C       REF:
C          CASKEY, W.H., AND J.S. SCHEPERS, MODELING OF MICROBIAL
C          ACTIVITY: MINERALIZATION, IMMOBILIZATION, AND DENITRIFI-
C          CATION, IN PROCEEDINGS OF THE NATURAL RESOURCES MODELING
C          SYMPOSIUM (DECOURSEY, ED.), PINGREE PARK, CO, 16-21 OCT
C          1983, USDA-ARS, PUBLICATION ARS-30, APRIL 1985.
C
C       VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C       FAER   O  CORRECTION FACTOR FOR AEROBIC REACTIONS
C       FANAER     O       "  "  "  ANAEROBIC REACTIONS
C       PWFPC     % WATER-FILLED PORE SPACE
C       RHOB   I  BULK DENSITY  [G/CM^3]
C       RHOP   I  PARTICLE DENSITY [G/CM^3]
C       THETA  I  MOISTURE CONTENT
C       FRN2O  O  FRACTION OF DENITRIFICATION THAT IS N20.
C
C       COMMENTS:
C
C       MASS STORAGE FILES:  NONE
C
C       EXTERNAL REFERENCES: NONE
C
C       CALLED FROM: PRCRAT
C
C       PROGRAMMER:  CHARLES S. HEBSON
C       REVISED BY M.J. SHAFFER, 12/91
C
C       VERSION:   1
C
C-----------------------------------------------------------------------
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C ... CALCULATE CORRECTION FACTOR FOR MOISTURE AND OXYGEN CONTENTS
C ... (BASED ON PIECE-WISE LINEARIZATION OF CASKEY & SCHEPERS
C ...  FIGURE 3, P 199)
C      PWFPC = 100.0D0*THETA/(1.D0-RHOB/RHOP+XMAC)
C
C ... FOR ANAEROBIC REACTIONS
      IF (PWFPC.LT.60.0D0) THEN
         FANAER=0.0D0
	ELSE
      FANAER=0.000304D0*DEXP(0.0815D0*PWFPC)
	ENDIF
      FANAER=MIN(1.0D0,FANAER)
      FANAER=MAX(0.0D0,FANAER)
C
C     ... FOR AEROBIC REACTIONS
      IF(PWFPC.LE.20.D0) FAER=0.0075D0*PWFPC
      IF(PWFPC.GT.20.0D0.AND.PWFPC.LT.59.0D0) FAER=-0.253D0+0.0203D0*
     +    PWFPC
      IF(PWFPC.GE.59.0D0) FAER=41.1D0*DEXP(-0.0625D0*PWFPC)
      FAER=MIN(1.0D0,FAER)
      FAER=MAX(0.0D0,FAER)
C
C     COMPUTE FRACTION OF DENITRIFICATION THAT IS N2O.
      IF(PWFPC.GT.60.D0.AND.PWFPC.LE.90.D0) THEN
        FRN2O=3.D0-0.0333333D0*PWFPC
      ELSE
        FRN2O=0.0D0
      ENDIF
      FRN2O=MIN(1.0D0,FRN2O)
      FRN2O=MAX(0.0D0,FRN2O)
C
      RETURN
      END
C
      SUBROUTINE NUTRI(NN,STREN,BD,PPCO2,STEMP,SWC,XNU,CC,JDAY,NSC,
     +    FRACOM,TL,RPOOL,XPH,WIND,TLT,IMAGIC,SDEAD,SDCN,DD,NITNHB,
     +    ANHYD,FPW,NUTEQ,FIELDC,PDEN,snowpk,DAYRAIN,FRACON)
      USE VARIABLE
C
C======================================================================
C
C       PURPOSE:  THIS IS THE MAIN EXECUTIVE ROUTINE FOR THE NUTRIENT
C             CYCLING MODEL
C
C       REF:
C
C       VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C       ANHYD  L  ANHYDROUS-NH3 POOL, USED TO STORE NH4 DURING THE
C                 APPLICATION DELAY PERIOD [MG/L]
C       BAL        L
C       BD         I  BULK DENSITY FOR CURRENT HORIZON [G/CM^3]
C       CARBCV     P
C       CC        I/O TRANSPORT MATRIX FOR MOBILE CHEMICALS [MG/L]
C                 CONTAINS ONLY THE SOLUBLE FORM OF CHEMICAL:
C                 1-HYDROGEN, 2-CALCIUM, 3-SODIUM, 4-MAGNISIUM,
C                 5-CLORINE, 6-BICARBONATE, 7-SULFATE, 8-ALUMINUM,
C                 9-NITRATE-N, 10-AMMONIUM-N, 11-CARBONATE,
C                 12-UREA-N, 13-PEST #1, 14-PEST #2, 15-PEST #3
C       CMB        L
C       CN         I  9-LONG VECTOR OF OM & BM C:N RATIOS (IN SAME ORDER
C                 AS IN C VECTOR)
C       DYDX   L  DERIVATIVE OF STATE VECTOR
C       FACT   L
C       FRACOM    I/O FACTION OF ORGANIC MATTER IN LAYERS [0..1]
C       H     I/O NODAL SOIL WATER PRESSURE HEADS [CM]
C       I      L  INDEX VARIABLE
C       ILAYER     L
C       IMAGIC     I  INDICATOR OF DEBUG OUTPUT
C       INC        L
C       JDAY   I  JULIAN DAY    [1..366]
C       JJ         L
C       MAXBP  P  MAXIMUM NUMBER OF BREAK POINTS IN A RAINSTORM
C       MAXSCT     P  MAX NUMBER OF SOIL CONSTITUENTS PER HORIZON
C       MXAPP  P  MAXIMUM NUMBER OF MANAGEMENT APPLICATIONS
C       MXCHEM     P  MAXIMUM NUMBER OF CHEMICALS SIMULATED
C       MXNOD  P  MAX NUMBER OF NUMERICAL NODES
C       MXNODT     P
C       MXPEST     P  MAXIMUM NUMBER OF PESTICIDES
C       MXSPEC     P
C       NITNHB     I  FLAG CONTROLLING NITRIFICATION SHUTDOWN DUE TO
C                 MANAGEMENT PRACTICE. (0=OFF, 1=REG NH3 APP,
C                 2=NH3 APP W/ N-SERVE) THIS VALUE IS BROUGHT IN
C                 FROM MAFERT.
C       NHBFLG     L  FLAG CONTROLLING NITRIFICATION SHUTDOWN DUE TO
C                 MANAGEMENT PRACTICE. (0=OFF, 1=ON) THIS VALUE IS
C                 THE LOCAL FLAG THAT CYCLES THROUGH DELAY PERIOD.
C       NADLY     DELAY TIME FOR NITRIFICATION TO RESTART AFTER A PLAIN
C                 ANHYDROUS APPLICATION
C       NSDLY     DELAY TIME ATTRIBUTED TO "N-SERV" APPLICATION, IN
C                 ADDITION TO ITEM #1
C       NAREC     LENGTH OF TIME FROM START TO FULL RECOVERY AFTER A
C                 PLAIN ANHYDROUS APPLICATION
C       NSREC     LENGTH OF TIME FROM START TO FULL RECOVERY AFTER A
C                 "N-SERV" anhydrous application
C       NN         I  NUMBER INTERIOR NODES IN RICHARD'S EQN SOLUTION
C       NSC        I  CURRENT OUTPUT SCENARIO NUMBER
C       NSTEP  P  NUMBER STEPS TO INTERGRATE OVER TIME STEP
C       NVAR   P  LENGTH OF STATE VECTOR (NUMBER STATE VARIABLES)
C       OLDPOP     L
C       PBD        L
C       PCO2  I/O PARTIAL PRESSURE OF CO2 [ATM]
C       POPMIN    I/O MINIMUM ALLOWABLE BM POPULATION [# ORG'S]
C       POPSAV     L  BASE MINIMUM ALLOWABLE BM POPULATION [# ORGS]
C       POPDEP     P  DEPTH BELOW WHICH POPULATIONS ARE LIMITED BY RATIO
C                 OF ORGANIC MATTER [CM]
C       PPCO2  I  USER PROVIDED PARTIAL PRESSURE OF CO2 [ATM]
C       RHOB  I/O SOIL BULK DENSITY [G/CM^3]
C       RHOP  I/O SOIL PARTICLE DENSITY [G/CM^3]
C       RM        I/O MASS OF RESIDUE (T/HA)
C       RP         I  PARTICLE DENSITY (G/CM^3)
C       RPOOL I/O RESIDUE POOL, BOTH FAST AND SLOW DECOMPOSERS
C                 [0]--SURFACE RESIDUE,  [1] SLOW DECOMP RESIDUE
C                 [1..NN]--MIXED SOIL RES  [2] FAST DECOMP RESIDUE
C                 UNITS = [G-CARBON / CM^2-SOIL]
C       RPOP   I  3-LONG VECTOR OF BM POPULATION UNIT CONVERSION
C                 CTORS: *RPOP(I): [UG-C/G-SOIL]==>[# ORGS/G-SOIL]
C       SAVE1  L
C       SAVE2  L
C       SAVE3  L
C       SAVE4  L
C       SAVE5  L
C       SAVE6  L
C       SAVE7  L
C       SDEAD I/O  STANDING DEAD MATERIAL [KG/HA]
C       SDCN  I/O  STANDING DEAD C:N RATIO
C       START  L
C       STEMP  I
C       STREN  I
C       SWC        I
C       TAMIN I/O
C       TANIT I/O
C       TDAY   L
C       TDEN   L
C       TEMP  I/O TEMPERATURE OF LAYER (C)
C       THETA I/O VOLUMETRIC WATER CONTENT [CM^3/CM^3]
C       TIMM   L
C       TL         I  NUMERICAL LAYER THICKNESSES [CM]
C       TLDEN I/O LOSS OF NITROGEN DUE TO DENITRIFICATION [KG-N/HA]
C       TLIMM I/O
C       TLT        I  DEPTH TO BOTTOM OF NUMERICAL LAYERS [CM]
C       TLVOL I/O LOSS OF NITROGEN DUE TO VOLATILIZATION [KG-N/HA]
C       TMIN   L  MINIMUM AIR TEMPERATURE [C]
C       TNIT   L
C       TOTCC  L
C       TOTN   L
C       TOTN0  L
C       TOTNN  L
C       TOTWT  L
C       TTIMM  L
C       TUREA  L
C       TVOL   L
C       U     I/O IONIC STRENGTH [MOLES/L]
C       VDEN   L
C       VIMM   L
C       VMIN   L
C       VNIT   L
C       W     I/O WIND RUN (KM/DAY)
C       WHUMUS     L
C       WIND   I
C       WTSOIL     L
C       X1         L  STARTING TIME FOR INTEGRATION
C       X2         L  ENDING TIME FOR INTEGRATION
C       XNU       I/O
C       XPH       I/O
C       YSTART     L
C       ZN        I/O DEPTH TO NUMERICAL NODES [CM]
C
C
C       COMMENTS:   CARBCV IS THE CONVERSION FACTOR FOR CARBON TO OM
C
C       EXTERNAL REFERENCES:
C                 OMNI
C                 SGATE
C                 VGATE
C
C       CALLED FROM: MAIN
C
C       PROGRAMMER: KEN ROJAS
C       REVISED BY M.J. SHAFFER, 12/91
C
C       VERSION: 2.0
C
C======================================================================
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      PARAMETER(NVAR=25,NSTEP=1,CARBCV=1.0D0/0.58D0,POPDEP=30.0D0)
C
C=======================================================================
C
C   ARRAY DIMENSION VALUES
C
C-----------------------------------------------------------------------
C
      PARAMETER(MXNOD=300,MXCHEM=15)
C
C
      COMMON /NUTPAR/ R14,R23,R34,R43,R45,R53,R15,R25,EFFMAX,EFFNIT,
     +    EFFDEN,DENC,RPOP(3),ADCAY,ANIT,ADENIT,AUREA,ADEATH(3),CN(9),
     +    ADCAYV(5),XKP(3),AMETH,FRN2O_NIT,FRN2O_DEN,RNO_N2O,RAINNO,
     +    O2LIM,EFFMETH,ISBUG
C
      COMMON /NUTINP/ H,PCO2,RHOB,RHOP,TEMP,U,THETA,W,ZN,PWFPC,
     +    POPMIN(3),NHBFLG
C
      COMMON /NINFO/ TSOTN0,TSOTN,TOTA,TOTL,TAMIN,TANIT,TADRT(2),
     +    TARAIN(2),TAIRR(3),TAFERT(3),TARES(3),TLIMM,TLDEN,TLVOL,
     +    TLRO(3),TLSEP(3),TLDRN(3),TLLAT(3),TAMANR,TMANH4,TAMANR_bal
     +    ,TLN2O,TLNXO,TLNITN2O,TLNITNXO,TLGHGADS,TLGHGADSden
C
      COMMON /CINFO/TAMANC,TADRTC(2),TARESC(3),TOTCO2,TACUREA,YIELDC
     +             ,TAMANC_bal,rco2,tcag,tcbg,TOTCH4,TOTCO2NI
C
      COMMON /RESID/ RM,RESAGE,CRES,HR,RCN,NADLY,NSDLY,NAREC,NSREC,WORM
     +               ,SAI,HSTUBL,WSTUBL
C
      LOGICAL START
      DOUBLE PRECISION NOX_PULSE
      DIMENSION XNU(MXNOD,25),CC(MXNOD,MXCHEM),BD(NN),STEMP(NN),
     +    SWC(NN),YSTART(25),DYDX(25),XPH(MXNOD),FRACOM(NN),TL(NN),
     +    RPOOL(MXNOD,2),TLT(NN),PPCO2(MXNOD),STREN(MXNOD),VMIN(MXNOD),
     +    VDEN(MXNOD),VNIT(MXNOD),VIMM(MXNOD),PBD(MXNOD),FIELDC(MXNOD),
     +    POPSAV(MXNOD,3),ANHYD(NN),FPW(MXNOD),RATION(MXNOD),NUTEQ(12),
     + PDEN(MXNOD),VN2O(MXNOD),VNXO(MXNOD),VMETH(MXNOD),VNITNXO(MXNOD),
     + vco2(mxnod),VDNINXO(MXNOD),FRACON(MXNOD)
C
      SAVE X2,START,PBD,POPSAV,RATION
      DATA START /.TRUE./,RATION /MXNOD*0.0D0/,PI/3.141596D0/
C
      IF(START) THEN
        X2=0.0D0
        NHBFLG=0
        DO 10 I=1,NN
          POPSAV(I,1)=5.0D4
          POPSAV(I,2)=5.0D2
          POPSAV(I,3)=5.0D3
          PBD(I)=BD(I)
   10   CONTINUE
      ENDIF
C
C     .. CHECK FOR MANAGEMENT MODIFIED NITRIFICATION PROCESSES
      IF(NITNHB.GT.0) THEN
        IF(NITNHB.EQ.2) THEN
          NHBFLG=NADLY+NSDLY+1
          NHBDEL=NSREC
        ELSE
          NHBFLG=NADLY+1
          NHBDEL=NAREC
        ENDIF
        IF(NHBDEL.EQ.0) THEN
          DO 20 IL=1,NN
            RATION(IL)=ANHYD(IL)
   20     CONTINUE
        ELSE
          DO 30 IL=1,NN
            RATION(IL)=ANHYD(IL)/NHBDEL
   30     CONTINUE
        ENDIF
      ENDIF
      IF(NHBFLG.NE.0) NHBFLG=NHBFLG-1
C
       TARES(3)=0.0D0
       TARESC(3)=0.0D0
C     .. DECOMPOSE SURFACE RESIDUES
      CALL RDECMP(SDEAD,SDCN,RM,RCN,DD,CN,fpw(1)*1.0d-2,
     +    rpool,tares(3),taresc(3),rco2,worm)
C
C     .. DETERMINE BIO-INCORPORATION
c       IF (RM.GT.0.0D0) 
c     +   CALL BIOTIL(RPOOL,WORM,RCN,CN,RM,TARES(3),TARESC(3))
C
C     ..INITIALIZE FOR **OMNI** MODEL
      X1=X2
      X2=X2+1.0D0
      TOTN0=0.0D0
      TMINE=0.0D0
      TNIT=0.0D0
      TIMM=0.0D0
      TDEN=0.0D0
      TVOL=0.0D0
      TOTN=0.0D0
      TUREA=0.0D0
      W=WIND
	TOCO2 = 0.0D0
	TOCO2NI = 0.0D0
	TOCH4 = 0.0D0
      TN2O=0.0D0
      TNO=0.0D0
      TNIT_N2O=0.0D0
      TNIT_NXO=0.0D0
      TGHGADS=0.0D0
      TGHGADSden=0.0D0
C
C     ---CYCLE THROUGH ALL THE SOIL LAYERS
      DO 130 ILAYER=1,NN
C
        VMIN(ILAYER)=0.0D0
        VDEN(ILAYER)=0.0D0
        VIMM(ILAYER)=0.0D0
        VNIT(ILAYER)=0.0D0
        VN2O(ILAYER)=0.0D0
        VNXO(ILAYER)=0.0D0
        vco2(ilayer)=0.0d0
        VNITNXO(ILAYER)=0.0D0
        VDNINXO(ILAYER)=0.0D0
        VMETH(ILAYER)=0.0D0
        IF(NHBFLG.EQ.0.AND.ANHYD(ILAYER).NE.0.0D0) THEN
          CC(ILAYER,10)=CC(ILAYER,10)+RATION(ILAYER)*10.0D0/(
     +        TL(ILAYER)*SWC(ILAYER))
          ANHYD(ILAYER)=ANHYD(ILAYER)-RATION(ILAYER)
          IF(ANHYD(ILAYER).LT.1.0D-6) ANHYD(ILAYER)=0.0D0
        ENDIF
        H=-LOG10(CC(ILAYER,1))
        XPH(ILAYER)=H
        U=STREN(ILAYER)
        PCO2=PPCO2(ILAYER)
        RHOB=BD(ILAYER)
        RHOP=PDEN(ILAYER)
        TEMP=STEMP(ILAYER)
        THETA=SWC(ILAYER)
        ZN=TLT(ILAYER)
        PWFPC=FPW(ILAYER)
C DEPTH EFFECTS FROM THE FASSET MODEL, OLESEN ET AL 2002, FIELD CROPS RESEARCH 74:131-149.
        DepthN2O=1.0008d0-0.0343d0*(zn/1.d2)-3.186d0*(zn/1.0d2)**2
        DepthN2O=dmin1(1.0d0,DepthN2O)
        DepthN2O=dmax1(0.0d0,DepthN2O)
C
C       ..GET RESIDUE MASS... CONVERT FROM G-C/CM^2 ==> UG-C/G-SOIL
        FACT=1.0D6/(TL(ILAYER)*BD(ILAYER))
        XNU(ILAYER,1)=RPOOL(ILAYER,1)*FACT
        XNU(ILAYER,2)=RPOOL(ILAYER,2)*FACT
C
        DO 40 INC=1,20
          YSTART(INC)=XNU(ILAYER,INC)
   40   CONTINUE
        YSTART(10)=CC(ILAYER,12)/28000.0D0
        YSTART(11)=CC(ILAYER,9)/14000.0D0
        YSTART(12)=CC(ILAYER,10)/14000.0D0
C
C       ..MASS BALANCE CONVERSION FACTOR CMB ==>KG N/HA SOIL
        CMB=14000.D0*THETA*TL(ILAYER)*0.1D0
C
C       COMPUTE INITIAL VALUE FOR NO3-N + NH4-N (KG N/HA SOIL)
C       IN THE ENTIRE SOIL PROFILE.
        TOTN0=TOTN0+(YSTART(11)+YSTART(12))*CMB
C
c        write (555,fmt=444) ilayer,theta, 
c     +         ystart(11)*cmb,ystart(12)*cmb,totn0
c444     format (i4,5(f13.6))
C       SAVE MASS VALUES AT START OF TIME STEP.
C       UNITS ARE KG N/HA SOIL AFTER CONVERSION FROM MOLES/L.
        SAVE1=YSTART(10)*2.D0*CMB
        SAVE2=YSTART(14)*CMB
        SAVE3=YSTART(18)*CMB
        SAVE4=YSTART(15)*CMB
        SAVE5=YSTART(13)*CMB   !+YSTART(16)+YSTART(20))*CMB
        SAVE6=YSTART(17)*CMB
        SAVE7=(YSTART(19)+YSTART(21))*CMB
C Liwang Ma, CO2 
        CONV1=TL(ILAYER)*BD(ILAYER)*0.1D0
        SAVE8=YSTART(6)*CONV1
        SAVE9=YSTART(23)*CONV1
        SAVE10=(YSTART(16)+YSTART(21))*CMB
        SAVE11=(YSTART(20)+YSTART(22))*CMB
        SAVE12=YSTART(21)*CMB
        SAVE13=YSTART(22)*CMB
        SAVE14=YSTART(24)*CONV1
c        SAVE12=(YSTART(21)+YSTART(22))*CMB
c        SAVE13=(YSTART(16)+YSTART(20))*CMB
C
C       TEST MICROBIAL POPULATIONS FOR MINIMUM VIABLE SIZE. RESET IF
C       NECESSARY.
C
        IF(NUTEQ(1).EQ.0) THEN
          DO 50 INC=1,3
C
C           ..ADJUST POPULATION MIN FOR CHANGE IN BULK DENSITY
            IF(BD(ILAYER).NE.PBD(ILAYER)) POPSAV(ILAYER,INC)=
     +          POPSAV(ILAYER,INC)*PBD(ILAYER)/BD(ILAYER)
            IF(YSTART(INC+6).LT.POPSAV(ILAYER,INC).AND.START) THEN
C             OLDPOP = YSTART(INC+6)
              IF(TLT(ILAYER).LT.POPDEP) THEN
                YSTART(INC+6)=POPSAV(ILAYER,INC)
              ELSE
                IF(FRACOM(1).GT.0.0D0.AND.FRACOM(ILAYER).GT.0.0D0) THEN
                  YSTART(INC+6)=FRACOM(ILAYER)/FRACOM(1)*
     +                POPSAV(ILAYER,INC)
                ELSE
                  YSTART(INC+6)=1.0D-3*POPSAV(ILAYER,INC)
                ENDIF
              ENDIF
C           WRITE (*,1000) INC, ILAYER, OLDPOP, YSTART(INC+6)
            ENDIF
            POPMIN(INC)=POPSAV(ILAYER,INC)*1.0D-3
            YSTART(INC+6)=MAX(YSTART(INC+6),POPMIN(INC))
   50     CONTINUE
        ENDIF
C
C       ..SAVE BULK DENSITY FOR NEXT DAY
        PBD(ILAYER)=BD(ILAYER)
C
C
C===============================================
C======  FIND SOLUTION FOR THIS LAYER  =========
C===============================================
C
         CALL OMNI(YSTART,DYDX,NVAR,X1,X2,NSTEP)
C
c        if (pwfpc.le.62) then
c        PWFPC_NIT=(0.4*pwfpc*1.0d-2-1.04)/(pwfpc*1.0d-2-1.04) ! Bessou et al. Euro J Soil Sci. 2010, 61:348-363. NOE2
c        else if (pwfpc.gt.62.and.pwfpc.le.80) then
c        PWFPC_NIT=(0.4*pwfpc*1.0d-2-1.04)/(pwfpc*1.0d-2-1.04)*0.11 !
c        endif
C FROM CENTURY MODEL
C      FUNCTION NO_N2O(ppt,snow,afiel,bulkd,partdens,avgwfps)
      rainNO = nox_pulse(DAYRAIN, SNOWPK)
      dDO=diffusiv(FIELDC(ILAYER),RHOB,pwfpc*1.0d-2,RHOP) 
      RNO_N2O=8.0D0+(18.0D0*atan(0.75D0*PI*(10.D0*dDO-1.86D0)))/PI 
C  FOR AGRICULTURAL LAND
      RNO_N2O=RNO_N2O*0.5D0
      ppmno3=YSTART(11)*14000.0D0*theta/rhob
      co2kg=ABS(YSTART(6)*CONV1-SAVE8)
      co2ppm=ABS(YSTART(6)*CONV1-SAVE8)/CONV1
      Frn2o_den=1.0d0/(1.0d0+
     +  RNO_N2O + Rn2n2o(dDO,co2ppm,pwfpc*1.0d-2,ppmno3))
      FRN2O_DEN=MIN(FRN2O_DEN,1.0D0)
C      NO_N2O_RATIO=NO_N2O(DAYRAIN,SNOWPK,FIELDC(ILAYER),rhob,rhop,pwfpc*1.0d-2),
C FROM CENTURY MODEL
C       COMPUTE VALUE FOR NO3-N + NH4-N AT THE END OF THE TIME STEP
C       FOR THE ENTIRE SOIL PROFILE (KG N/HA SOIL).
        TOTN=TOTN+(YSTART(11)+YSTART(12))*CMB
C
        CC(ILAYER,12)=YSTART(10)*28000.0D0
        CC(ILAYER,9)=YSTART(11)*14000.0D0
        CC(ILAYER,10)=YSTART(12)*14000.0D0
        TOTWT=0.0D0
        DO 60 INC=1,12
          XNU(ILAYER,INC)=YSTART(INC)
C
C         ..TOTAL HUMUS AND CONVERT FROM G-CARBON ==> G-OM
          IF(INC.GE.1.AND.INC.LE.5) TOTWT=TOTWT+YSTART(INC)*CARBCV
   60   CONTINUE
        XNU(ILAYER,10)=CC(ILAYER,12)
        XNU(ILAYER,11)=CC(ILAYER,9)
        XNU(ILAYER,12)=CC(ILAYER,10)
        DO 70 INC=13,20
          XNU(ILAYER,INC)=YSTART(INC)
   70   CONTINUE
C
C       ..GET RESIDUE MASS AND CONVERT FROM UG-C/G-SOIL ==> G-C/CM^2
        RPOOL(ILAYER,1)=XNU(ILAYER,1)/FACT
        RPOOL(ILAYER,2)=XNU(ILAYER,2)/FACT
C
C       ..UPDATE FRACTION OF ORGANIC MATTER IN SOIL
        TOTWT=TOTWT+(XNU(ILAYER,7)/RPOP(1)+XNU(ILAYER,8)/RPOP(2)+
     +      XNU(ILAYER,9)/RPOP(3))*CARBCV
        WHUMUS=TOTWT*TL(ILAYER)*RHOB/1.0D6
        WTSOIL=TL(ILAYER)*RHOB
        FRACOM(ILAYER)=WHUMUS/WTSOIL
        TOTON=XNU(ILAYER,1)/CN(1)+XNU(ILAYER,2)/CN(2)+XNU(ILAYER,3)/
     &        CN(3)+XNU(ILAYER,4)/CN(4)+XNU(ILAYER,5)/CN(5)+
     &        XNU(ILAYER,7)/RPOP(1)/CN(7)+
     &        XNU(ILAYER,8)/RPOP(2)/CN(8)+XNU(ILAYER,9)/RPOP(3)/CN(9)
        FRACON(ILAYER)=TOTON*TL(ILAYER)*RHOB/1.0D6/WTSOIL
C
C       ..DETERMINE MASS BALANCE PARAMETERS;; YSTART(10, 14..18) INITIAL
C       UNITS ARE MOLES/L.
C
C
C       COMPUTE TOTAL NH4-N PRODUCED FROM HYDROLYSIS OF UREA.
        TUREA=TUREA+ABS(YSTART(10)*2.D0*CMB-SAVE1)
C
C       COMPUTE TOTAL NH4-N PRODUCED FROM MINERALIZATION OF RESIDUES & SOM.
        VMIN(ILAYER)=ABS(YSTART(14)*CMB-SAVE2)
        TMINE=TMINE+VMIN(ILAYER)
C
C       COMPUTE TOTAL NH4-N IMMOBILIZED
        VIMM(ILAYER)=ABS(YSTART(18)*CMB-SAVE3)
        TIMM=TIMM+VIMM(ILAYER)
C
C       COMPUTE TOTAL NO3-N IMMOBILIZED.
        TTIMM=ABS(YSTART(15)*CMB-SAVE4)
        TIMM=TIMM+TTIMM
        VIMM(ILAYER)=VIMM(ILAYER)+TTIMM             !why is this different from NH4-N? Liwang Ma, 9-30-2007
C
C       COMPUTE TOTAL NO3-N DENITRIFIED.
        VDEN(ILAYER)=ABS(YSTART(13)*CMB-SAVE5)
        TDEN=TDEN+VDEN(ILAYER)
C
C       COMPUTE TOTAL NH4-N LOST TO NH3 VOLATILIZATION.
        TVOL=TVOL+ABS(YSTART(17)*CMB-SAVE6)
C
C       COMPUTE NITRIFICATION OF NH4-N --> NO3-N
        VNIT(ILAYER)=ABS((YSTART(19)+YSTART(21))*CMB-SAVE7)
        TNIT=TNIT+VNIT(ILAYER)
C
C       COMPUTE TOTAL N2O-N PRODUCED.
        VN2O(ILAYER)=ABS((YSTART(16)+YSTART(21))*CMB-SAVE10)
        TN2O=TN2O+VN2O(ILAYER)*DEPTHN2O
        TGHGADSden=TGHGADSden+VN2O(ILAYER)*(1.0D0-DEPTHN2O)  !NOT NEEDED BECAUSE IT IS BEEN TAKEN CARE OF FOR DENITRIFICATION
C
C       COMPUTE TOTAL NO-N PRODUCED.
        VNXO(ILAYER)=ABS((YSTART(20)+YSTART(22))*CMB-SAVE11)
        TNO=TNO+VNXO(ILAYER)*DEPTHN2O
        TGHGADSden=TGHGADSden+VNXO(ILAYER)*(1.0D0-DEPTHN2O)  !NOT NEEDED BECAUSE IT IS BEEN TAKEN CARE OF FOR DENITRIFICATION
C
C       COMPUTE TOTAL N2O-N PRODUCED FROM NITRIFICATION
        VNITNXO(ILAYER)=ABS((YSTART(21))*CMB-SAVE12)
        TNIT_N2O=TNIT_N2O+VNITNXO(ILAYER)*DEPTHN2O
        TGHGADS=TGHGADS+VNITNXO(ILAYER)*(1.0D0-DEPTHN2O)
C
C       COMPUTE TOTAL NxO-N PRODUCED FROM NITRIFICATION
        VDNINXO(ILAYER)=ABS((YSTART(22))*CMB-SAVE13)
        TNIT_NXO=TNIT_NXO+VDNINXO(ILAYER)*DEPTHN2O
        TGHGADS=TGHGADS+VDNINXO(ILAYER)*(1.0D0-DEPTHN2O)
C
C       COMPUTE TOTAL CO2 LOST TO from soil. LIWANG MA
        VCO2(ilayer)=ABS(YSTART(6)*CONV1-SAVE8)
        TOCO2=TOCO2+vco2(ilayer)
c        CO2new=toco2*10.d0
c
C       COMPUTE TOTAL CO2 assimilated by nitrifiers. LIWANG MA
        TOCO2NI=TOCO2NI+ABS(YSTART(24)*CONV1-SAVE14)
C       COMPUTE TOTAL CH4 LOST TO from soil. LIWANG MA
        VMETH(ILAYER)=ABS(YSTART(23)*CONV1-SAVE9)
        TOCH4=TOCH4+VMETH(ILAYER)

C       ..OUTPUT MASS BALANCE FOR THIS TIME STEP
        IF(IMAGIC.EQ.-5.OR.(IMAGIC.EQ.-4.AND.ILAYER.EQ.NN)) THEN
C
C         COMPUTE A MASS BALANCE FOR NH4-N + NO3-N FOR THIS TIME STEP
C         AND LAYERS 1 THRU NN.
          BAL=TOTN0+ABS(TUREA)+TMINE-TIMM-TDEN-TVOL-TOTN
          WRITE(74,1000) JDAY,TOTN0,TMINE,ABS(TUREA),TIMM,TDEN,TVOL,TOTN,
     +        BAL
          TOTNN=0.0D0
C
C         MASS BALANCE TEST FOR NITROGEN SYSTEM (TOTNN).
C         NOTE THAT UNITS ARE UG N/GM SOIL.
C
C         FIRST ACCOUNT FOR THE TOTAL N IN THE OM POOLS (1-5).
          DO 80 JJ=1,5
            TOTNN=TOTNN+YSTART(JJ)/CN(JJ)
   80     CONTINUE
C
C         NOW ACCOUNT FOR N IN MICROBIAL BIOMASS POOLS (7-9).
          DO 90 JJ=7,9
            TOTNN=TOTNN+YSTART(JJ)/RPOP(JJ-6)/CN(JJ)
   90     CONTINUE
C
C         NOW ACCOUNT FOR N IN THE NH4-N AND NO3-N POOLS.
          DO 100 JJ=11,12
            TOTNN=TOTNN+YSTART(JJ)*14000.D0/RHOB*THETA
  100     CONTINUE
C
C         NOW ACCOUNT FOR N IN THE UREA-N POOL (10).
C
          TOTNN=TOTNN+YSTART(10)*28000.D0/RHOB*THETA
C
C         NOW CORRECT TOTAL FOR N LOSSES TO DENITRIFICATION AND NH4 VOLAT.
C
          TOTNN=TOTNN-YSTART(13)*14000.D0/RHOB*THETA-YSTART(16)*14000.D0
     +        /RHOB*THETA-YSTART(17)*14000.D0/RHOB*THETA
          TOTCC=0.0D0
C
C         MASS BALANCE TEST FOR CARBON SYSTEM (TOTCC).
C         NOTE THAT UNITS ARE UG N/GM SOIL.
C
C         FIRST ACCOUNT FOR THE TOTAL C IN THE OM POOLS (1-5).
C
          DO 110 JJ=1,5
            TOTCC=TOTCC+YSTART(JJ)
  110     CONTINUE
C
C         NOW ACCOUNT FOR C IN MICROBIAL BIOMASS POOLS (7-9).
C
          DO 120 JJ=7,9
            TOTCC=TOTCC+YSTART(JJ)/RPOP(JJ-6)
  120     CONTINUE
C
C         NOW ACCOUNT FOR C IN THE UREA-C POOL (10).
C
          TOTCC=TOTCC+YSTART(10)*12000.D0/RHOB*THETA
C
C         NOW CORRECT TOTAL FOR C LOSSES TO MICROBIAL SINKS + UREA HYDROLYSIS
C         SINK POOL (6).
C
          TOTCC=TOTCC-YSTART(6)-ystart(23)
C
C       WRITE(*,'(I4,1X,18G11.3)')JDAY,(YSTART(JJ)/CN(JJ),JJ=1,
C       15),(YSTART(JJ)/RPOP(JJ-6)/8.D0,JJ=7,9),
C       1YSTART(10)*28000.D0/RHOB*THETA,
C       2(YSTART(JJ)*14000.D0/RHOB*THETA,JJ=11,12),YSTART(12)
C       WRITE(73,'(I4,1X,15G11.3)')JDAY,(YSTART(JJ)/CN(JJ),JJ=1,
C       15),(YSTART(JJ)/RPOP(JJ-6)/8.D0,JJ=7,9),
C       1YSTART(10)*28000.D0/RHOB*THETA,
C       2(YSTART(JJ)*14000.D0/RHOB*THETA,JJ=11,12),
C       3ABS(YSTART(13)*14000.D0/RHOB*THETA),
C       4(ABS(YSTART(JJ)*14000.D0/RHOB*THETA),JJ=16,17),YSTART(12)
        ENDIF
  130 CONTINUE
C     WRITE(*,*) JDAY, ' AT END OF NUTRI - N MASS BAL.= ',TOTNN,
C     1' C MASS BAL. = ',TOTCC,' N2-N = ',
C     1YSTART(13)*14000.D0/RHOB*THETA,' N2O-N = ',
C     2YSTART(16)*14000.D0/RHOB*THETA,' NH3-N VOL.= ',
C     3YSTART(17)*14000.D0/RHOB*THETA,
C     4' CO2-C = ',YSTART(6), ' UNITS ARE UG N OR C/GM SOIL'
C
C
      START=.FALSE.
      TAMIN=TMINE
      TANIT=TNIT
      TLIMM=TIMM
      TLDEN=TDEN
      TLVOL=TVOL
	TOTCO2=TOCO2
	TOTCO2NI=TOCO2NI
      TLN2O=TN2O
      TLNXO=TNO
      TLNITN2O=TNIT_N2O
      TLNITNXO=TNIT_NXO
      TOTCH4=TOCH4
      TLGHGADS=TGHGADS
      TLGHGADSden=TGHGADSden-TGHGADS
      VCO2(1)=VCO2(1)+RCO2   !ADD CO2 FROM SURFACE RESIDUE INTO THE FIRST LAYER 
      IF (RCO2.GT.0.0D0) THEN
        CONTINUE
      ENDIF
      
      IF(NSC.GT.1) THEN
        CALL SGATE(TDAY,19,TMINE)
        CALL SGATE(TDAY,20,TVOL)
        CALL SGATE(TDAY,21,TNIT)
        CALL SGATE(TDAY,99,TN2O)
        CALL SGATE(TDAY,100,TNO)
        CALL SGATE(TDAY,101,TOCH4)
        CALL SGATE(TDAY,102,TOCO2)
        CALL VGATE(TDAY,12,VMIN)
        CALL VGATE(TDAY,13,VDEN)
        CALL VGATE(TDAY,14,VNIT)
        CALL VGATE(TDAY,15,VIMM)
        CALL VGATE(TDAY,55,VN2O)
        CALL VGATE(TDAY,56,VNXO)
        CALL VGATE(TDAY,57,VMETH)
        CALL VGATE(TDAY,58,VCO2)
      ENDIF
C
      RETURN
C     1000 FORMAT (' MICROBIAL POPULATION IN POOL #',I2,' LAYER==>',I3,/,
C     +    ' RESET FROM ==>',F15.2,/,' RESET TO ',F15.2)
 1000 FORMAT(//' PLANT USABLE NITROGEN -- DAY (KG N/HA)',I4,/
     +    ' NH4-N + NO3-N AT START',T50,G15.4,/' ADDITIONS:',/T4,
     +    'MINERALIZATION',T50,G15.4,/T4,'UREA HYDROLYSIS',T50,G15.4,/
     +    ' LOSSES:',/T4,'IMMOBILIZATION',T50,G15.4,/T4,
     +    'DENITRIFICATION',T50,G15.4,/T4,'NH3 VOLATILIZATION',T50,G15
     +    .4,/' NH4-N + NO3-N AT END',T50,G15.4,/T50,15('-'),/
     +    ' N MASS BALANCE AT END OF DAY:',T50,G15.4)
      END
C
      SUBROUTINE NUTRTD(C,DCDT)
C
C======================================================================
C
C     PURPOSE:  CALCULATE TIME DERIVATIVES (I.E. NET RATES OF CHANGE)
C             OF NUTRIENT STATE VARIABLES.
C
C     REF:
C         SHAFFER, M.J., ...
C
C         PARTON ET AL, SIMULATION OF SOIL ORGANIC MATTER FORMATIONS
C         AND MINERALIZATIONS IN SEMIARID ECOSYSTEMS, IN NUTRIENT
C         CYCLING IN AGRICULTURAL ECOSYSTEMS, SPECIAL PUBL 23, COLLEGE
C         OF AGRICULTURE, EXPERIMENT STATIONS, UNIV OF GEORGIA, ATHENS,
C         DEC 1983.
C
C     VARIABLE DEFINITIONS:
C     VARIABLE  I/O   DESCRIPTION
C     --------  ---   -----------
C     ANAGRO      OM DECAY BY DENITRIFICATION SUMMED OVER ALL
C                 OM POOLS [UG-C/G-SOIL/DAY]
C     BMORG           3-LONG VECTOR BM POPULATIONS CONC AS [UG-C/G-SOIL]
C     C        I    13-LONG OMNI STATE VECTOR: 1 -> 5 - STRUCTURAL,
C                 METABOLIC, FAST, MED, & SLOW SOIL OM (OM UNITS
C                 [UGC/G-SOIL]); 6 -> 9 - HETEROTROPHIC (SOIL
C                 DECOMPOSERS), AUTOTROPHIC, & HETEROTROPHIC
C                 (FACULTATIVE) BM (ALL BM HAVE UNITS
C                 [# ORG'S/G-SOIL]); UREA, NO#, NH4, & N SINK
C                 (ALL HAVE UNITS [MOLES/LITER PORE WATER]
C                 NOTE: VALUES OF C ARE FROM LAST TIME STEP
C     XC       I    CONCENTRATION VECTOR FROM MOST RECENT SUB-STEP
C                 IN RUNGE-KUTTA SOLUTION FOR NEW TIME STEP
C     CN       I    9-LONG VECTOR OF OM & BM C:N RATIOS (IN SAME
C                 ORDER AS IN C VECTOR)
C     CDEATH      RATE OF INCREASE OF OM POOL IDP DUE TO BM DEATH
C                 [UG-C/G-SOIL/DAY]
C     CONV            CONVERSION FACTOR:
C                 *CONV: [M-N/L P.W.] ==> [UG-N/G-SOIL]
C     DCDT         O    V: TIME DERIV'S OF NUTRIENT SYSTEM STATE
C                    VECTOR (SEE VECTOR C)
C     DELT         I    TIME STEP [DAYS]
C     DENC            DIMENSIONLESS EFFCIENCY FACTOR:
C                 DENIT RATE ==> ANAEROBIC OM DECAY RATE
C     DENCON      EFFICIENCY FACTOR: FROM DENITRIFICATION RATE
C                  ==> ANAEROBIC OM DECAY RATE.  SAME AS DENC
C                 BUT WITH UNITS OF CONV
C     HETWT           2-LONG VECTOR OF RELATIVE HETERO OM CONC (REL TO
C                 TOTAL HETERO CONC)
C     NHBFLG     I    FLAG CONTROLLING NITRIFICATION SHUTDOWN DUE TO
C                 MANAGEMENT PRACTICE. (0=OFF, 1=ON)
C     RHOB         I    SOIL BULK DENSITY [G/CM^3]
C     RNMIN           NET MINERALIZATION RATE [M-N/L P.W./DAY]
C     RNO3            NET RATE OF CHANGE OF NO3-N [M-N/L P.W./DAY]
C     RNH4            NET RATE OF CHANGE OF NH4-N [M-N/L P.W./DAY]
C     RPOP            3-LONG VECTOR OF BM POPULATION UNIT CONVERSION
C                 FACTORS: *RPOP(I): [UG-C/G-SOIL]==>[# ORGS/G-SOIL]
C     RTRANS      6-LONG VECTOR STORAGE FOR INTRA-OM POOL TRANSFOR-
C                 MATION FACTORS RIJ (SEE SUBR PRCRAT FOR DEF'N
C                 OF RIJ FACTORS)
C     TDDEC           DECAY RATE DUE TO ANEROBIC (DENITRIFYING) ACTION
C                 OF HET-2 (FACULTATIVE) BM [(UG-C/G-SOIL)/DAY]
C     TIME         I    TIME [DAYS]
C
C     COMMENTS:
C          - SEVERAL INPUTS ARE BROUGHT IN VIA LABELED COMMON RATHER
C          THAN SUBROUTINE ARGUEMENT LIST.  SEE ABOVE.
C          - EACH ORGANIC MATTER-C COMPONENT HAS AN ASSOCIATED N
C          COMPONENT.  THE N CONCENTRATION IS SIMPLY THE OM-C
C          CONCENTRATION DIVIDED BY A CONSTANT C:N RATIO. THE ACTUAL
C          N CONCENTRATIONS ARE CALCULATED ELSEWHERE, SINCE THIS
C          ROUTINE IS INTENDED ONLY USE IN CONJUNCTION WITH AN ODE
C          SOLVER AS THE CALCULATOR OF TIME DERIVATIVES.
C          - BIOMASS AMOUNTS ARE IN TERMS OF BIOMASS C, NOT TOTAL
C          BIOMASS AMOUNT OF (C,N, & OTHER SIG ELEMENTS)
C
C     EXTERNAL REFERENCES:
C       SUBROUTINES  PRCRAT, DETADJ, DECADJ, IMMADJ, NRATES,
C                OMNIDC
C       COMMON BLOCKS NUTINP, NUTPAR
C
C     CALLED FROM:   RKDUMB, RK4
C
C     PROGRAMMER: CHARLES S. HEBSON
C
C     VERSION:   1
C
C-----------------------------------------------------------------------
C
C ... DECLARE VARIABLES
C
C     THE DCDT(25) ARRAY IS BASED IN THIS ROUTINE AND IS USED TO HOLD THE
C     DERIVATIVE VALUES FOR THE ORGANIC CARBON CONSTITUENTS, BUG POPULATIONS,
C     AND MINERAL N CONSTITUENTS.
C
      USE VARIABLE
      IMPLICIT DOUBLE PRECISION (A-H,K,O-Z)
      INTEGER IDEATH
      DIMENSION C(25),DCDT(25),ANETN(5),ATMCO2(8),ATMCH4(8)
      DIMENSION B(5),DEATH(3),DECAY(5),DECDEN(5),RCADEN(5),RNADEN(5),
     +    RCABUG(3),RNABUG(3),RCREL(5),BMORG(3),IDEATH(3)
     +    ,RCAMETH(5),RNAMETH(5),DECMETH(5)
      DIMENSION RCD(5,3),RND(5,3),HETWT(3)
C
C ... BRING IN PARAMETERS BY LABELED COMMON
C
      COMMON /NUTPAR/ R14,R23,R34,R43,R45,R53,R15,R25,EFFMAX,EFFNIT,
     +    EFFDEN,DENC,RPOP(3),ADCAY,ANIT,ADENIT,AUREA,ADEATH(3),CN(9),
     +    ADCAYV(5),XKP(3),AMETH,FRN2O_NIT,FRN2O_DEN,RNO_N2O,RAINNO,
     +    O2LIM,EFFMETH,ISBUG
C
      COMMON /NUTINP/ H,PCO2,RHOB,RHOP,TEMP,U,THETA,W,ZN,PWFPC,
     +    POPMIN(3),NHBFLG
C
C
C
C ... PLACE OM TRANSFORMATION RATES IN RCOMTR VECTOR BY EQUIVALENCE
      DIMENSION RCOMTR(8),RNOMTR(8)
C      EQUIVALENCE (RCOMTR(1),RCG32), (RCOMTR(2),RCG34), (RCOMTR(3),RCG35
C     +    ), (RCOMTR(4),RCG41), (RCOMTR(5),RCG43), (RCOMTR(6),RCG54)
C      EQUIVALENCE (RNOMTR(1),RND32), (RNOMTR(2),RND34), (RNOMTR(3),RND35
C     +    ), (RNOMTR(4),RND41), (RNOMTR(5),RND43), (RNOMTR(6),RND54)
C
C-----------------------------------------------------------------------
C
C ... PUT INTRA-OM POOL TRANSFORMATION FACTORS IN VECTOR STORAGE
      DO 10 I=1,5
        B(I)=0.0D0
   10 CONTINUE
C
C     ... CALC BM ORGANIC C FROM (# ORGS/UG DRY C) RATIOS
C     ...  C(7,8,9) :: [# ORGS/G-SOIL]  BMORG :: [UG DRY C/G-SOIL]
C     ...  * RPOP(J):  [UG-C/G-SOIL] ==> [# ORG'S/G-SOIL]
C     ...  / RPOP(J):  [# ORG'S/G-SOIL] ==> [UG-C/G-SOIL
C
      BMORG(1)=C(7)/RPOP(1)
      BMORG(2)=C(8)/RPOP(2)
      BMORG(3)=C(9)/RPOP(3)
      TCHET=BMORG(1)+BMORG(3)
      HETWT(1)=BMORG(1)/TCHET
      HETWT(3)=1.D0-HETWT(1)
C
C     ... CONVERSION FACTOR: * CONV  [M-N/L-P.W.]  ==> [UG-N/G-SOIL]
C     ...             / CONV  [UG-N/G-SOIL] ==> [M-N/L-P.W.]
      CONV=14.0D3*THETA/RHOB
C
C-----------------------------------------------------------------------
C
C     ... CALCULATE PROCESS RATES EQUATIONS & RELATED GROWTH/TRANS
C     ... ("POTENTIAL" RATES)
C
C-----------------------------------------------------------------------
C
C
C     ... CONVERT DENC FOR MOISTURE CONTENT EFFECT & UNITS OF RDEN
      DENCON=DENC*CONV
C
      CALL PRCRAT(B,C,DEATH,DECAY,DECDEN,DENCON,HETWT,IDEATH,RCOMTR,
     +    RNOMTR,RCABUG,RNABUG,RCADEN,RNADEN,RCD,RND,RCREL,RNNSYM,RNSYM,
     +    RHUR,RNHUR,RDEN,ANETN,ANETNI,RNIT,FRN2O,ATMCO2,ANETNID,RMETH
     +    ,RCAMETH,RNAMETH,DECMETH,anetnimeth,ATMCH4,ANETNSUM,ANETNSUMD,
     +    ANETNSUMMETH)
C
C     ..DETERMINE NH3 VOLATILIZATION
      IF(ZN.EQ.1) THEN
        CALL VOLAT(C,RVOL,ADCAY)   !use ADCAY for volatilization constant
      ELSE
        RVOL=0.0D0
      ENDIF
C
C     WRITE(45,*)' RDEN = ',RDEN
C
C-----------------------------------------------------------------------
C     ... CHECK (& CORRECT) POTENTIAL DEATH RATES THAT > AVAILABLE BM
C     ... POPULATION RATE; CORRECT IF NECESSARY
C-----------------------------------------------------------------------
C
c      IF(RDEN.LT.0.D0) ANAGRO=RCADEN(1)+RCADEN(2)+RCADEN(3)+RCADEN(4)+
c     +    RCADEN(5)
c      IF(RMETH.LT.0.D0) ANAGRO1=RCAMETH(1)+RCAMETH(2)+RCAMETH(3)+
c     +    RCAMETH(4)+RCAMETH(5)
C
C-----------------------------------------------------------------------
C     ... CHECK THAT COMBINED AEROBIC/ANAEROBIC DECAY DOES NOT DRIVE OM
C     ... < MIN ALLOWABLE CONC;  CORRECT IF NECESSARY
C-----------------------------------------------------------------------
C
C
C     ... CALC ADDITION TO OM POOL IDP BY DEATH RATE OF BUGS
C
C      CDEATH=0.D0
C      DO 20 I=1,3
C        CDEATH=CDEATH+DEATH(I)/RPOP(I)
C   20 CONTINUE
C
C     COMPUTE NET MINERALIZATION-IMMOBILIZATION OF NH4-N
C     ... (IMMOB IMPLICITLY INC: + = MIN; - = IMMOB)
      RNH4=ANETN(1)+ANETN(2)+ANETN(3)+ANETN(4)+ANETN(5)  !+anetnimeth
C
C     COMPUTE NET RATE OF NO3-N IMMOBILIZATION.
      RNO3=ANETNI+ANETNID+AETNIMETH
C
C-----------------------------------------------------------------------
C     ... CALCULATE OMNI STATE VARIABLE TIME RATES OF CHANGE
C-----------------------------------------------------------------------
C
C     ... CALC DENIT-RELATED VALUES
c      ANAGRO=RCADEN(1)+RCADEN(2)+RCADEN(3)+RCADEN(4)+RCADEN(5)
c      ANAGRO1=RCAMETH(1)+RCAMETH(2)+RCAMETH(3)+RCAMETH(4)+RCAMETH(5)
C     TDDEC    = ANAGRO / EFFDEN
C
C     ... CALC TIME RATES OF CHANGE
      CALL OMNIDC(ANAGRO,DCDT,DEATH,DECAY,DECDEN,RNADEN,RCABUG,RNABUG,
     +    RCOMTR,RDEN,RHOB,RHUR,RNH4,RNO3,RVOL,THETA,RNIT,C,CONV,FRN2O,
     +    ATMCO2,POPMIN,rcaden,dencon,RMETH,ATMCH4
     +    ,RCAMETH,RNAMETH,DECMETH,ANAGRO1,pwfpc,
     +     ANETNI,ANETNID,ANETNSUM,ANETNSUMD,ANETNIMETH,ANETNSUMMETH)
C
C
C-----------------------------------------------------------------------
C
C     ... FINISHED
C
      RETURN
      END
C
C
      SUBROUTINE O2SOL(O2,TK)
C
C======================================================================
C
C       PURPOSE: CALCULATE SATURATION O2(G) SOLUBILITY IN WATER BY
C              TABLE LOOK-UP OR HENRY'S LAW
C
C       REF: WASTEWATER ENGINEERING, METCALF AND EDDY, MCGRAW-HILL,
C          PP 340-343,740, 1972.
C
C       VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C       DT            TEMP INCREMENT OVER NEXT LOWEST TABULATED VALUE
C       H         HENRY'S LAW O2 CONSTANT INTERPOLATED FOR TEMP TK
C       HTAB      HENRY'S LAW O2 CONSTANTS TABULATED AT 10 DEG
C                 INCREMENTS, 0[C] ==> 60 [C]
C       O2         O  O2(G) SOLUBILITY IN WATER  [MOLES/LITER]
C       O2MW      O2 MOLECULAR WEIGHT [MG/MOLE]
C       O2TAB     O2 SATURATION SOLUBILITY IN WATER [MG/LITER],
C                  @ 1 [C] INCREMENTS
C       PO2           PARTIAL PRESSURE OF O2
C       TK         I  TEMPERATURE [K]
C       XMFO2     MOLE FRACTION OF O2 DISSOLVED IN WATER
C       XMH2O     # MOLES IN 1 LITER WATER
C
C       COMMENTS:
C        - PARTIAL PRESSURE OF O2 NOT ADJUSTED FOR TEMPERATURE
C        - THIS CALCULATION ASSUMES WATER SURFACE IS A PLANE; IN
C          UNSATURATED SOIL MOSITURE YOU WOULD ACTUALLY HAVE A CONVEX
C          WATER SURFACE, INDICATING AN ACTUAL SOLUBILITY < THAT
C          CALCULATED HERE.  THE DISCREPANCY IS PRONOUNCED ONLY AT VERY
C          NEGATIVE SOIL WATER PRESSURE HEADS (HIGH TENSIONS).
C          SEE VAN WIJK & DEVRIES, CH 2, PHYSICS OF PLANT ENVIRONMENT,
C          WILEY, NY, 1963.
C
C       MASS STORAGE FILES:  NONE
C
C       EXTERNAL REFERENCES: NONE
C
C       CALLED FROM:  PRCRAT
C
C       PROGRAMMER:  CHARLES S. HEBSON
C
C       VERSION:   1
C
C-----------------------------------------------------------------------
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PO2=0.209D0,XMH2O=55.556D0,O2MW=32.D3)
      DIMENSION HTAB(0:6),O2TAB(0:30)
      DATA HTAB /2.55D0,3.27D0,4.01D0,4.75D0,5.35D0,5.88D0,6.29D0/,O2TAB
     +    /14.62D0,14.23D0,13.84D0,13.48D0,13.13D0,12.80D0,12.48D0,
     +    12.17D0,11.87D0,11.59D0,11.33D0,11.08D0,10.83D0,10.60D0,
     +    10.37D0,10.15D0,9.95D0,9.74D0,9.54D0,9.35D0,9.17D0,8.99D0,
     +    8.83D0,8.68D0,8.53D0,8.38D0,8.22D0,8.07D0,7.92D0,7.77D0,7.63D0
     +    /
C
C-----------------------------------------------------------------------
C
C ... CONVERT TO CELSIUS, >= 0
      TC=MAX(TK-273.15D0,0.D0)
C
C     ... INTERPOLATE IN O2TAB TABLE IF WITHIN TEMP RANGE (0 - 30 [C] )
      IF(TC.LE.29.0D0) THEN
C
C       ... NEXT LOWEST INTEGER TEMP (FOR TABULATED VALUES)
C       .. & CORRESPONDING TEMP DIFF
        ITC=MAX(INT(TC),0)
        DT=TC-DBLE(ITC)
C
        IF(ITC.GT.30.OR.ITC.LT.0) PRINT*,ITC,TC,TK
        O2=(O2TAB(ITC)+(O2TAB(ITC+1)-O2TAB(ITC))*DT)/O2MW
C
      ELSE
C
C       ... INTERPOLATE FOR SATURATION O2 DISSOLVED IN WATER BY HENRY'S LAW
C       ... AT TEMP TC, BET TABULATED TEMPS (10*ITC, 10*(ITC+1) ).
C       ... RESULT IN [MOLES/LITER]
C
C       ... NEXT LOWEST FACTOR-OF-10 INTEGER TEMP (FOR TABULATED VALUES)
C       .. & CORRESPONDING TEMP DIFF
        ITC=MIN(INT(TC/10.0D0),5)
        DT=TC-10.0D0*DBLE(ITC)
C
C       ... INTERPOLATE FOR HENRY'S LAW CONSTANT
        IF(ITC.GT.5.OR.ITC.LT.0) PRINT*,ITC,TC,TK
        H=HTAB(ITC)+DT*(HTAB(ITC+1)-HTAB(ITC))/10.0D0
C
        XMFO2=PO2/H/1.0D4
        O2=XMH2O*XMFO2
      ENDIF
C
C     ...
      RETURN
      END
C
C
      SUBROUTINE OMNI(C,DCDT,NCON,T1,T2,NSTEP)
C
C======================================================================
C
C     PURPOSE: INTEGRATE ORGANIC MATTER/NITROGEN SYSTEM OVER A
C            SINGLE TIME STEP BY 4-TH ORDER RUNGE-KUTTA
C
C     REF:    NONE; DEVISED FOR RZWQM AND OMNI
C
C     VARIABLE DEFINITIONS:
C     VARIABLE  I/O   DESCRIPTION
C     --------  ---   -----------
C     C       I/O   13-LONG OMNI STATE VECTOR: 1 -> 5 - STRUCTURAL,
C                 METABOLIC, FAST, MED, & SLOW SOIL OM (OM UNITS
C                 [UGC/G-SOIL]); 6 -> 9 - HETEROTROPHIC (SOIL
C                 DECOMPOSERS), AUTOTROPHIC, & HETEROTROPHIC
C                 (FACULTATIVE) BM (ALL BM HAVE UNITS
C                 [# ORG'S/G-SOIL]); UREA, NO3, NH4, & N SINK
C                 (ALL HAVE UNITS [MOLES/LITER PORE WATER].
C                 I: VALUES @ T1; O: VALUES @ T2
C     DCDT         A    DERIVATIVE OF CONC. VECTOR
C     NCON         I    LENGTH OF CONC. VECTOR C (NO. CONSTITUENTS)
C     T1       I    STARTING TIME [DAYS]
C     T2       I    ENDING TIME [DAYS]
C     NSTEP        I    NUMBER TIME INCREMENTS IN TIME INTERVAL (T1,T2)
C                 FOR 4-TH ORDER RUNGE-KUTTA INTEGRATION
C
C     COMMENTS:
C        - OM/N DYNAMIC SYSTEM IS CURRENTLY INTEGRATED USING 4-TH ORDER
C          RUNGE-KUTTA METHOD
C        - THIS IS THE BASIC DRIVING SUBR FOR THE OMNI ORGANIC MATTER/
C          NITROGEN CYCLING ALGORITHM
C
C     MASS STORAGE FILES: NONE
C
C     EXTERNAL REFERENCES:
C        - RKDUMB: SIMPLE 4-TH ORDER RUNGE-KUTTA INTEGRATION
C        - OMNIMB: DO MASS BALANCE CHECK ON RESULTS
C
C        COMMON BLOCKS:    NUTPAR, NUTINP
C
C     CALLED FROM: DOES NOT REQUIRE ANY PARTICULAR CALLING ROUTINE
C
C     PROGRAMMER:  CHARLES S. HEBSON
C
C     VERSION:   1
C
C-----------------------------------------------------------------------
C
      USE VARIABLE
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER NCON,NSTEP
      DIMENSION C(NCON),DCDT(NCON)
      EXTERNAL NUTRTD
C
C ... 4-TH ORDER RUNGE-KUTTA INTEGRATION OVER (T1,T2)
      CALL RKDUMB(C,DCDT,NCON,T1,T2,NSTEP,NUTRTD)
      
      IF(Counternode1 > Nnode) THEN
               Counternode1=1
      END IF
      
       DO i=1,5
           IF (C(I).GT. 0.0D0) THEN
           Pdcomr(i)=ABS(DCDT(i)/C(i))
           ELSE
           Pdcomr(i)=0.0D0
           ENDIF
           Pdrn(Counternode1,i) = MIN(Pdcomr(i),0.03)   !Debasis
       END DO
       
       Counternode1 = Counternode1 + 1
C
      RETURN
      END
C
C
      SUBROUTINE OMNIDC(ANAGRO,DCDT,DEATH,DECAY,DECDEN,RNADEN,RCABUG,
     +    RNABUG,RCOMTR,RDEN,RHOB,RHUR,RNH4,RNO3,RVOL,THETA,RNIT,C,CONV,
     +    FRN2O,ATMCO2,POPMIN,rcaden,dencon,RMETH,ATMCH4
     +    ,RCAMETH,RNAMETH,DECMETH,ANAGRO1,pwfpc,
     +     ANETNI,ANETNID,ANETNSUM,ANETNSUMD,ANETNIMETH,ANETNSUMMETH)
C
C=======================================================================
C
C       PURPOSE:  CALCULATE TIME RATE OF CHANGE DCDT OF OMNI CONCENTRATION
C             STATE VECTOR C
C
C     REF:    NONE;    DEVISED FOR RZWQM AND OMNI
C
C     VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C     ANAGRO     I    OM DECAY BY DENITRIFICATION SUMMED OVER ALL
C                 OM POOLS [UG-C/G-SOIL/DAY]
C     DCDT         O    V: TIME DERIV'S OF NUTRIENT SYSTEM STATE
C                    VECTOR (SEE VECTOR C)
C     DEATH        I    3-LONG VECTOR OF POTENTIAL DEATH RATES OF HET-1
C                 (SOIL DECOMPOSERS), AUTO, & HET-2 (FACULTATIVE)
C                 BM, UNITS OF [# ORG'S/DAY]
C     DECAY        I    5-LONG VECTOR OF DECAY RATES OF OM POOLS,
C                 [ (UG-OM/G-SOIL)/DAY ]; POSITIVE
C     DECDEN     I    5-LONG VECTOR OF OM DECAY RATES ATTRIBUTABLE TO
C                 DENITRIFIERS, [ (UG-OM/G-SOIL)/DAY ]
C     RCABUG     I    3-LONG VECTOR OF C ASSIMILATED BY HET-1, AUTO,
C                 & HET-2 POOLS ( (UG C/G-SOIL)/DAY ]
C     RCOMTR     I    6-LONG VECTOR OF RATES OF INCREASE ON OM POOLS
C                 EL 2 => AUTO, THEREFOR UNSUED (AUTO DO NOT DERIVE
C                 DUE TO INTRA-OM POOL TRANSFORMATIONS
C     RDEN         I    DENITRIFICATION RATE (REDUCES NO3, THEREFORE
C                 NEGATIVE (-) )  [MOLES NO3/LITER P.W. / DAY]
C     RHOB         I    SOIL BULK DENSITY  [G/CM^3]
C     RHUR         I    RATE OF HYDROLYSIS OF UREA (NEG, BECAUSE UREA
C                 DECREASES)  [MOLES/LITER P.W. / DAY]
C     RNH4         I    NET RATE OF CHANGE OF NH4-N [M-N/L P.W./DAY]
C     RNO3         I    NET RATE OF CHANGE OF NO3-N [M-N/L P.W./DAY]
C     RNNSYM     I    RATE OF NH4 INCREASE DUE TO NON-SYMBIOTIC FIXATION
C                 (INCREASES NH4, THEREFORE POS (+) )
C                 [ (MOLES NH4/LITER P.W.) / DAY ]
C     RNSYM        I    RATE OF NH4 INCREASE DUE TO NON-SYMBIOTIC FIXATION
C                 (INCREASES NH4, THEREFORE POS (+) )
C     RPOP         I    3-LONG VECTOR OF BM POPULATION UNIT CONVERSION
C                 FACTORS: *RPOP(I): [UG-C/G-SOIL]==>[# ORGS/G-SOIL]
C     RVOL         I    VOLATILIZATION RATE (REDUCES NH4, THEREFORE
C                 NEGATIVE (-) )  [MOLES NH4/LITER P.W. / DAY]
C     TDDEC        I    DECAY RATE DUE TO ANEROBIC (DENITRIFYING) ACTION
C                 OF HET-2 (FACULTATIVE) BM [(UG-C/G-SOIL)/DAY]
C     THETA        I    MOISTURE CONTENT [DIM'LESS]
C
C     FRN2O_NIT        I    FRACTION OF NITRIFICATION THAT IS N2O.
C     FRN2O_DEN        I    FRACTION OF DENITRIFICATION THAT IS N2O.
C
C     COMMENTS:
C
C       MASS STORAGE FILES:  NONE
C
C       EXTERNAL REFERENCES: NONE
C
C       CALLED FROM: NUTRTD
C
C     PROGRAMMER:  CHARLES S. HEBSON
C     REVISED BY M.J. SHAFFER 12/91
C
C     VERSION:   1
C
C-----------------------------------------------------------------------
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION C(25),DCDT(25),DECAY(5),DECDEN(5),DEATH(3),RCABUG(3),
     +    RCOMTR(8),RNABUG(3),RNADEN(5),ATMCO2(8),POPMIN(3),ATMCH4(8),
     +    b(5),rcaden(5),frt(5),DECMETH(5),RNAMETH(5),RCAMETH(5),
     +    anetn(5)
C
      COMMON /NUTPAR/ R14,R23,R34,R43,R45,R53,R15,R25,EFFMAX,EFFNIT,
     +    EFFDEN,DENC,RPOP(3),ADCAY,ANIT,ADENIT,AUREA,ADEATH(3),CN(9),
     +    ADCAYV(5),XKP(3),AMETH,FRN2O_NIT,FRN2O_DEN,RNO_N2O,RAINNO,
     +    O2LIM,EFFMETH,ISBUG
C
C-----------------------------------------------------------------------
C
C ... PLACE OM POOL TRANSFER RATES
C
C    RCOMTR IS CARBON MOVED INTO ANOTHER POOL (UG C/GM SOIL) BY DIRECT TRANSFER
C    NOTE THAT SOME CARBON MAY BE LOST TO CO2 OR GAINED FROM CO2 POOL DEPENDING
C    ON THE RELATIVE C:N RATIOS OF THE POOLS INVOLVED.
C
c      DO 44 II=1,2
C
C     ... CALC NET RATES OF CHANGE OF OM--C
C
C     WHERE DECAY IS CARBON LOST TO AEROBIC MICROBIAL ASSIMILATION + CO2 LOSS,
C     DECDEN IS CARBON LOST TO MICROBIAL ASSIMILATION + CO2 LOSS DURING
C     DENITRIFICATION, AND RCGNN ARE DIRECT CARBON TRANSFERS BETWEEN OM POOLS
C     1 THRU 5.
C
      PWFPC_NIT=(0.4*pwfpc*1.0d-2-1.04)/(pwfpc*1.0d-2-1.04) ! Bessou et al. Euro J Soil Sci. 2010, 61:348-363. NOE2
c
      DCDT(1)=-DECAY(1)-DECDEN(1)-DECMETH(1)
      IF(-DCDT(1).GT.C(1)) THEN !.AND.DCDT(1).NE.0.0D0) THEN
        IF ((DECAY(1)+DECDEN(1)).GT.C(1).AND.
     +      (DECAY(1)+DECDEN(1)).NE.0.0D0) THEN
        DECMETH(1)=0.0D0
c        OVER=dabs(DECAY(1)+DECDEN(1)-C(1))
c        SUMNEG=-DECAY(1)-DECDEN(1)   !DCDT(1)
c        DECAY(1)=DECAY(1)+DECAY(1)/SUMNEG*OVER
c        DECDEN(1)=DECDEN(1)+DECDEN(1)/SUMNEG*OVER
        DECDEN(1)=C(1)-DECAY(1)
        ELSE
        DECMETH(1)=C(1)-DECAY(1)-DECDEN(1)  !DECMETH(1)+DECMETH(1)/SUMNEG*OVER
        ENDIF
        DCDT(1)=-C(1)
c        IF(DECAY(1).LT.0.0D0) DECAY(1)=0.0D0
        IF(DECDEN(1).LT.0.0D0) DECDEN(1)=0.0D0
        IF(DECMETH(1).LT.0.0D0) DECMETH(1)=0.0D0
      ENDIF
C
      DCDT(2)=-DECAY(2)-DECDEN(2)-DECMETH(2)
      IF(-DCDT(2).GT.C(2)) THEN !.AND.DCDT(2).NE.0.0D0) THEN
        IF ((DECAY(2)+DECDEN(2)).GT.C(2).AND.
     +      (DECAY(2)+DECDEN(2)).NE.0.0D0) THEN
        DECMETH(2)=0.0D0
C        OVER=dabs(DECAY(2)+DECDEN(2)-C(2))
C        SUMNEG=-DECAY(2)-DECDEN(2)   !DCDT(1)
C        DECAY(2)=DECAY(2)+DECAY(2)/SUMNEG*OVER
C        DECDEN(2)=DECDEN(2)+DECDEN(2)/SUMNEG*OVER
        DECDEN(2)=C(2)-DECAY(2)
        ELSE
        DECMETH(2)=C(2)-DECAY(2)-DECDEN(2)  
        ENDIF
C        DECMETH(2)=DECMETH(2)+DECMETH(2)/SUMNEG*OVER
        DCDT(2)=-C(2)
C        IF(DECAY(2).LT.0.0D0) DECAY(2)=0.0D0
        IF(DECDEN(2).LT.0.0D0) DECDEN(2)=0.0D0
        IF(DECMETH(2).LT.0.0D0) DECMETH(2)=0.0D0
      ENDIF
C
      RCG32=R23*(DECAY(2)+DECDEN(2)+DECMETH(2))/CN(2)*CN(3)
      RCG34=R43*(DECAY(4)+DECDEN(4)+DECMETH(4))/CN(4)*CN(3)
      RCG35=R53*(DECAY(5)+DECDEN(5)+DECMETH(5))/CN(5)*CN(3)
      DCDT(3)=-DECAY(3)+RCG32+RCG34+RCG35-DECDEN(3)-DECMETH(3)
      IF(-DCDT(3).GT.C(3)) THEN   !.AND.(-DECAY(3)-DECDEN(3)-DECMETH(3)).NE.0.0D0)
C     +    THEN
        IF ((DECAY(3)+DECDEN(3)-RCG32-RCG34-RCG35).GT.C(3).AND.
     +      (DECAY(3)+DECDEN(3)).NE.0.0D0) THEN
        DECMETH(3)=0.0D0
C        OVER=dabs(DECAY(3)+DECDEN(3)-RCG32-RCG34-RCG35-C(3))
C        SUMNEG=-DECAY(3)-DECDEN(3)   !DCDT(1)
C        DECAY(3)=DECAY(3)+DECAY(3)/SUMNEG*OVER
C        DECDEN(3)=DECDEN(3)+DECDEN(3)/SUMNEG*OVER
        DECDEN(3)=C(3)-DECAY(3)+RCG32+RCG34+RCG35
        ELSE
        DECMETH(3)=C(3)-DECAY(3)-DECDEN(3)+RCG32+RCG34+RCG35  
        ENDIF

C        OVER=dabs(-DCDT(3)-C(3))
C        SUMNEG=-DECAY(3)-DECDEN(3)-DECMETH(3)
C        DECAY(3)=DECAY(3)+DECAY(3)/SUMNEG*OVER
C        DECDEN(3)=DECDEN(3)+DECDEN(3)/SUMNEG*OVER
C        DECMETH(3)=DECMETH(3)+DECMETH(3)/SUMNEG*OVER
        DCDT(3)=-C(3)
C        IF(DECAY(3).LT.0.0D0) DECAY(3)=0.0D0
        IF(DECDEN(3).LT.0.0D0) DECDEN(3)=0.0D0
        IF(DECMETH(3).LT.0.0D0) DECMETH(3)=0.0D0
      ENDIF
C
      RCG41=R14*(DECAY(1)+DECDEN(1)+DECMETH(1))/CN(1)*CN(4)
      RCG43=R34*(DECAY(3)+DECDEN(3)+DECMETH(3))/CN(3)*CN(4)
      DCDT(4)=-DECAY(4)+RCG41+RCG43-DECDEN(4)-DECMETH(4)
      IF(-DCDT(4).GT.C(4)) THEN !.AND.(-DECAY(4)-DECDEN(4)-DECMETH(4)).NE.0.0D0)
C     +    THEN
        IF ((DECAY(4)+DECDEN(4)-RCG41-RCG43).GT.C(4).AND.
     +      (DECAY(4)+DECDEN(4)).NE.0.0D0) THEN
        DECMETH(4)=0.0D0
C        OVER=dabs(DECAY(4)+DECDEN(4)-RCG41-RCG43-C(4))
C        SUMNEG=-DECAY(4)-DECDEN(4)   !DCDT(1)
C        DECAY(4)=DECAY(4)+DECAY(4)/SUMNEG*OVER
C        DECDEN(4)=DECDEN(4)+DECDEN(4)/SUMNEG*OVER
        DECDEN(4)=C(4)-DECAY(4)+RCG41+RCG43
        ELSE
        DECMETH(4)=C(4)-DECAY(4)-DECDEN(4)+RCG41+RCG43  
        ENDIF

C        OVER=dabs(-DCDT(4)-C(4))
C        SUMNEG=-DECAY(4)-DECDEN(4)-DECMETH(4)
C        DECAY(4)=DECAY(4)+DECAY(4)/SUMNEG*OVER
C        DECDEN(4)=DECDEN(4)+DECDEN(4)/SUMNEG*OVER
C        DECMETH(4)=DECMETH(4)+DECMETH(4)/SUMNEG*OVER
        DCDT(4)=-C(4)
C        IF(DECAY(4).LT.0.0D0) DECAY(4)=0.0D0
        IF(DECDEN(4).LT.0.0D0) DECDEN(4)=0.0D0
        IF(DECMETH(4).LT.0.0D0) DECMETH(4)=0.0D0
      ENDIF
C
      RCG51=R15*(DECAY(1)+DECDEN(1)+DECMETH(1))/CN(1)*CN(5)
      RCG52=R25*(DECAY(2)+DECDEN(2)+DECMETH(2))/CN(2)*CN(5)
      RCG54=R45*(DECAY(4)+DECDEN(4)+DECMETH(4))/CN(4)*CN(5)
      DCDT(5)=-DECAY(5)+RCG54+RCG51+RCG52-DECDEN(5)-DECMETH(5)
      IF(-DCDT(5).GT.C(5)) THEN !.AND.(-DECAY(5)-DECDEN(5)-DECMETH(5)).NE.0.0D0)
C     +     THEN
        IF ((DECAY(5)+DECDEN(5)-RCG54-RCG51-RCG52).GT.C(5).AND.
     +      (DECAY(5)+DECDEN(5)).NE.0.0D0) THEN
        DECMETH(5)=0.0D0
C        OVER=dabs(DECAY(5)+DECDEN(5)-RCG54-RCG51-C(5))
C        SUMNEG=-DECAY(5)-DECDEN(5)   !DCDT(1)
C        DECAY(5)=DECAY(5)+DECAY(5)/SUMNEG*OVER
C        DECDEN(5)=DECDEN(5)+DECDEN(5)/SUMNEG*OVER
        DECDEN(5)=C(5)-DECAY(5)+RCG54+RCG51+RCG52
        ELSE
        DECMETH(5)=C(5)-DECAY(5)-DECDEN(5)+RCG54+RCG51+RCG52  
        ENDIF

C        OVER=dabs(-DCDT(5)-C(5))
C        SUMNEG=-DECAY(5)-DECDEN(5)-DECMETH(5)
C        DECAY(5)=DECAY(5)+DECAY(5)/SUMNEG*OVER
C        DECDEN(5)=DECDEN(5)+DECDEN(5)/SUMNEG*OVER   ! CHANGED DEC 12, 2006 PER PAT BARTLING
C        DECMETH(5)=DECMETH(5)+DECMETH(5)/SUMNEG*OVER   ! CHANGED DEC 12, 2006 PER PAT BARTLING
        DCDT(5)=-C(5)
C        IF(DECAY(5).LT.0.0D0) DECAY(5)=0.0D0
        IF(DECDEN(5).LT.0.0D0) DECDEN(5)=0.0D0
        IF(DECMETH(5).LT.0.0D0) DECMETH(5)=0.0D0
      ENDIF
C
      FRT(1)=R14+R15
      FRT(2)=R23+R25
      FRT(3)=R34
      FRT(4)=R43+R45
      FRT(5)=R53
      TDDEC=0.0D0
      tdmeth=0.0d0
C
      ANETNsumd=0.0d0
      ANETNsumMETH=0.0d0
      anetnid=0.0d0
      anetniMETH=0.0d0
       DO I=1,5
          TDDEC=TDDEC+DECDEN(I)
          TEMPN=DECDEN(I)-FRT(I)*DECDEN(I)
          RNADEN(I)=TEMPN*(1.0d0/CN(I)-EFFden/cn(9))/CONV
          RCADEN(I)=EFFDEN*tempn  !DECDEN(I)
      Call DENI_ADJ(I,DENCON,RDEN,C,ANETNID,ANETNSUMD,
     &  ANETNsum,anetni,CONV,RCADEN,RNADEN,DECDEN,decay)
       enddo
c
       anetnimeth=0.0d0
       do i=1,5
          TDmeth=TDmeth+DECmeth(I)
          TEMPN=DECMETH(I)-FRT(I)*DECMETH(I)
          RNAMETH(I)=TEMPN*(1.0d0/CN(I)-EFFMETH/cn(9))/(CONV)  !*12.D0/14.D0)
          RCAMETH(I)=EFFMETH* tempn  !DECDEN(I)
      call METH_ADJ(I,DENCON,RMETH,C,ANETNIMETH,ANETNSUMD,ANETNSUMMETH,
     &           ANETNsum,CONV,RCAMETH,RNAMETH,DECMETH,decden,decay)
       ENDDO
        RDEN=TDDEC/(-DENCON)
        Rmeth=TDmeth/(-DENCON)  !*12.0d0/14.d0)
C
        
C-----------------------------------------------------------------------
C     ... CALC NET RATE OF CHANGE OF CO2 SINK
C     ... (SUM CO2 RELEASES FROM OM POOLS & UREA + GAINS FROM ATMOSPHERE WITH
C     AUTOTROPHS).
C-----------------------------------------------------------------------
C
C     COMPUTE CO2 LOST DURING MICROBIAL DECAY OF OM (DOES NOT INCLUDE
C     OM POOL TRANSFERS).
C
      TDECAY=-(1.D0-EFFMAX)*((1.0D0-R14-R15)*DECAY(1)+(1.0D0-R23-R25)*
     +    DECAY(2)+(1.0D0-R34)*DECAY(3)+(1.0D0-R43-R45)*DECAY(4)+(1.D0-
     +    R53)*DECAY(5))
C
C     COMPUTE CO2 LOST (OR GAINED) FROM DIRECT POOL TRANSFERS.
      CATEMP=R23*(DECAY(2)+DECDEN(2)+DECMETH(2))
      ATMCH4(1)=R23*DECMETH(2)/CN(2)*CN(3)-R23*DECMETH(2) !CATEMP
      ATMCO2(1)=CATEMP/CN(2)*CN(3)-CATEMP-ATMCH4(1) !CATEMP
C
      CATEMP=R43*(DECAY(4)+DECDEN(4)+DECMETH(4))
      ATMCH4(2)=R43*DECMETH(4)/CN(4)*CN(3)-R43*DECMETH(4) !CATEMP
      ATMCO2(2)=CATEMP/CN(4)*CN(3)-CATEMP-ATMCH4(2) !CATEMP
C
      CATEMP=R53*(DECAY(5)+DECDEN(5)+DECMETH(5))
      ATMCH4(3)=R53*DECMETH(5)/CN(5)*CN(3)-R53*DECMETH(5) !CATEMP
      ATMCO2(3)=CATEMP/CN(5)*CN(3)-CATEMP-ATMCH4(3) !CATEMP
C
      CATEMP=R14*(DECAY(1)+DECDEN(1)+DECMETH(1))
      ATMCH4(4)=R14*DECMETH(1)/CN(1)*CN(4)-R14*DECMETH(1) !CATEMP
      ATMCO2(4)=CATEMP/CN(1)*CN(4)-CATEMP-ATMCH4(4)
C
      CATEMP=R34*(DECAY(3)+DECDEN(3)+DECMETH(3))
      ATMCH4(5)=R34*DECMETH(3)/CN(3)*CN(4)-R34*DECMETH(3) !CATEMP
      ATMCO2(5)=CATEMP/CN(3)*CN(4)-CATEMP-ATMCH4(5)
C
      CATEMP=R45*(DECAY(4)+DECDEN(4)+DECMETH(4))
      ATMCH4(6)=R45*DECMETH(4)/CN(4)*CN(5)-R45*DECMETH(4) !CATEMP
      ATMCO2(6)=CATEMP/CN(4)*CN(5)-CATEMP-ATMCH4(6)
c
      CATEMP=R15*(DECAY(1)+DECDEN(1)+DECMETH(1))
      ATMCH4(7)=R15*DECMETH(1)/CN(1)*CN(5)-R15*DECMETH(1) !CATEMP
      ATMCO2(7)=CATEMP/CN(1)*CN(5)-CATEMP-ATMCH4(7)
c
      CATEMP=R25*(DECAY(2)+DECDEN(2)+DECMETH(2))
      ATMCH4(8)=R25*DECMETH(2)/CN(2)*CN(5)-R25*DECMETH(2) !CATEMP
      ATMCO2(8)=CATEMP/CN(2)*CN(5)-CATEMP-ATMCH4(8) !CATEMP
c      ANAGRO=RCADEN(1)+RCADEN(2)+RCADEN(3)+RCADEN(4)+RCADEN(5)
c      ANAGRO1=RCAMETH(1)+RCAMETH(2)+RCAMETH(3)+RCAMETH(4)+RCAMETH(5)
      CALL BUG_ADJ(RNABUG,RCABUG,DECAY,DECDEN,DECMETH,C)
C
      TRPOOL=ATMCO2(1)+ATMCO2(2)+ATMCO2(3)+ATMCO2(4)+ATMCO2(5)+
     +    ATMCO2(6)+ATMCO2(7)+ATMCO2(8)
C     COMPUTE CH4 LOST (OR GAINED) FROM DIRECT POOL TRANSFERS.
C
      TCH4POOL=ATMCH4(1)+ATMCH4(2)+ATMCH4(3)+ATMCH4(4)+ATMCH4(5)+
     +    ATMCH4(6)+ATMCH4(7)+ATMCH4(8)
C
C     COMPUTE CO2 PRODUCED FROM UREA HYDROLYSIS.
C
      RCUREA=0.0d0  ! CO2 from urea is not counted in and out. 
c      RCUREA=RHUR*(12000.D0*THETA/RHOB)
C
C     NOTE THAT UNITS ARE UG C/GM SOIL AND THAT NEGATIVE SIGN MEANS A NET
C     LOSS OF CO2 CARBON.  NOTE THE RCABUG(2) IS CARBON GAINED FROM CO2
C     DURING AUTOTROPHIC MICROBIAL ACTIVITY.
C
      DCDT(6)=TDECAY+RCUREA+TRPOOL   !+RCABUG(2)
C
C
C-----------------------------------------------------------------------
C     ... CALC HYDROLYSIS OF UREA (CO(NH2)2 ; PRODUCES NH4-N)
C-----------------------------------------------------------------------
C
      DCDT(10)=RHUR
C     WRITE(*,*) 'RHUR = ', RHUR
C
C-----------------------------------------------------------------------
C     ... CALC NET RATES OF CHANGE OF MINERALIZED N SPECIES (NH4 & NO3)
C-----------------------------------------------------------------------
C
C     ... AMMONIUM--N (NH4)
C
C     COMPUTE NET CHANGE IN NH4-N FROM MINERALIZATION-IMMOBLIZATION, UREA
C     HYDROLYSIS, NH3 VOLATILIZATION, NITRIFICATION (NH4-N TO NO3-N, PLUS
C     NH4-N CONVERSION TO AUTOTROPH BIOMASS).
C
      DCDT(12)=RNH4-2.D0*RHUR+RVOL+RNIT+
     +    RNADEN(1)+RNADEN(2)+RNADEN(3)+RNADEN(4)+RNADEN(5)+
     +    RNAMETH(1)+RNAMETH(2)+RNAMETH(3)+RNAMETH(4)+RNAMETH(5)
     +    -RNABUG(2)/CONV-anetnid-ANETNIMETH
c      DCDT(12)=RNH4-2.D0*RHUR+RVOL+RNIT-RNABUG(2)/CONV+RNADEN(2)+
c     +    RNADEN(3)+RNADEN(4)+RNADEN(5)
C
C     TEST AND MAKE ADJUSTMENTS IN THE PROJECTED RATES IF NH4-N MASS IS
C     BEING OVERRUN.
C
      IF(DCDT(12).LT.0.0D0) THEN
        IF(-DCDT(12).GT.C(12)) THEN
          OVER=dabs(-DCDT(12)-C(12))
            SUMNEG=RVOL+RNIT
            IF (SUMNEG .NE. 0.0D0) THEN
c              RNH4=RNH4-RNH4/SUMNEG*OVER
              RVOL=RVOL+RVOL/SUMNEG*OVER
              RNIT=RNIT+RNIT/SUMNEG*OVER
            ENDIF
c          ELSE
c            SUMNEG=RVOL+RNIT
c            IF (SUMNEG .NE. 0.0D0) THEN
c              RVOL=RVOL+RVOL/SUMNEG*OVER
c              RNIT=RNIT+RNIT/SUMNEG*OVER
c            ENDIF
c          ENDIF
          DCDT(12)=-C(12)
c          IF(RNH4.GT.0.0D0) RNH4=0.0D0
          IF(RVOL.GT.0.0D0) RVOL=0.0D0
          IF(RNIT.GT.0.0D0) RNIT=0.0D0
          CALL NIT_ADJ(RNABUG,RCABUG,RNIT,CONV)
C     ... AUTOTROPHS - NITRIFIERS (retest)
C
        ENDIF
      ENDIF
C
C     ... NITRATE--N (NO3 )
C
C     COMPUTE NET CHANGE IN NO3-N FROM NITRIFICATION, DENITRIFICATION, AND
C     NO3-N IMMOBLILIZATION.
      tot_GHG_nit=(FRN2O_NIT*pwfpc_nit*(1+RNO_N2O*min(1.0d0,RAINNO)))
      if (tot_GHG_nit.gt.1.0d0) then
          FRN2O_NIT=1.0d0/(pwfpc_nit*(1+RNO_N2O*min(1.0d0,RAINNO)))
      endif
c
c      RNIT_NO3=RNIT*max(0.0d0,(1.0D0-FRN2O_NIT*pwfpc_nit-
c     +         FRN2O_NIT*pwfpc_nit*RNO_N2O*min(1.0d0,RAINNO))) 
       RNIT_NO3=RNIT*(1.0d0-tot_GHG_nit)
      DCDT(11)=RNO3+RDEN-RNIT_NO3  !RNABUG(2)/CONV  !+RNADEN(1)
      IF(DCDT(11).LT.0.0D0) THEN
        IF(-DCDT(11).GT.C(11)) THEN
              OVER=dabs(-DCDT(11)-C(11))
          SUMNEG=RDEN
          IF (SUMNEG .NE. 0.0D0) THEN
c              RNO3=RNO3-RNO3/SUMNEG*OVER
              RDEN=RDEN+RDEN/SUMNEG*OVER
c              RNADEN(1)=RNADEN(1)-RNADEN(1)/SUMNEG*OVER
c              IF(RNO3.GT.0.0D0) RNO3=0.0D0
c              IF(RNADEN(1).GT.0.0D0) RNADEN(1)=0.0D0
              IF(RDEN.GT.0.0D0) RDEN=0.0D0

      FRT(1)=R14+R15
      FRT(2)=R23+R25
      FRT(3)=R34
      FRT(4)=R43+R45
      FRT(5)=R53
C
C  ADJUST OTHERS AFTER RDEN IS ADJUSTED
C       UNITS ARE UG C/GM SOIL.
C
        ANETNsumd=0.0d0
        ANETNsumMETH=0.0d0
        anetnid=0.0d0
        anetniMETH=0.0d0
        TDDEC=-DENCON*RDEN
C
C       ... DISTRIBUTE DENITRIFICATION CARBON DECAY OVER OM POOLS (WT'ED BY
C       ... REL AEROBIC DECAY)
C
        TDECAY1=ADCAYV(1)+ADCAYV(2)+ADCAYV(3)+ADCAYV(4)+ADCAYV(5)
        DO 40 I=1,5
          B(I)=ADCAYV(I)/TDECAY1
          DECDEN(I)=B(I)*TDDEC
C
C         DECDEN CANNOT BE GREATER THAN THE AVAILABLE C MASS.
c          IF(DECDEN(I).GT.C(I)) DECDEN(I)=C(I)
C
C         LIMIT DECDEN SO THAT DECAY + DECDEN CANNOT EXCEED AVAILABLE C MASS.
C
c          IF(DECAY(I)+DECDEN(I)+DECMETH(I).GT.C(I)) THEN
c            IF(DECAY(I)+DECDEN(I).GT.C(I)) THEN
c            DECDEN(I)=C(I)-DECAY(I)
c            DECMETH(I)=0.0d0
c            else
c            DECMETH(I)=C(I)-DECAY(I)-DECDEN(I)
c            ENDIF
c            IF(DECDEN(I).LT.0.0D0) DECDEN(I)=0.0D0
c            IF(DECMETH(I).LT.0.0D0) DECMETH(I)=0.0D0
c          ENDIF
C
C         NOW COMPUTE NET MINERALIZATION-IMMOBILIZATION FOR EACH OM POOL
C         ASSOCIATED WITH THIS PROCESS.  UNITS ARE MOLES N/L.  ASSUME THAT
C         MINERALIZATION PRODUCES NH4-N AND IMMOBILIZATION REMOVES NO3-N.
C
          TEMPN=DECDEN(I)-FRT(I)*DECDEN(I)
          RNADEN(I)=TEMPN*(1.0d0/CN(I)-EFFden/cn(9))/CONV
          RCADEN(I)=EFFDEN*tempn  !DECDEN(I)
      Call DENI_ADJ(I,DENCON,RDEN,C,ANETNID,ANETNSUMD,
     &  ANETNsum,anetni,CONV,RCADEN,RNADEN,DECDEN,decay)
C
c          TEMPN=DECMETH(I)-FRT(I)*DECMETH(I)
c          RNAMETH(I)=TEMPN*(1.0d0/CN(I)-EFFMETH/cn(9))/CONV  !*12.D0/14.D0)
c          RCAMETH(I)=EFFMETH* tempn  !DECDEN(I)
   40   CONTINUE
          ENDIF
c              DCDT(11)=-C(11)
              IF(RDEN.GT.0.0D0) RDEN=0.0D0
        ENDIF
      ENDIF
C
      CALL BUG_ADJ(RNABUG,RCABUG,DECAY,DECDEN,DECMETH,C)
C-----------------------------------------------------------------------
C     ... CALC NET BIOMASS GROWTH RATES (IN TERMS OF BM--C)
C-----------------------------------------------------------------------
C
C     ... HETEROTROPHS -- SOIL DEOMPOSERS
C
C     FIRST TEST FOR NET MICROBIAL BIOMASS CARBON PRODUCED
      TEST=RCABUG(1)-DEATH(1)/RPOP(1)
C     IF NET CHANGE IS NEGATIVE, MAKE SURE THAT ENOUGH ORIGINAL BIOMASS
C     WAS PRESENT ABOVE MINIMUM TO ALLOW THIS DECREASE
      IF (ISBUG.EQ.1) THEN
      IF(TEST.LT.0.0D0) THEN
        REMAIN=(C(7)-POPMIN(1))/RPOP(1)
        IF(REMAIN.LT.0.0D0) WRITE(*,*) 'WARNING -- POPULATION BELOW MINI
     +MUM LIKELY -- DETECTED BY REMAIN CHECK ON HETEROTROPH POPULATION'
        IF(REMAIN.LT.-TEST) THEN
          TEST=-REMAIN
          DEATH(1)=(RCABUG(1)-TEST)*RPOP(1)
        ENDIF
      ENDIF
C
C     NOW COMPUTE NET CHANGE IN MICROBIAL POPULATION.
      DCDT(7)=RPOP(1)*TEST
      ELSE
	DCDT(7)=0.0D0
      ENDIF
C
C     ... AUTOTROPHS - NITRIFIERS
C
C     FIRST TEST FOR NET MICROBIAL BIOMASS PRODUCED BY NITRIFIERS.
      TEST=RCABUG(2)-DEATH(2)/RPOP(2)
C
C     MAKE SURE MICROBIAL BIOMASS CARBON WILL STAY ABOVE MINIMUMS.
      IF (ISBUG.EQ.1) THEN
      IF(TEST.LT.0.0D0) THEN
        REMAIN=(C(8)-POPMIN(2))/RPOP(2)
        IF(REMAIN.LT.0.0D0) WRITE(*,*) 'WARNING -- POPULATION BELOW MINI
     +MUM LIKELY -- DETECTED BY REMAIN CHECK ON AUTOTROPH POPULATION'
        IF(REMAIN.LT.-TEST) THEN
          TEST=-REMAIN
          DEATH(2)=(RCABUG(2)-TEST)*RPOP(2)
        ENDIF
      ENDIF
C
C     NOW COMPUTE NET CHANGE IN MICROBIAL POPULATION.
      DCDT(8)=RPOP(2)*TEST
      ELSE
	DCDT(8)=0.0D0
      ENDIF
C     WRITE(*,*) 'DCDT(8)= ',DCDT(8),' RCABUG(2) = ',RCABUG(2),' RPOP(2)
C     1= ',RPOP(2),' DEATH(2)= ',DEATH(2)
C
C     ... HETEROTROPHS -- DENITRIFIERS
C
C     FIRST TEST FOR NET MICROBIAL BIOMASS CARBON PRODUCED
C      TEST=RCABUG(3)+ANAGRO+ANAGRO1-DEATH(3)/RPOP(3)
      TEST=RCABUG(3)-DEATH(3)/RPOP(3)
C
C     IF TEST IS NEGATIVE, MAKE SURE THAT BIOMASS CARBON WILL REMAIN ABOVE
C     MINIMUM.
C
      IF (ISBUG.EQ.1) THEN
      IF(TEST.LT.0.0D0) THEN
        REMAIN=(C(9)-POPMIN(3))/RPOP(3)
        IF(REMAIN.LT.0.0D0) WRITE(*,*) 'WARNING -- POPULATION BELOW MINI
     +MUM LIKELY -- DETECTED BY REMAIN CHECK DENITRIF POPULATION'
        IF(REMAIN.LT.-TEST) THEN
          TEST=-REMAIN
C          DEATH(3)=(RCABUG(3)+ANAGRO+ANAGRO1-TEST)*RPOP(3)
          DEATH(3)=(RCABUG(3)-TEST)*RPOP(3)
        ENDIF
      ENDIF
C
C     NOW COMPUTE NET CHANGE IN BIOMASS POPULATION
C
      DCDT(9)=RPOP(3)*TEST
      ELSE
	DCDT(9)=0.0D0
      ENDIF
C
C     ... BRING IN C FROM DEAD BUGS.
C
      CDEATH=(DEATH(1)/RPOP(1)/CN(7)+
     &       DEATH(2)/RPOP(2)/CN(8)+
     &       DEATH(3)/RPOP(3)/CN(9))*CN(3)
      DCDT(3)=DCDT(3)+CDEATH
      CDEATHADJ=DEATH(1)/RPOP(1)+DEATH(2)/RPOP(2)+
     &       DEATH(3)/RPOP(3)-CDEATH
C     COMPUTE NET MINERALIZATION-IMMOBILIZATION OF NH4-N
C     ... (IMMOB IMPLICITLY INC: + = MIN; - = IMMOB)
c      RNH4=ANETN(1)+ANETN(2)+ANETN(3)+ANETN(4)+ANETN(5)  !+anetnimeth
C
C     COMPUTE NET RATE OF NO3-N IMMOBILIZATION.
      RNO3=ANETNI+ANETNID+ANETNIMETH
C     WRITE(*,*) 'RNO3=', RNO3,' RNH4= ',RNH4
C       COMPUTE TOTAL CARBON DECAY DEMAND FROM DENITRIFICATION ESTIMATE
C     SET ARRAY STORAGE FOR FRACTION POOL TRANSFERS.
C
C
c      RNIT_NO3=RNIT*(1.0D0-FRN2O_NIT*pwfpc_nit-
c     +         FRN2O_NIT*pwfpc_nit*RNO_N2O*min(1.0d0,RAINNO)) 
        DCDT(11)=RNO3+RDEN-RNIT_NO3  !-RNABUG(2)/CONV  !+RNADEN(1)
        DCDT(11)=MIN(-DCDT(11),C(11))*(-1.0D0)
        DCDT(12)=RNH4-2.D0*RHUR+RVOL+RNIT+
     +    RNADEN(1)+RNADEN(2)+RNADEN(3)+RNADEN(4)+RNADEN(5)+
     +    RNAMETH(1)+RNAMETH(2)+RNAMETH(3)+RNAMETH(4)+RNAMETH(5)
     +    -RNABUG(2)/CONV-anetnid-ANETNIMETH
         DCDT(12)=MIN(-DCDT(12),C(12))*(-1.0D0)
      TDECAYD=-(1.0D0-EFFDEN)*((1.0D0-R14-R15)*DECDEN(1)+(1.0D0-R23-
     +    R25)*DECDEN(2)+(1.0D0-R34)*DECDEN(3)+(1.0D0-R43-R45)*
     +    DECDEN(4)+(1.D0-R53)*DECDEN(5))
      TDECAYM=-(1.0D0-EFFMETH)*((1.0D0-R14-R15)*DECMETH(1)+(1.0D0-R23
     +    -R25)*DECMETH(2)+(1.0D0-R34)*DECMETH(3)+(1.0D0-R43-R45)*
     +    DECMETH(4)+(1.D0-R53)*DECMETH(5))
      DCDT(6)=TDECAY+RCUREA+TRPOOL+TDECAYD-CDEATHADJ  !-TDECAYM+RCABUG(2)
C     ... N SINK (N2)
      DCDT(13)=RDEN   !*(1.D0-FRN2O_DEN)
C
C     STORE ADDTIONAL VALUES FOR USE LATER IN MASS BALANCE TESTS & SUMMARIES.
        RNH4net=RNH4+
     +    RNADEN(1)+RNADEN(2)+RNADEN(3)+RNADEN(4)+RNADEN(5)+
     +    RNAMETH(1)+RNAMETH(2)+RNAMETH(3)+RNAMETH(4)+RNAMETH(5)
     +    -RNABUG(2)/CONV-anetnid-ANETNIMETH
      IF(RNH4net.GE.0.0D0) THEN
        DCDT(14)=RNH4net
        DCDT(18)=0.0D0
      ELSE
        DCDT(14)=0.0D0
        DCDT(18)=RNH4net
      ENDIF
        DCDT(15)=RNO3
C
C     N SINK (N20)
      DCDT(16)=RDEN*FRN2O_DEN                            !N2O PRODUCTION from denitrification
      DCDT(17)=RVOL
      DCDT(19)=RNIT*(1.0D0-FRN2O_NIT*pwfpc_nit*
     +                (1+RNO_N2O*min(1.0d0,RAINNO)))
      DCDT(20)=DCDT(16)*RNO_N2O*MIN(1.0D0,RAINNO)       !NxO PRODUCTION from denitrification
      DCDT(21)=RNIT*FRN2O_NIT*pwfpc_nit                 !N2O PRODUCTION from nitrification
      DCDT(22)=DCDT(21)*RNO_N2O*min(1.0d0,RAINNO)       !NxO PRODUCTION from nitrification
      DCDT(23)=TDECAYM+TCH4POOL   !-RMETH               !CH4 PRODUCTION
      DCDT(24)=RCABUG(2)                                !CO2 assimulated by nitrifier
      DCDT(25)=0.0D0                                    !FOR FUTURE VARIABLES
c   44 CONTINUE
C     WRITE(*,*) 'RVOL = ', RVOL
C
C-----------------------------------------------------------------------
C
C     ... FINISHED
C
      RETURN
      END
C
C
      SUBROUTINE PRCRAT(B,C,DEATH,DECAY,DECDEN,DENCON,HETWT,IDEATH,
     +    RCOMTR,RNOMTR,RCABUG,RNABUG,RCADEN,RNADEN,RCD,RND,RCREL,
     +    RNNSYM,RNSYM,RHUR,RNHUR,RDEN,ANETN,ANETNI,RNIT,FRN2O,ATMCO2,
     +    ANETNID,RMETH,RCAMETH,RNAMETH,DECMETH,anetnimeth,ATMCH4,
     +    ANETNSUM,ANETNSUMD,ANETNSUMMETH)
      USE VARIABLE
C
C=======================================================================
C
C     PURPOSE: CALCULATE "POTENTIAL" TIME RATES OF CHANGE (TIME DERIVA-
C            TIVES) OF OMNI STATE VARIABLES.
C
C     REF:
C          CASKEY, W.H., AND J.S. SCHEPERS, MODELING OF MICROBIAL
C          ACTIVITY: MINERALIZATION, IMMOBILIZATION, AND DENITRIFI-
C          CATION, IN PROCEEDINGS OF THE NATURAL RESOURCES MODELING
C          SYMPOSIUM (DECOURSEY, ED.), PINGREE PARK, CO, 16-21 OCT
C          1983, USDA-ARS, PUBLICATION ARS-30, APRIL 1985.
C
C     VARIABLE DEFINITIONS:
C     VARIABLE  I/O   DESCRIPTION
C     --------  ---   -----------
C     ANIT         I    COEF FOR AHRENIUS EQN FOR NITRIFICATION,
C                 [SEC/DAY]
C     ADENIT     I    COEF FOR AHRENIUS EQN FOR DENITRIFICATION,
C                 [SEC/DAY]
C     AUREA        I    COEF FOR AHRENIUS EQN FOR HYDROLYSIS OF UREA,
C                 [SEC/DAY]
C     ADEATH     I    3-LONG VECTOR OF COEF'S FOR BM DEATH EQNS
C                 [SEC/DAY]
C     ADCAYV     I    5-LONG VECTOR OF COEF'S FOR AHRENIUS OM DECAY
C                 EQNS, FOR OM POOLS [SEC/DAY]
C     B        O    5-LONG VECTOR OF RELATIVE OM POOL DECAYS (RELATIVE
C                 TO SUM TOTAL DECAY)
C     C        I    13-LONG OMNI STATE VECTOR: 1 -> 5 - STRUCTURAL,
C                 METABOLIC, FAST, MED, & SLOW SOIL OM (OM UNITS
C                 [UGC/G-SOIL]); 6 -- CO2; 7 -> 9 - HETEROTROPHIC (SOIL
C                 DECOMPOSERS), AUTOTROPHIC, & HETEROTROPHIC
C                 (FACULTATIVE) BM (ALL BM HAVE UNITS
C                 [# ORG'S/G-SOIL]); UREA, NO#, NH4, & N SINK
C                 (ALL HAVE UNITS [MOLES/LITER PORE WATER]
C     CN       I    9-LONG VECTOR OF OM & BM C:N RATIOS (IN SAME
C                 ORDER AS IN C VECTOR)
C     CSUBST      C SUBSTRATE CONC [UG-C/G-SOIL]
C     DEATH        O    3-LONG VECTOR OF POTENTIAL DEATH RATES OF HET-1
C                 (SOIL DECOMPOSERS), AUTO, & HET-2 (FACULTATIVE)
C                 BM, UNITS OF [# ORG'S/DAY]
C     DECAY        O    5-LONG VECTOR OF DECAY RATES OF OM POOLS,
C                 [ (UG-OM/G-SOIL)/DAY ]; POSITIVE
C     DECDEN     O    5-LONG VECTOR OF OM DECAY RATES ATTRIBUTABLE TO
C                 DENITRIFIERS, [ (UG-OM/G-SOIL)/DAY ]
C     DENCON     I    CONVERSION FACTOR: FROM DENITRIFICATION RATE
C                  ==> ANAEROBIC OM DECAY RATE
C     EA          ACTIVATION ENERGY  [KCAL/MOLE]
C     EFFMAX     I    BM EFFICIENCY IN CONVERTING DECAYED OM UPTAKE TO
C                 ASSIMILATED BM (REMAINDER GOES OFF AS RESPIRATION
C                 CO2)
C     EFFNIT     I    AUTOTROPH EFFICIENCY IN CONVERTING "NITRIFIED" NH4
C                 TO AUTO BM-N (REMAINDER GOES OFF AS NO3)
C     EFFDEN     I    EFFICIENCY FACTOR FOR DENITRIFICATION (FRACTION
C                 EFFDEN TAKEN UP BY DENITRIFIERS; REMAINDER
C                 (1-EFFDEN) GOES OFF AS N2,N2O)
C     FAERD        O    FRACTION OF DEATH OF HET-2 THAT IS AEROBIC
C     H        I    HYDROGEN CONCENTRATION AS [PH]
C     HETWT        O    2-LONG VECTOR OF RELATIVE HETERO OM CONC (REL TO
C                 TOTAL HETERO CONC)
C     K           EFFECTIVE 1-ST ORDER RATE COEF [1/DAY]
C     HPLANK      PLANCK'S CONSTANT, = 6.63D-34 [J.SEC]
C     KBOLTZ      BOLTZMAN'S CONSTANT, = 1.38D-23 [J/K]
C     NHBFLG     I    FLAG CONTROLLING NITRIFICATION SHUTDOWN DUE TO
C                 MANAGEMENT PRACTICE. (0=OFF, 1=ON)
C     RGAS            GAS CONSTANT, = 1.99D-3 [KCAL/ MOLE.K]
C     POPMIN      MINIMUM ALLOWABLE BM POPULATION [# ORG'S]
C     PHI         POROSITY
C     PCO2            PARTIAL PRESSURE CO2 [ATM]
C     R14,R23,R34,R43,R45,R53,R15
C              I    INTRA-OM POOL TRANSFORMATION COEFICIENTS (ALA
C                 PARTON).  RIJ: DEC FRACTION OF POOL I DECAY THAT
C                 IS TRANSFORMED TO POOL J
C     RCOMTR     O    6-LONG VECTOR OF RATES OF INCREASE ON OM POOLS
C                 EL 2 => AUTO, THEREFOR UNSUED (AUTO DO NOT DERIVE
C                 DUE TO INTRA-OM POOL TRANSFORMATIONS
C     RNOMTR     O    INCREASES IN POOLS OM-N CORRSPONDING TO RCOMTR
C     RCABUG     O    3-LONG VECTOR OF C ASSIMILATED BY HET-1, AUTO,
C                 & HET-2 POOLS ( (UG C/G-SOIL)/DAY ]
C     RNABUG     O    3-LONG VECTOR OF N ASSIMILATED BY HET-1, AUTO,
C                 & HET-2 POOLS [ (UG N/G-SOIL)/DAY ];
C     RCADEN     O    5-LONG VECTOR OF OM DECAY ATTRIBUTABLE TO
C                 DENITRIFIERS, EL I => OM POOL I.
C                 UNITS [ (UG C/G-SOIL)/DAY ]
C     RNADEN     O    ANALAGOUS TO RCADEN, BUT FOR N
C     RCD      O    5X3 ARRAY (COL 2 UNUSED) OF HETRO BM OM-C UPTAKE:
C                 EL (I,J) = AMT FROM OM POOL I ASSIMILATED BY
C                 OM POOL J (COL 2 => AUTO, THEREFORE UNUSED).
C                 UNITS OF [ (UG OM-C/G-SOIL)/DAY ]; POS
C     RND      O    AS IN RCD, BUT FOR OM-N. UNITS OF [ (UG OM-N/
C                 G-SOIL)/DAY ]; POS
C     RCREL        O    RATE OF OM-C UPTAKE ( & POSSIBLY RELEASED AS CO2)
C                 BY BM ASSILMILATION & RESPIRATION; POSITIVE.
C     RNNSYM     O    RATE OF NH4 INCREASE DUE TO NON-SYMBIOTIC FIXATION
C                 (INCREASES NH4, THEREFORE POS (+) )
C                 [ (MOLES NH4/LITER P.W.) / DAY ]
C     RNSYM        O    RATE OF NH4 INCREASE DUE TO NON-SYMBIOTIC FIXATION
C                 (INCREASES NH4, THEREFORE POS (+) )
C     RHUR         O    RATE OF HYDROLYSIS OF UREA (NEG, BECAUE UREA
C                 DECREASES)  [MOLES/LITER P.W. / DAY]
C     RNHUR        O    RATE OF REDUCTION IN UREA-N (NEG, BECAUSE
C                 DECREASES)  [MOLES/LITER P.W. / DAY]
C     RDEN         O    DENITRIFICATION RATE (REDUCES NO3, THEREFORE
C                 NEGATIVE (-) )  [MOLES NO3/LITER P.W. / DAY]
C     RVOL         O    VOLATILIZATION RATE (REDUCES NH4, THEREFORE
C                 NEGATIVE (-) )  [MOLES NH4/LITER P.W. / DAY]
C     RHOB         I    SOIL BULK DENSITY [G/CM^3]
C     RHOP         I    SOIL PARTICLE DENSITY [G/CM^3]
C     TEMP         I    TEMPERATURE [C]
C     TDECAY      SUM TOTAL DECAY RATE OVER ALL OM POOLS
C                 [(UG-C/G-SOIL)/DAY]
C     TDDEC           DECAY RATE DUE TO ANEROBIC (DENITRIFYING) ACTION
C                 OF HET-2 (FACULTATIVE) BM [(UG-C/G-SOIL)/DAY]
C     THETA        I    MOISTURE CONTENT [DIM'LESS]
C     U        I    IONIC STRENGTH
C     XKP      I    COEF FOR CALC OF ACTIVATION ENERGY
C
C     COMMENTS:
C       - THESE ARE "POTENTIAL" RATES BECAUSE THEY ARE CALCULATED
C         ACCORDING TO RATE EQUATIONS, W/O CORRECTION FOR POSSIBLE
C         LIMITING CONDITIONS.  THESE CORRECTIONS MUST BE PERFORMED
C         ELSEWHERE
C       - RATE SIGN CONVENTION: NEG (-) IF SPECIES CONC REDUCTION,
C         POS (+) IS INCREASE.  THERE ARE SOME EXCEPTIONS TO THIS
C         CONVENTION, THOUGH E.G. OM DECAY, BM DEATH
C
C     MASS STORAGE FILES:  NONE
C
C     EXTERNAL REFERENCES:
C       - FCORR  - CORRECTION FACTORS FOR AEROBIC/ANAEROBIC CONDITIONS
C       - O2SOL  - O2 SOLUBILITY AS FN OF TEMP
C
C        COMMON BLOCKS NUTPAR, NUTINP
C
C     STATEMENT FUNCTIONS
C       - EXPTRM - EXPONENTIAL MULTIPLIER OF BASIC RATE COEF
C       - FUNX   - MULTIPLIER OF BASIC RATE COEF
C       - FUNCEA - ACTIVATION ENERGY OF OM FOR DECAY BY BM
C
C     CALLED FROM:  NUTRTD
C
C     PROGRAMMER:  CHARLES S. HEBSON
C     MAJOR REVISION BY M.J. SHAFFER, 12/91
C
C     VERSION:   1
C
C-----------------------------------------------------------------------
C
C ... DECLARE VARIABLES
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      INTEGER IDEATH
C
      DIMENSION B(5),C(25),DEATH(3),DECAY(5),HETWT(3),IDEATH(3),
     +    RCOMTR(8),RNOMTR(8),RCABUG(3),RNABUG(3),RCD(5,3),RND(5,3),
     +    RCREL(5),DECDEN(5),RCADEN(5),RNADEN(5),ANETN(5),FRT(5),
     +    ATMCO2(8),RCAMETH(5),RNAMETH(5),DECMETH(5),ATMCH4(8),
     +    RCDEN(5),RCMETH(5)
C
C ... BRING IN PARAMETERS BY LABELED COMMON
C
      COMMON /NUTPAR/ R14,R23,R34,R43,R45,R53,R15,R25,EFFMAX,EFFNIT,
     +    EFFDEN,DENC,RPOP(3),ADCAY,ANIT,ADENIT,AUREA,ADEATH(3),CN(9),
     +    ADCAYV(5),XKP(3),AMETH,FRN2O_NIT,FRN2O_DEN,RNO_N2O,RAINNO,
     +    O2LIM,EFFMETH,ISBUG
C
      COMMON /NUTINP/ H,PCO2,RHOB,RHOP,TEMP,U,THETA,W,ZN,PWFPC,
     +    POPMIN(3),NHBFLG
C
      DOUBLE PRECISION KBOLTZ,K
C
      PARAMETER(KBOLTZ=1.38D-23,HPLANK=6.63D-34,RGAS=1.99D-3)
C
C ... STATEMENT FUNCTIONS COEFFICIENTS IN ARRHENIUS RATE EQNS
C
      EXPTRM(EAF)=EXP(-EAF/RGAS/TK)
      FUNX(A)=(KBOLTZ*TK/HPLANK)*A
C     FUNCEA(POP,XKK) = 7.0D0  + XKK*(1.0D0/LOG(MAX(POP,POPMIN)))
      FUNCEA(AINT,SLOPE)=AINT+SLOPE*U
C
C-----------------------------------------------------------------------
C
C     SET ARRAY STORAGE FOR FRACTION POOL TRANSFERS.
C
      FRT(1)=R14+R15
      FRT(2)=R23+R25
      FRT(3)=R34
      FRT(4)=R43+R45
      FRT(5)=R53
C
C     CAN'T TRANSFER MORE THAN 100 PERCENT OF POOL.
C
      IF(FRT(4).GT.1.0D0) THEN
        WRITE(*,*) 'FR SUM OF ALL OM 4 POOL TRANSFERS IS GREATER THAN 1'
        STOP3
      ENDIF
c      FRT(5)=R53
C
C     ... CONVERT TEMP: [C] ==> [K]
C
      TK=TEMP+273.15D0
C
C     ... CALC TOTAL OM--C
C     NOTE THAT THEY ARE BEING WEIGHTED ACCORDING TO THEIR RELATIVE
C     DECAY RATE COEFFICIENTS.
C
      CTOT=0.234D0*C(1)+C(2)+0.0234D0*C(3)+0.00234D0*C(4)+0.000234D0*
     +    C(5)
C
C     ... SET CARBON SUBSTRATE CONCENTRATION
C
      CSUBST=CTOT
C
C     ... CALC BM ORGANIC C FROM (# ORGS/UG DRY C) RATIOS
C     ...  C(7,8,9) :: [# ORGS/G-SOIL]  BMORG :: [UG DRY C/G-SOIL]
      TCHET=C(7)/RPOP(1)+C(9)/RPOP(3)
      HETWT(1)=C(7)/RPOP(1)/TCHET
      HETWT(3)=1.D0-HETWT(1)
C
C     ... N CONVERSION FACTOR:  * CONV  [M/L-P.W.]  ==> [UG/G-SOIL]
C     ...               / CONV  [UG/G-SOIL] ==> [M/L-P.W.]
C
      CONV=14.0D3*THETA/RHOB
C
C     ... CALCULATE CORRECTION FACTORS FOR OXYGEN & MOISTURE CONTENTS
      CALL FCORR(FAER,FANAER,FRN2O,PWFPC)
C
C     ... CALCULATE O2 SATURATION IN WATER AS FN OF TEMP
C
      CALL O2SOL(O2,TK)
C     WRITE(*,*) 'PRCRAT JUST ABOVE PH TO H CONVERT'
C
C     CONVERT PH TO HYDROGEN ION CONCENTRATION (ACTIVITY).
C
      HYDCON=(10.0D0**(-H))
C
C     SET EXPONENT ON HYDCON BASED ON PH
C     NOTE THAT MAXIMUM RATE OCCURS AT PH 8.0
C
C     THE SCHEME USED HERE RESULTS IN A MAXIUMUM RATE AT PH 7.0 WITH
C     AT SHARPER DECENT IN RATE AT PH > 7.0 THAN CHANGES USED TO ASCEND FROM
C     PH VALUES < 7.0 TO 7.0.
C
      IF(H.LE.7.0D0) THEN
        ONETH=0.16665D0
        ADJ=1.0D0
      ELSE
        ONETH=-0.3333D0
C       ADJ =  9.984D6
        ADJ=3.1597D3
      ENDIF
C
C
C-----------------------------------------------------------------------
C     ... CALCULATE ORGANIC MATTER DECAY RATES ( IN TERMS OF OM--C CONC)
C-----------------------------------------------------------------------
C
C     ... CALC DECAY IN EACH OM POOL
      EA=FUNCEA(15.1D0,12.3D0)
C
C
C     START WITH NET NO3-N IMMOBILIZED SET EQUAL TO ZERO.
      ANETNI=0.0D0
      ANETNID=0.0D0
      ANETNImeth=0.0D0
      anetnsum=0.0d0
      anetnsumD=0.0d0
      ANETNsumMETH=0.0d0
C     WRITE(*,*) 'PRCRAT JUST ABOVE RESIDUE POOL LOOPS'
C
C     NOW LOOP FOR EACH ORGANIC MATTER POOL.
      DO 10 J=1,5
C
C       FRT(J) CANNOT BE EQUAL TO OR GREATER THAN 1.0
        IF(FRT(J).EQ.1.0D0) THEN
          WRITE(*,*) 'FTR(J) EQUAL TO OR GREATER THAN 1.0 IN NUTR -- RUN
     + ABORTED'
          STOP4
        ENDIF
C
C       COMPUTE RATE COEFFICIENT FOR DECAY.
C
        K=FAER*FUNX(ADCAYV(J))*EXPTRM(EA)*(O2/HYDCON**ONETH)*C(7)*ADJ
C
C       NOTE FIRST ORDER DECAY RATES WITH RESPECT TO CARBON SUBSTRATES
C       NOTE ALSO THAT DECAY PRODUCTS INCLUDE (1) PARTIALLY DECOMPOSED O.M.
C       THAT IS TRANSFERRED TO OTHER POOLS, (2) MICROBIAL BIOMASS, AND (3) CO2
C       GAS
        DECAY(J)=K*C(J)
        IF(DECAY(J).GT.C(J)) DECAY(J)=C(J)
C
C       ... ALGORITHM TO COMPUTE NET MINERALIZATION-IMMOBILIZATION OF N
C       ... FROM EACH OM POOL.  THIS IS ASSOCIATED WITH MICROBIAL BIOMASS PRODUCTION.
C
        TEMPN=DECAY(J)-FRT(J)*DECAY(J)
        ANETN(J)=TEMPN*(1.0d0/CN(J)-EFFMAX/cn(7))/CONV
C
C       PATHWAY HERE FOR NET IMMOBILIZATION ----
        IF(ANETN(J).LT.0.0D0) THEN
C
C         ... NOTE THAT IMMOBILIZATION REQUIRES A SOURCE OF NH4-N + NO3-N.
C         FIRST TEST FOR SUFFICIENT AMOUNT OF NH4-N. NOTE THAT NO3-N IS NOT
C         IMMOBILIZED IF SUFFICIENT NH4-N IS AVAILABLE.
C
          IF(-ANETN(J).GT.C(12)) THEN
C
C           LIMIT IMMOBILIZATION TO TOTAL AVAILABLE NH4-N + NO3-N.
            IF(-ANETN(J).GT.C(11)+C(12)) ANETN(J)=-(C(11)+C(12))
C
C           IF INSUFFICIENT NH4-N IS AVAILABLE FOR IMMOBILIZATION, DISTRIBUTE
C           DEMAND BETWEEN REMAINING NH4-N AND NO3-N.
C
            IF(C(11)+C(12).GT.0.0D0) THEN
C
C             FIRST DETERMINE HOW MUCH IMMOBILIZED N IS FROM NO3-N SOURCE
              TEMNI=ANETN(J)*C(11)/(C(11)+C(12))
c              TEMNI=min(-ANETN(J)-C(12),c(11))
C
C             ACCUMULATE THIS AMOUNT IN THE ANETNI VARIABLE
              ANETNI=ANETNI+TEMNI
C
C             NOW ADJUST ANETN(J) SO THAT IT BECOMES THE
C             NET AMOUNT OF NH4-N IMMOBILIZED.
              ANETN(J)=ANETN(J)*C(12)/(C(11)+C(12))
c              ANETN(J)=-C(12)
              anetnsum=anetnsum+anetn(j)
            ELSE
              ANETN(J)=0.0D0
              TEMNI=0.0D0
            ENDIF
C
C           ... OTHERWISE, THE MICROBES CANNOT DECAY THE OM POOL.
C
C
C           FOR THE CASE OF LIMITED NH4-N + NO3-N,
C           RECOMPUTE DECAY BASED ON ACTUAL AMOUNT OF NH4-N + NO3-N AVAILABLE
C           FOR IMMOBILIZATION.
C
            DECAY(J)=(ANETN(J)+TEMNI)*CONV/((1.0D0/CN(J)-EFFMAX/cn(7))*
     +          (1.D0-FRT(J)))
C           ** KEN ** FOLLOWING CHECK PUT IN TO FORCE NO NEGATIVE DECAY RATE
            DECAY(J)=MAX(DECAY(J),0.0D0)
          ENDIF
        ENDIF
C
C     WRITE(*,*) 'EA=',EA,' K=',K,' faer=',faer,' fanaer=',fanaer,
C     +    ' FUNX=',FUNX(ADCAYV(J)),
C     1      'decay=',decay(j),' ANETN(j)=',ANETN(j)
C
   10 CONTINUE
C
C
C-----------------------------------------------------------------------
C
C     ... CALCULATE GROWTH OF BIOMASS POOLS
C
C     GROWTH RATES ARE CALCULATED EXPLICITLY; THEY ARE RELATED TO THE
C     PROCESS EQUATIONS (OM DECOMP, NITRIFICATION, DENITRIFICATION)
C     BY MASS BALANCE
C-----------------------------------------------------------------------
C
C     ... GROWTH OF AUTOTROPHS: RELATED TO NITRIFICATION PROCESS
C     ...                    NH4 ==> NO3
C  LIWANG MA
C       EA=FUNCEA(12.64D0,12.3D0)
      EA=FUNCEA(21.0D0,12.3D0)
      K=FAER*FUNX(ANIT)*EXPTRM(EA)*SQRT(O2)/(HYDCON**ONETH)*C(8)*ADJ
cc      ANITcon=(1.38e-23/6.63e-34*(273.0d0+25.0d0))*
cc     +     exp(-ea/1.99e-3/(273.0d0+25.0d0))
cc      K=FAER*ANIT*anitcon*SQRT(O2)/(HYDCON**ONETH)*C(8)*ADJ
c stuff from century, Liwang Ma, 9-15-2005
cc      if (tk.gt.273.0d0) then
cc       temp1=(-5.0d0-(tk-273.0d0))/(-5.0d0-25.0d0)
cc	 temp2=1.0d0-temp1**4.5d0
cc	 tempfac=temp1**7.0d0*exp(7.0d0*temp2/4.5d0)
cc       k=k*tempfac
cc       else
cc	 k=0.0d0
cc	 endif
       k=k*1.0d+6   !needed after changing EA value based on the century model. 
c
      IF(K.GT.C(12)) K=C(12)
c  Liwang Ma
cc      if (tk.lt.283) k=0.0d0
C
C     ... NITRIFICATION IS A ZERO ORDER PROCESS FOR NH4-N CONC. AT OR ABOVE
C     3.E-3 MOLES/L, FIRST ORDER AT LOWER NH4-N CONC.
C     IF (C(12).LT.3.D-3) THEN
C     RNIT = -K * C(12) / 3.D-3
C     ELSE
C     RNIT = -K
C     END IF
      RNIT=-K
C
      CALL NIT_ADJ(RNABUG,RCABUG,RNIT,CONV)
C
C     ...  ANAEROBIC GROWTH: GROWTH OF DENITRIFIERS (HET-2)
C     ...  CO2 GETS REMAINING C BY MASS BALANCE
C
C     DENITRIFICATION   NO3 ==> N2,N2O
      IF(FANAER.GT.0.D0) THEN
C       EA = 45.D0
        EA=12.6D0
        K=FANAER*FUNX(ADENIT)*EXPTRM(EA)*CSUBST/(HYDCON**ONETH)*C(9)*ADJ
        K=MIN(K,1.0D0)
        RDEN=-K*C(11)
      ELSE
        RDEN=0.D0
      ENDIF
C
C     ... CONVERT DENITRIFICATION RATE TO ANAEROBIC DECAY RATE &
C     ... CORRESPONDING HET-2 GROWTH RATE (ALL SUCH DECAY GOES INTO
C     ... HET-2, NONE TO INTRA-OM TRANSFORMATION. HENCE, ANAEROBIC
C     ... DECAY & ANAEROBIC HET-2 GROWTH ARE IDENTICAL).
C
      IF(RDEN.LT.0.D0) THEN
C
C       COMPUTE TOTAL CARBON DECAY DEMAND FROM DENITRIFICATION ESTIMATE
C       UNITS ARE UG C/GM SOIL.
C
        TDDEC=-DENCON*RDEN
C
C       ... DISTRIBUTE DENITRIFICATION CARBON DECAY OVER OM POOLS (WT'ED BY
C       ... REL AEROBIC DECAY)
C
        TDECAY1=ADCAYV(1)+ADCAYV(2)+ADCAYV(3)+ADCAYV(4)+ADCAYV(5)
        DO 40 I=1,5
          B(I)=ADCAYV(I)/TDECAY1
          DECDEN(I)=B(I)*TDDEC
C
C         DECDEN CANNOT BE GREATER THAN THE AVAILABLE C MASS.
c          IF(DECDEN(I).GT.C(I)) DECDEN(I)=C(I)
C
C         LIMIT DECDEN SO THAT DECAY + DECDEN CANNOT EXCEED AVAILABLE C MASS.
C
          IF(DECAY(I)+DECDEN(I).GT.C(I)) THEN
            DECDEN(I)=C(I)-DECAY(I)
            IF(DECDEN(I).LT.0.0D0) DECDEN(I)=0.0D0
          ENDIF
C
C         NOW COMPUTE NET MINERALIZATION-IMMOBILIZATION FOR EACH OM POOL
C         ASSOCIATED WITH THIS PROCESS.  UNITS ARE MOLES N/L.  ASSUME THAT
C         MINERALIZATION PRODUCES NH4-N AND IMMOBILIZATION REMOVES NO3-N.
C
          TEMPN=DECDEN(I)-FRT(I)*DECDEN(I)
          RNADEN(I)=TEMPN*(1.0d0/CN(I)-EFFden/cn(9))/CONV
          RCADEN(I)=EFFDEN* tempn  !DECDEN(I)
C       PATHWAY HERE FOR NET IMMOBILIZATION ----
        IF(RNADEN(I).LT.0.0D0) THEN
C
C         ... NOTE THAT IMMOBILIZATION REQUIRES A SOURCE OF NH4-N + NO3-N.
C         FIRST TEST FOR SUFFICIENT AMOUNT OF NH4-N. NOTE THAT NO3-N IS NOT
C         IMMOBILIZED IF SUFFICIENT NH4-N IS AVAILABLE.
C
          IF(-RNADEN(I).GT.(C(12)+ANETNsum)) THEN 
C
C           IF INSUFFICIENT NH4-N IS AVAILABLE FOR IMMOBILIZATION, DISTRIBUTE
C           DEMAND BETWEEN REMAINING NH4-N AND NO3-N.
C           LIMIT IMMOBILIZATION TO TOTAL AVAILABLE NH4-N + NO3-N.
            IF(-RNADEN(I).GT.C(11)+C(12)+ANETNsum+anetni) 
     +           RNADEN(I)=-(C(11)+C(12)+ANETNsum+anetni)
C
          IF(C(11)+C(12)+ANETNsum+anetni.GT.0.0D0) THEN
C
C             FIRST DETERMINE HOW MUCH IMMOBILIZED N IS FROM NO3-N SOURCE
c           TEMNID=min(-RNADEN(I)+C(12)+ANETNsum,c(11)+anetni)
           temnid=rnaden(i)*(C(11)+anetni)/
     +            (C(11)+C(12)+ANETNsum+anetni)
C
C             ACCUMULATE THIS AMOUNT IN THE ANETNID VARIABLE
              ANETNID=ANETNID+TEMNID
C
C             NOW ADJUST ANETN(J) SO THAT IT BECOMES THE
C             NET AMOUNT OF NH4-N IMMOBILIZED.
            TEMNHD=RNADEN(I)*(C(12)+anetnsum)/
     +             (C(11)+C(12)+ANETNsum+anetni)
c              RNADEN(I)=-1.0d0*(C(12)+ANETNsum)
             ANETNSUMD=ANETNSUMD+TEMNHD
            ELSE
              TEMNHD=0.0D0
              TEMNID=0.0D0
            ENDIF
C           ... OTHERWISE, THE MICROBES CANNOT DECAY THE OM POOL.
C
C
C           FOR THE CASE OF LIMITED NH4-N + NO3-N,
C           RECOMPUTE DECAY BASED ON ACTUAL AMOUNT OF NH4-N + NO3-N AVAILABLE
C           FOR IMMOBILIZATION.
C
          DECDEN(I)=(TEMNHD+TEMNID)*CONV/((1.0D0/CN(I)-EFFden/cn(9))*
     +          (1.D0-FRT(I)))
C           ** KEN ** FOLLOWING CHECK PUT IN TO FORCE NO NEGATIVE DECAY RATE
          DECDEN(I)=MAX(DECDEN(I),0.0D0)
          TEMPN=DECDEN(I)-FRT(I)*DECDEN(I)
          RNADEN(I)=TEMPN*(1.0d0/CN(I)-EFFden/cn(9))/CONV
          RCADEN(I)=EFFDEN*tempn  !DECDEN(I)
        ENDIF
      ENDIF
   40   CONTINUE
C
C     .. ADJUST RDEN IF CHANGE IN DECDEN (LIWANG MA)
      TDDEC=0.0D0
      DO 60 I=1,5
        TDDEC=TDDEC+DECDEN(I)
   60 CONTINUE
      RDEN=TDDEC/(-DENCON)
      else
        DO I=1,5
        DECDEN(I)=0.0D0
        RNADEN(I)=0.0D0
        RCADEN(I)=0.0D0
        ENDDO
      ENDIF
C
C     METHAN PRODUCTION   CH4
C      IF((FANAER.GT.0.D0))THEN   !60% pore water saturation. 
       IF((FANAER.GT.O2LIM))THEN   !80% Pore water saturation. 
C      IF((FANAER.GT.0.D0).AND.(C(11)+ANETNI+ANETNID.LE.0.0D0))THEN
C       EA = 45.D0
        EA=12.6D0
        K=FANAER*FUNX(AMETH)*EXPTRM(EA)/(HYDCON**ONETH)*C(9)*ADJ
        K=MIN(K,1.0D0)
        RMETH=-K*CSUBST
      ELSE
        RMETH=0.D0
      ENDIF
C=================================================================================
      IF(RMETH.LT.0.D0) THEN
C
C       COMPUTE TOTAL CARBON DECAY DEMAND FROM METHANE PRODUCTION
C       UNITS ARE UG C/GM SOIL.
C
        TDDEC=-RMETH*dencon  !CONV*12.0D0/14.0D0   !CONVERSION USING CONV FROM N FOR C
C
C       ... DISTRIBUTE CARBON DECAY OVER OM POOLS (WT'ED BY
C       ... REL AEROBIC DECAY)
C
        TDECAY1=ADCAYV(1)+ADCAYV(2)+ADCAYV(3)+ADCAYV(4)+ADCAYV(5)
        DO 41 I=1,5
          B(I)=ADCAYV(I)/TDECAY1
          DECMETH(I)=B(I)*TDDEC
C
C         DECDEN CANNOT BE GREATER THAN THE AVAILABLE C MASS.
c          IF(DECMETH(I).GT.C(I)) DECMETH(I)=C(I)
C
C         LIMIT DECMETH SO THAT DECAY + DECMETH + DECDEN CANNOT EXCEED AVAILABLE C MASS.
C
          IF(DECAY(I)+DECMETH(I)+DECDEN(I).GT.C(I)) THEN
            DECMETH(I)=C(I)-DECAY(I)-DECDEN(I)
            IF(DECMETH(I).LT.0.0D0) DECMETH(I)=0.0D0
          ENDIF
C
c          goto 62
C         NOW COMPUTE NET MINERALIZATION-IMMOBILIZATION FOR EACH OM POOL
C         ASSOCIATED WITH THIS PROCESS.  UNITS ARE MOLES N/L.  ASSUME THAT
C         MINERALIZATION PRODUCES NH4-N AND IMMOBILIZATION REMOVES NO3-N.
C
          TEMPN=DECMETH(I)-FRT(I)*DECMETH(I)
          RNAMETH(I)=TEMPN*(1.0d0/CN(I)-EFFMETH/cn(9))/(CONV)  !*12.D0/14.D0)
          RCAMETH(I)=EFFMETH* tempn  !DECDEN(I)
C       PATHWAY HERE FOR NET IMMOBILIZATION ----
        IF(RNAMETH(I).LT.0.0D0) THEN
C
C         ... NOTE THAT IMMOBILIZATION REQUIRES A SOURCE OF NH4-N + NO3-N.
C         FIRST TEST FOR SUFFICIENT AMOUNT OF NH4-N. NOTE THAT NO3-N IS NOT
C         IMMOBILIZED IF SUFFICIENT NH4-N IS AVAILABLE.
C
          IF(-RNAMETH(I).GT.(C(12)+ANETNsum+ANETNSUMD)) THEN 
C
C           IF INSUFFICIENT NH4-N IS AVAILABLE FOR IMMOBILIZATION, DISTRIBUTE
C           DEMAND BETWEEN REMAINING NH4-N AND NO3-N.
C           LIMIT IMMOBILIZATION TO TOTAL AVAILABLE NH4-N + NO3-N.
            IF(-RNAMETH(I).GT.C(11)+C(12)+ANETNsum+anetni+ANETNSUMD) 
     +           RNAMETH(I)=-(C(11)+C(12)+ANETNsum+anetni+ANETNSUMD)
C           RNAMETH(I)=-(C(12)+ANETNsum+ANETNSUMD)
C
          IF(C(11)+C(12)+ANETNsum++anetni+anetnsumd.GT.0.0D0) THEN
C
C             FIRST DETERMINE HOW MUCH IMMOBILIZED N IS FROM NO3-N SOURCE
c           TEMNID=min(-RNADEN(I)+C(12)+ANETNsum,c(11)+anetni)
C             NET AMOUNT OF NH4-N IMMOBILIZED.
           temniMETH=rnaMETH(i)*(C(11)+anetni)/
     +            (C(11)+C(12)+ANETNsum+anetni+ANETNSUMD)
C           temnimeth=rnameth(i)
C
C             ACCUMULATE THIS AMOUNT IN THE ANETNI VARIABLE
              ANETNImeth=ANETNImeth+TEMNImeth
            TEMNHMETH=RNAMETH(I)*(C(12)+anetnsum+ANETNSUMD)/
     +             (C(11)+C(12)+ANETNsum+anetni+ANETNSUMD)
             ANETNSUMMETH=ANETNSUMMETH+TEMNHMETH
C
            ELSE
              TEMNImeth=0.0D0
              TEMNHMETH=0.0D0
            ENDIF
C           ... OTHERWISE, THE MICROBES CANNOT DECAY THE OM POOL.
C
C
C           FOR THE CASE OF LIMITED NH4-N + NO3-N,
C           RECOMPUTE DECAY BASED ON ACTUAL AMOUNT OF NH4-N + NO3-N AVAILABLE
C           FOR IMMOBILIZATION.
C
          DECMETH(I)=(TEMNHMETH+TEMNIMETH)*(CONV)/ !*12.D0/14.D0
     +          ((1.0D0/CN(I)-EFFMETH/cn(9))*(1.D0-FRT(I)))
C           ** KEN ** FOLLOWING CHECK PUT IN TO FORCE NO NEGATIVE DECAY RATE
          DECMETH(I)=MAX(DECMETH(I),0.0D0)
          TEMPN=DECMETH(I)-FRT(I)*DECMETH(I)
          RNAMETH(I)=TEMPN*(1.0d0/CN(I)-EFFMETH/cn(9))/CONV  !*12.D0/14.D0)
          RCAMETH(I)=EFFMETH*tempn  !DECDEN(I)
        ENDIF
      ENDIF
 62    CONTINUE
   41   CONTINUE
C
C     .. ADJUST RMETH IF CHANGE IN DECDEN (LIWANG MA)
      TDDEC=0.0D0
      DO 61 I=1,5
        TDDEC=TDDEC+DECMETH(I)
   61 CONTINUE
      RMETH=TDDEC/(-dencon)  !*12.D0/14.D0)
      else
        DO I=1,5
        DECMETH(I)=0.0D0
        RNAMETH(I)=0.0D0
        RCAMETH(I)=0.0D0
        ENDDO
      ENDIF

C=================================================================================
C     ... DISTRIBUTE RELEASE BETWEEN BM GROWTH (ASSIMILATION) & CO2,
C
C     TGRO = 0.267D0 * TCREL
C     TCO2 = 0.733D0 * TCREL
C
C     ... CALC INCREASE IN OM POOLS BY OM TRANSFORMATIONS (AFTER PARTON)
C     ... NOTE: RCGJI = FRACTION OF POOL I DECAY THAT IS TRANSFORMED
C     TO OM POOL J
C
C     NOTE THAT ATMCO2 IS CARBON LOST TO OR GAINED FROM CO2 POOLS (UG C/GM SOIL)
C     DURING POOL TRANSFERS OF CARBON AND NITROGEN.
C
      CATEMP=R23*(DECAY(2)+DECDEN(2)+DECMETH(2))
      RNOMTR(1)=CATEMP/CN(2)
      RCOMTR(1)=RNOMTR(1)*CN(3)
      ATMCH4(1)=R23*DECMETH(2)/CN(2)*CN(3)-R23*DECMETH(2) !CATEMP
      ATMCO2(1)=RCOMTR(1)-CATEMP-ATMCH4(1) !CATEMP
C      ATMCO2(1)=RCOMTR(1)-R23*(DECAY(2)+DECDEN(2))-ATMCH4(1) !CATEMP
C
      CATEMP=R43*(DECAY(4)+DECDEN(4)+DECMETH(4))
      RNOMTR(2)=CATEMP/CN(4)
      RCOMTR(2)=RNOMTR(2)*CN(3)
      ATMCH4(2)=R43*DECMETH(4)/CN(4)*CN(3)-R43*DECMETH(4) !CATEMP
      ATMCO2(2)=RCOMTR(2)-CATEMP-ATMCH4(2) !CATEMP
C
      CATEMP=R53*(DECAY(5)+DECDEN(5)+DECMETH(5))
      RNOMTR(3)=CATEMP/CN(5)
      RCOMTR(3)=RNOMTR(3)*CN(3)
      ATMCH4(3)=R53*DECMETH(5)/CN(5)*CN(3)-R53*DECMETH(5) !CATEMP
      ATMCO2(3)=RCOMTR(3)-CATEMP-ATMCH4(3) !CATEMP
C
      CATEMP=R14*(DECAY(1)+DECDEN(1)+DECMETH(1))
      RNOMTR(4)=CATEMP/CN(1)
      RCOMTR(4)=RNOMTR(4)*CN(4)
      ATMCH4(4)=R14*DECMETH(1)/CN(1)*CN(4)-R14*DECMETH(1) !CATEMP
      ATMCO2(4)=RCOMTR(4)-CATEMP-ATMCH4(4)
C
      CATEMP=R34*(DECAY(3)+DECDEN(3)+DECMETH(3))
      RNOMTR(5)=CATEMP/CN(3)
      RCOMTR(5)=RNOMTR(5)*CN(4)
      ATMCH4(5)=R34*DECMETH(3)/CN(3)*CN(4)-R34*DECMETH(3) !CATEMP
      ATMCO2(5)=RCOMTR(5)-CATEMP-ATMCH4(5)
C
      CATEMP=R45*(DECAY(4)+DECDEN(4)+DECMETH(4))
      RNOMTR(6)=CATEMP/CN(4)
      RCOMTR(6)=RNOMTR(6)*CN(5)
      ATMCH4(6)=R45*DECMETH(4)/CN(4)*CN(5)-R45*DECMETH(4) !CATEMP
      ATMCO2(6)=RCOMTR(6)-CATEMP-ATMCH4(6)
C
      CATEMP=R15*(DECAY(1)+DECDEN(1)+DECMETH(1))
      RNOMTR(7)=CATEMP/CN(1)
      RCOMTR(7)=RNOMTR(7)*CN(5)
      ATMCH4(7)=R15*DECMETH(1)/CN(1)*CN(5)-R15*DECMETH(1) !CATEMP
      ATMCO2(7)=RCOMTR(7)-CATEMP-ATMCH4(7)
C
      CATEMP=R25*(DECAY(2)+DECDEN(2)+DECMETH(2))
      RNOMTR(8)=CATEMP/CN(2)
      RCOMTR(8)=RNOMTR(8)*CN(5)
      ATMCH4(8)=R25*DECMETH(2)/CN(2)*CN(5)-R25*DECMETH(2) !CATEMP
      ATMCO2(8)=RCOMTR(8)-CATEMP-ATMCH4(8) !CATEMP
C     ... CALCULATE GROSS OM--C LOST TO MICROBIAL ASSIMILATION AND CO2 RELEASE
C     BY POOL
C     ... NOTE: RCIJ = DISTRIBUTION COEF FOR TRANSFORMING OM POOL I
C     DECAY TO OM POOL J
      CALL BUG_ADJ(RNABUG,RCABUG,DECAY,DECDEN,DECMETH,C)
C
C-----------------------------------------------------------------------
C     ... CALCULATE DEATH OF BUGS
C-----------------------------------------------------------------------
C
C     WRITE(*,*) 'BUG POP = ', C(7), C(8),C(9)
      DFCA=1.0D0/MAX(.01D0,FAER)
      DFCAN=1.0D0/MAX(.01D0,FANAER)
      DO 70 I=1,3
C
C       DEATH ONLY OCCURS IF MICROBIAL POPULATION IS GE POPMIN.
        IF(C(6+I).GE.POPMIN(I).AND.(ISBUG.EQ.1)) THEN
          IDEATH(I)=0
          IF(I.EQ.1) THEN
            AAINT=15.19D0
          ELSEIF(I.EQ.2) THEN
            AAINT=12.64D0
          ELSE
            AAINT=12.83D0
          ENDIF
          EA=FUNCEA(AAINT,12.3D0)
          K=DFCA*(HYDCON**ONETH)/O2*FUNX(ADEATH(I))*EXPTRM(EA)*C(I+6)/
     +        ADJ
          DEATH(I)=K*C(6+I)
C
C         ... NOTE: FACTOR RPOPI = RATIO (# ORGS/UG C)
          IF(I.EQ.1) THEN
            DEATH(I)=DEATH(I)/MAX(CSUBST,1.0D-4)
          ELSEIF(I.EQ.2) THEN
            DEATH(I)=DEATH(I)/PCO2/MAX(C(12),1.0D-4)
          ELSEIF(I.EQ.3) THEN
C
C           ... AEROBIC PART
            DAER=DEATH(I)/MAX(CSUBST,1.0D-4)
C
C           ... ANAEROBIC PART
            DANAER=DAER*(O2/DFCA)*DFCAN/MAX(C(11),1.0D-4)
C
            DEATH(3)=DAER+DANAER
C         FAERD = DAER / DEATH(3)
          ENDIF
        ELSE
          DEATH(I)=0.0D0
        ENDIF
C
C     WRITE(*,*) 'DFCA=',DFCA,'H=',10.**(-H),'O2=',O2,'FUNX=',
C     1FUNX(ADEATH(I)),'EXPTRM=',EXPTRM(EA),'DEATH=',DEATH(I),
C     2'C12=',C(12),' C11=',C(11),' CSUBST=',CSUBST,' PCO2=',PCO2
   70 CONTINUE
        DO I=1,3
        DEATH(I)=MIN(DEATH(I),C(I+6))
        ENDDO
C
      RNSYM=0.D0
      RNNSYM=0.D0
C
C     ... BY HYDROLYSIS OF UREA--N (CO(NH2)2) (PRODUCES NH4)
C     EA = 45.D0
      EA=12.6D0
      XKR=FUNX(AUREA)
      XKW=EXPTRM(EA)
      K=XKR*XKW
      RHUR=-K*C(10)
      IF(-RHUR.GT.C(10)) THEN
        RHUR=-C(10)
C       ... LIWANG SAYS THE RHUR=-C(10)*2.0D0 SHOULD BE RHUR=-C(10)
C       RHUR=-C(10)*2.0D0
C       C(10) = 0.0D0
      ENDIF
      RNHUR=-2.D0*RHUR
      RETURN
      END
C
C
C
      SUBROUTINE RK4(Y,DYDX,N,H,YOUT,DERIVS)
C======================================================================
C
C       PURPOSE:  4-TH ORDER RUNGE-KUTTA ODE SOLVER (MUST BE USED IN
C             TANDEM WITH OTHER ROUTINE(S) FROM PRESS)
C
C     REF: PRESS ET AL, NUMERICAL RECIPES, CAMBRIDGE PRESS, NY,
C          PP 550-560, 1986.
C
C     VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C     DERIVS     I    NAME OF USER-SUPPLIED SUBR THAT CALCULATES
C                 DERIVATIVE OF STATE VECTOR
C     DYDX         I    DERIVATIVE OF STATE VECTOR
C     H        I    TIME STEP
C     N        I    LENGTH OF STATE VECTOR (NO. STATE VARIABLE)
C     X        I    STARTING TIME VALUE OF TIME STEP
C     Y        I    VALUE OF STATE VECTOR @ PREVIOUS TIME STEP
C     YOUT         O    VALUE OF STATE VECTOR @ END OF SUB-STEP WITHIN
C                 TIME STEP
C
C     COMMENTS:
C       - NAME OF USER-SUPPLIED SUBR DERIVS MUST BE DECALRED EXTERNAL
C          IN A HIGHER CALLING ROUTINE;
C        - MAKE SURE THAT NMAX >= N FOR YOUR PROBLEM
C
C       MASS STORAGE FILES: NONE
C
C       EXTERNAL REFERENCES:
C        - DERIVS: CALCULATES DERIVATIVE OF STATE VECTOR
C
C       CALLED FROM: RKDUMB
C
C     PROGRAMMER:  CHARLES S. HEBSON
C
C     VERSION:   1
C
C-----------------------------------------------------------------------
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      EXTERNAL DERIVS
      DIMENSION Y(N),DYDX(N),YOUT(N)
      PARAMETER(NMAX=25)
      DIMENSION YT(NMAX),DYT(NMAX),DYM(NMAX)
C
C-----------------------------------------------------------------------
C
      HH=H/2.0D0
      H6=H/6.0D0
C
C     --- FIRST STEP
C
      DO 10 I=1,N
        YT(I)=Y(I)+HH*DYDX(I)
        IF(YT(I).LT.0.0D0.AND.(I.LT.6.OR.(I.GE.10.AND.I.LE.12))) YT(I)=
     +      0.0D0
   10 CONTINUE
C
C     --- SECOND STEP
C
C     WRITE (*,3000)
C     3000 FORMAT(' ',6X,'POINT 2')
C
      CALL DERIVS(YT,DYT)
      DO 20 I=1,N
        YT(I)=Y(I)+HH*DYT(I)
        IF(YT(I).LT.0.0D0.AND.(I.LT.6.OR.(I.GE.10.AND.I.LE.12))) YT(I)=
     +      0.0D0
   20 CONTINUE
C
C     --- THIRD STEP
C
C     WRITE (*,3020)
C     3020 FORMAT (' ',6X,'POINT 3')
C
      CALL DERIVS(YT,DYM)
      DO 30 I=1,N
        YT(I)=Y(I)+H*DYM(I)
        IF(YT(I).LT.0.0D0.AND.(I.LT.6.OR.(I.GE.10.AND.I.LE.12))) YT(I)=
     +      0.0D0
        DYM(I)=DYT(I)+DYM(I)
   30 CONTINUE
C
C     --- FOURTH STEP
C
C     WRITE (*,3030)
C     3030 FORMAT (' ',6X,'POINT 4')
C
      CALL DERIVS(YT,DYT)
      DO 40 I=1,N
C
C       --- ACCUMULATE INCREMENTS WITH PROPER WEIGHTS
C
        YOUT(I)=Y(I)+H6*(DYDX(I)+DYT(I)+2.0D0*DYM(I))
        IF(YOUT(I).LT.0.0D0.AND.(I.LT.6.OR.(I.GE.10.AND.I.LE.12)))
     +      YOUT(I)=0.0D0
   40 CONTINUE
C
      RETURN
      END
C
      SUBROUTINE RKDUMB(VSTART,DV,NVAR,X1,X2,NSTEP,DERIVS)
C
C=======================================================================
C
C       PURPOSE: INTREGRATE A SET OF ODE'S FROM X1 TO X2 IN NSTEP EQUAL
C            INCREMENTS USING 4-TH ORDER RUNGE-KUTTA METHOD
C
C     REF: PRESS, ET AL, NUMERICAL RECIPES, PP553-4, CAMBRIDGE PRESS,
C          NY, 1986
C
C     VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C       VSTART    I/O I: STATE VECTOR VALUE @ PREVIOUS TIME STEP
C                 O:   "     " " NEW      "    "
C       DV         A  DERIVATIVE OF STATE VECTOR
C       NVAR   I  LENGTH OF STATE VECTOR (NO. STATE VARIABLES)
C       X1         I  STARTING TIME FOR INTEGRATION
C       X2         I  ENDING TIME FOR INTEGRATION
C       NSTEP  I  NO. STEPS TO INTERGRATE OVER TIME STEP
C       DERIVS     I  NAME OF USER-SUPPLIED SUBROUTINE THAT CALCULATES
C                 1-ST DERIVATIVES
C
C       COMMENTS:
C        - INCREMENTAL RESULTS ARE STORED IN COMMON BLOCK PATH. RESULTS
C          RETURNED IN VSTART (I.C.'S LOST);
C        - NAME IN DERIVS MUST BE DECLARED EXTERNAL IN CALLING ROUTINE
C        - TIME IS USED AS A GENERIC INDEPENDENT VARIABLE, BUT THE INDE-
C          PENDENT VARIABLE IS NOT LIMITED TO THIS INTERPRETATION
C        - MAKE SURE THAT NMAX >= NVAR FOR YOUR PROBLEM
C
C       MASS STORAGE FILES: NONE
C
C       EXTERNAL REFERENCES:
C        - DERIVS:  CALCULATE DERIVATIVE OF STATE VECTOR
C        - RK4:     4-TH ORDER RUNGE-KUTTA CALCULATIONS FOR A SINGLE
C               SUB-STEP
C
C       CALLED FROM:  THIS IS A GENERIC 4TH ORDER RUNGE-KUTTA SOLVER.
C         IN OMNI MODEL:  CALLED FROM SUBR OMNI
C
C     PROGRAMMER: CHARLES S. HEBSON
C
C     VERSION:   1
C
C-----------------------------------------------------------------------
C
C ... SET MAX NO. VAR'S (FN'S) & MAX NO. INCRMENTAL RESULTS STORED
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      EXTERNAL DERIVS
      PARAMETER(NMAX=25)
      DIMENSION VSTART(NVAR),DV(NVAR)
      DIMENSION V(NMAX)
C
C ... LOAD STARTING VALUES
      DO 10 I=1,NVAR
        DV(I)=0.0D0
        V(I)=VSTART(I)
   10 CONTINUE
      X=X1
      H=(X2-X1)/NSTEP
C
C     ... TAKE STEP
      DO 20 K=1,NSTEP
        CALL DERIVS(V,DV)
        CALL RK4(V,DV,NVAR,H,V,DERIVS)
C       IF (X+H.EQ.X) PAUSE 'STEPSIZE NOT SIGNIFICANT IN RKDUMB.'
        X=X+H
   20 CONTINUE
C
C     ... PLACE FINAL RESULT IN VSTART FOR RETURN
      DO 30 I=1,12
        IF(V(I).NE.0.0D0) THEN
          IF(I.NE.6) THEN
            VSTART(I)=MAX(V(I),1.0D-59)
          ELSE
            VSTART(I)=V(I)
          ENDIF
        ELSE
          VSTART(I)=0.0D0
        ENDIF
   30 CONTINUE
      DO 40 I=13,NMAX
        VSTART(I)=V(I)
   40 CONTINUE
C
C     ...
      RETURN
      END
C
      SUBROUTINE VOLAT(C,RVOL,XK1)
C
C======================================================================
C
C       PURPOSE:
C
C       REF:  CRANE, ET.AL. (1981) TRANS. ASAE 24:382-390.
C           HOFF, ET.AL. (1981) JOURN OF ENV. QUAL. 10:90-95
C
C       VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C       C      I  13-LONG OMNI STATE VECTOR: 1 -> 5 - STRUCTURAL,
C                 METABOLIC, FAST, MED, & SLOW SOIL OM (OM UNITS
C                 [UGC/G-SOIL]); 6 -> 9 - HETEROTROPHIC (SOIL
C                 DECOMPOSERS), AUTOTROPHIC, & HETEROTROPHIC
C                 (FACULTATIVE) BM (ALL BM HAVE UNITS
C                 [# ORG'S/G-SOIL]); UREA, NO#, NH4, & N SINK
C                 (ALL HAVE UNITS [MOLES/LITER PORE WATER]
C       CONV   L  CONVERSION FACTOR FOR MG/L ==> UG/GM
C       EK         P  EQUILIBRIUM CONSTANT
C       H      I  HYDROGEN ION CONCENTRATION (PH)
C       HM         L  HYDROGEN ION CONCENTRATION (MG/L)
C       PNH3   L  PARTIAL PRESSURE NH3 GAS (ATM)
C       PNH3A  P  PARTIAL PRESSURE NH3-AMBIENT (ATM)
C       RHOB   I  BULK DENSITY (G/CM^3)
C       RVOL   O  AMOUNT OF NH3-N VOLATILIZED (MOLES N/L) AT TIME STEP
C       THETA  I  VOLUMETRIC WATER CONTENT (CM^3/CM^3)
C       TEMP   I  TEMPERATURE OF LAYER (C)
C       W      I  WIND RUN (KM/DAY)
C       XK         P  DEPTH CONSTANT
C       XK1        P  VOLATILIZATION CONSTANT
C       XKG        L  EFFECT FROM WIND AND DEPTH
C       ZN         I  DEPTH TO CENTER OF SOIL LAYER (CM)
C
C       COMMENTS:
C
C       EXTERNAL REFERENCES:
C                 NONE
C
C       CALLED FROM:  PRCRAT
C
C       PROGRAMMER:  KEN ROJAS  MARVIN SHAFFER
C
C       VERSION:   1.0
C
C-----------------------------------------------------------------------
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
c      PARAMETER(XK1=1000.0D0) !LIWANG SUGGESTS -- WAS 4000.0
      PARAMETER(XK=-0.25D0,PNH3A=2.45D-8,EK=8.7902D-12,TK=2.9447D4,
     +    TK2=1.99D-3)
C
C ... BRING IN PARAMETERS BY LABELED COMMON
C
c      COMMON /NUTPAR/ R14,R23,R34,R43,R45,R53,R15,R25,EFFMAX,EFFNIT,
c     +    EFFDEN,DENC,RPOP(3),ADCAY,ANIT,ADENIT,AUREA,ADEATH(3),CN(9),
c     +    ADCAYV(5),XKP(3),AMETH,FRN2O_NIT,FRN2O_DEN,RNO_N2O,RAINNO,
C     +    O2LIM,EFFMETH,ISBUG
C
      COMMON /NUTINP/ H,PCO2,RHOB,RHOP,TEMP,U,THETA,W,ZN,PWFPC,
     +    POPMIN(3),NHBFLG
C
C
      DIMENSION C(25)
C
       if (xk1.lt.1.0d0) xk1=1.0d3  !Liwang Ma, 10-27-2010
C     ..DETERMINE EFFECT FROM WIND AND DEPTH IN SOIL
      XKG=XK1*LOG(W)*EXP(XK*ZN)
C
      HM=10.0D0**(-H)
C
C     ..DETERMINE PARTIAL PRESSURE OF NH3
      PNH3=EK*C(12)/HM
      PNH3=MAX(PNH3,PNH3A)
C
C     ..CALCULATE VOLATIZATION
      XMNH4=C(12)
      TF=TK*EXP(-6.0D0/(TK2*(TEMP+273.0D0)))
      PRVOL=XKG*(PNH3-PNH3A)*TF
      PRVOL=MAX(PRVOL,0.0D0)
      PRVOL=MIN(PRVOL,1.0D0)
      RVOL=-XMNH4*PRVOL
C
C     WRITE (*,100) XMNH4*14000.D0/RHOB*THETA,W,H,ZN,PRVOL*100.D0,
C     1RVOL*14000.D0/RHOB*THETA
C
C
      RETURN
C     1000 FORMAT (//' STARTING AMOUNT OF NH4 ==>',T30,G14.5,/' WIND ===>',
C     +    T30,G14.5,/' PH ===>',T30,G14.5,/' ZN ===>',T30,G14.5,/
C     +    ' PERCENT VOLATILIZED ==>',T30,G14.5,/
C     +    ' AMOUNT VOLATILIZED ==>',T30,G14.5)
      END
C
C
C
C      FUNCTION FDCN(K,J)
C
C======================================================================
C
C       PURPOSE:
C
C       REF:
C
C       VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C
C       COMMENTS:
C
C       EXTERNAL REFERENCES:
C
C       CALLED FROM:
C
C       PROGRAMMER:  UNKNOWN
C
C       VERSION:   1
C
C-----------------------------------------------------------------------
C
C      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
c      COMMON /NUTPAR/ R14,R23,R34,R43,R45,R53,R15,R25,EFFMAX,EFFNIT,
c     +    EFFDEN,DENC,RPOP(3),ADCAY,ANIT,ADENIT,AUREA,ADEATH(3),CN(9),
c     +    ADCAYV(5),XKP(3),AMETH,FRN2O_NIT,FRN2O_DEN,RNO_N2O,RAINNO,
C     +    O2LIM,EFFMETH,ISBUG
C
C      PARAMETER (BRKPNT = 0.25D0)
C      IF (J.GE.6.OR.J.LE.9) THEN
C       ..MICROBIAL POOL
C        FDCN = 1.0D0 / CN(K) - 1.0D0 / CN(J) * BRKPNT
C      ELSE
C       ..BIOMASS POOLS
C        FDCN = 1.0D0 / CN(J)
C      END IF
C
C      RETURN
C      END
C
      SUBROUTINE RDECMP(SDEAD,SDCN,RM,RCN,DD,CN,fpwr,rpool,amtn,amtc,
     +                  rco2,worm)
C
C======================================================================
C
C       PURPOSE:  CONTROLS RESIDUE DECOMPOSITION.  RESIDUE AMOUNTS COME
C             IN AND MASS IS DEPLETED BASED ON DEGREE DAYS AND EXP
C             FUNTION.  AT THIS TIME ONLY ACCOUNTS FOR SURFACE RES.
C
C       REF:  DOUGLAS & RICKMAN: ESTIMATING CROP RESIDUE DECOMPOSITION
C           SOIL SCI. SOC. AM. J., VOL56, J-F 1992.
C
C
C       VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C       FCR        P  FRACTION OF CARBON IN BIOMASS
C       FW         P  WATER CONTENT COEFFICIENT, RELATES TO THE DIFFERENCE
C                 IN DECAY RATE UNDER WET .VS. DRY CONDITIONS. (FOR
C                 FLAT RESIDUES)
C       FWS        P  WATER CONTENT COEFFICIENT, RELATES TO THE DIFFERENCE
C                 IN DECAY RATE UNDER WET .VS. DRY CONDITIONS. (FOR
C                 STANDING DEAD RESIDUES)
C       FN (1,2)   P  NITROGEN EFFECT COEFFICIENT, RELATES TO THE ASSUMPTION
C                 THAT RESIDUES WITH HIGHER RESIDUE DECOMPOSE FASTER
C                 THOSE WITH LOWER VALUES FN=0.57+(0.126*[N]). (FOR
C                 FLAT RESIDUES)
C       FNS        P  NITROGEN EFFECT COEFFICIENT, RELATES TO THE ASSUMPTION
C                 THAT RESIDUES WITH HIGHER RESIDUE DECOMPOSE FASTER
C                 THOSE WITH LOWER VALUES FN=0.57+(0.126*[N]). (FOR
C                 STANDING DEAD RESIDUES)
C       RPOOL  L  RESIDUE POOL, BOTH FAST AND SLOW DECOMPOSERS
C                 [0]--SURFACE RESIDUE,  [1] SLOW DECOMP RESIDUE
C                 [1..NN]--MIXED SOIL RES  [2] FAST DECOMP RESIDUE
C                 UNITS = [G-CARBON / CM^2-SOIL]
C       TC1        L  AMOUNT OF CARBON THAT WOULD BE AVAILABLE WITH THE
C                 CURRENT C:N RATIO OF RESIDUE AT CN(1) VALUES.
C       TK         P  GENERAL DECOMPOSITION CONSTANT [1/DD]
C
C
C       CALLED FROM: NUTRI
C
C       PROGRAMMER: KEN ROJAS
C
C       VERSION: 2.5
C
C======================================================================
C
      DOUBLE PRECISION AMT,ASDEAD,DD,FN1,FNS,FW,FWS,RCN,RM,SDCN,SDEAD,
     +    TK,FCR,CN(9),TC1,fpwr,amtn,amtc,rco2,s,tc2,fn2,bamt,CKG2G
      integer I,MXNOD
      PARAMETER(FW=0.3D0,FN1=1.4D0,FWS=0.16D0,FNS=0.8D0,FCR
     +    =0.4D0,CKG2G=1.0D-5,mxnod=300)    !TK=-0.0004D0,
      double precision RPOOL(MXNOD,2),WORM
C
       TK=WORM*(-1.0d0)
       amtn=0.0d0
       amtc=0.0d0
C     .. DECOMPOSE SURFACE RESIDUES
      IF(RM.GT.0.0D0.and.dd.gt.0.0d0) THEN
        CONTENT=(RM*FCR/RCN)/RM*1000.0D0
        FN2=0.570D0+0.126D0*CONTENT
        AMT=RM*EXP(FN2*FpWr*fpwr*TK*DD)
        TC1=CN(1)*RM*FCR/RCN
        TC2=CN(2)*RM*FCR/RCN
        IF(AMT*FCR.LT.TC1) AMT=RM
        bamt=rm-amt
C     ..ADD TO SOIL RESIDUE POOLS
      IF(RCN.LE.CN(1)) THEN
        S=0.0D0
      ELSEIF(RCN.GE.CN(2)) THEN
        S=1.0D0
      ELSE
        S=(1.0D0/RCN-1.0D0/CN(1))/(1.0D0/CN(2)-1.0D0/CN(1))
      ENDIF
        IF(amt*fcr.gt.tc1.and.AMT*FCR.LT.TC2) THEN
      do i=1,3
      RPOOL(i,1)=RPOOL(i,1)+BAMT*(1.0D0-S)*CKG2G*FCR/3.0d0
      RPOOL(i,2)=RPOOL(i,2)+BAMT*S*CKG2G*FCR/3.0d0
      enddo
        AMTn=BAMT*(1.0D0-S)*FCR/CN(1)+BAMT*S*FCR/CN(2)
        AMTC=BAMT*FCR
        else
C        RCN=(AMT*FCR)/(RM*FCR/RCN)
C        rco2=rco2+bamt*fcr    !blow off as CO2
      endif
        RM=AMT
      IF(RCN.LE.CN(1)) THEN
        RCO2=RCO2+BAMT*FCR-(BAMT*FCR*(1.0D0-S)/RCN)*CN(1)
      ELSEIF(RCN.GE.CN(2)) THEN
        RCO2=RCO2+BAMT*FCR-(BAMT*FCR*S/RCN)*CN(2)
      endif
c
      ENDIF
C
C     .. DECOMPOSE STANDING DEAD RESIDUES
      IF(SDEAD.GT.0.0D0) THEN
        CONTENT=(SDEAD*FCR/SDCN)/SDEAD*1000.0D0
        FNS2=0.570D0+0.126D0*CONTENT
        ASDEAD=SDEAD*EXP(FNS2*FpWr*fpwr*TK*DD)
        TC1=CN(1)*SDEAD*FCR/SDCN
        TC2=CN(2)*SDEAD*FCR/SDCN
        IF(ASDEAD*FCR.LT.TC1) ASDEAD=SDEAD
        bamt=SDEAD-ASDEAD
C     ..ADD TO SOIL RESIDUE POOLS
      IF(sdCN.LE.CN(1)) THEN
        S=0.0D0
      ELSEIF(sdCN.GE.CN(2)) THEN
        S=1.0D0
      ELSE
        S=(1.0D0/sdCN-1.0D0/CN(1))/(1.0D0/CN(2)-1.0D0/CN(1))
      ENDIF
        IF(asdead*fcr.gt.tc1.and.asdead*FCR.LT.TC2) THEN
      do i=1,3
      RPOOL(i,1)=RPOOL(i,1)+BAMT*(1.0D0-S)*CKG2G*FCR/3.0d0
      RPOOL(i,2)=RPOOL(i,2)+BAMT*S*CKG2G*FCR/3.0d0
      enddo
        AMTn=amtn+BAMT*(1.0D0-S)*FCR/CN(1)+BAMT*S*FCR/CN(2)
        AMTC=amtc+BAMT*FCR
        else
C        SDCN=(ASDEAD*FCR)/(SDEAD*FCR/SDCN)
C        rco2=rco2+bamt*fcr                        !blow off as CO2
      endif
      IF(sdCN.LE.CN(1)) THEN
        RCO2=RCO2+BAMT*FCR-(BAMT*FCR*(1.0D0-S)/SDCN)*CN(1)
      ELSEIF(sdCN.GE.CN(2)) THEN
        RCO2=RCO2+BAMT*FCR-(BAMT*FCR*S/SDCN)*CN(2)
      endif
c
        SDEAD=ASDEAD
      ENDIF
C
      RETURN
      END
C
      SUBROUTINE BIOTIL(RPOOL,WORM,RCN,CN,RM,AMT,AMTC)
C
C======================================================================
C
C       PURPOSE:  CONTROLS RESIDUE BIO-INCORPORATION.  THE MOVEMENT OF
C             MATERIAL BELOW GROUND BY EARTHWORM OR NATURAL INCORP.
C             AS OBSERVED IN NO-TILL SYSTEMS.
C       disabled by Liwang Ma, WORM is used by RDECMP subroutine for TK. 10-7-2009
C       VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C       AMT       I/O AMOUNT THE IS BIO-INCORPORATED [KG/HA]
C       FCR       P    CONVERT BIOMASS ==> CARBON
C       CKG2G  P  CONVERT FROM KG/HA ==> G/CM^2
C       RM        I/O MASS OF RESIDUE [KG/HA]
C       RCN        I  SURFACE RESIDUE C:N RATIO
C       RPOOL I/O RESIDUE POOL, BOTH FAST AND SLOW DECOMPOSERS
C                 [0]--SURFACE RESIDUE,  [1] SLOW DECOMP RESIDUE
C                 [1..NN]--MIXED SOIL RES  [2] FAST DECOMP RESIDUE
C                 UNITS = [G-CARBON / CM^2-SOIL]
C       WORM   I  YEARLY FRACTION OF SURFACE RESIDUE THAT IS
C                 INCORPORATED INTO THE SOIL THROUGH NATURAL MEANS.
C
C       CALLED FROM: NUTRI
C
C       PROGRAMMER: KEN ROJAS
C
C       VERSION: 2.5
C
C======================================================================
C
      INTEGER MXNOD
      DOUBLE PRECISION YEAR,CKG2G,FCR
      PARAMETER(MXNOD=300,YEAR=365.0D0,CKG2G=1.0D-5,FCR=0.4D0)
      DOUBLE PRECISION RPOOL(MXNOD,2),WORM,AMT,RM,RCN,CN(9),S,BAMT,AMTC
C
C     ..FIND AMOUNT THAT IS MIXED
      BAMT=RM*WORM/YEAR
      RM=max(0.0d0,RM-BAMT)
C
C     ..ADD TO SOIL RESIDUE POOLS
      IF(RCN.LE.CN(1)) THEN
        S=0.0D0
      ELSEIF(RCN.GE.CN(2)) THEN
        S=1.0D0
      ELSE
        S=(1.0D0/RCN-1.0D0/CN(1))/(1.0D0/CN(2)-1.0D0/CN(1))
      ENDIF
      RPOOL(1,1)=RPOOL(1,1)+BAMT*(1.0D0-S)*CKG2G*FCR
      RPOOL(1,2)=RPOOL(1,2)+BAMT*S*CKG2G*FCR
      AMT=BAMT*(1.0D0-S)*FCR/CN(1)+BAMT*S*FCR/CN(2)
      AMTC=BAMT*FCR
      IF(RCN.LE.CN(1)) THEN
      RCO2=RCO2+BAMT*FCR-(BAMT*FCR*(1.0D0-S)/RCN)*CN(1)
      ELSEIF(RCN.GE.CN(2)) THEN
      RCO2=RCO2+BAMT*FCR-(BAMT*FCR*S/RCN)*CN(2)
      endif
C
      RETURN
      END
C
      FUNCTION CNEW(RMO,RMN,CNO,CNN,IRES)
C
C======================================================================
C
C       PURPOSE:  THIS FUNCTION DETERMINE THE NEW C:N RATIO WHEN NEW
C             RESIDUE IS ADDED TO THE MULCH POOL.  IT USES THE CURRENT
C             MULCH C:N RATIO WITH THE INCOMING RESIDUE C:N RATIO AND
C             PARTITIONS IT BY MASS.
C
C
C       VARIABLE DEFINITIONS:
C       VARIABLE  I/O DESCRIPTION
C       --------  --- -----------
C       CNMIN  P  MINIMUM ALLOWABLE C:N RATIO.
C                 35.0 FOR CORN FODDER W/O SEED
C                 25.0 FOR SOYBEAN W/O SEED
C                 40.0 FOR WHEAT STRAW
C       CNEW   O  NEW C:N RATIO
C       CNN        I  C:N RATIO OF THE NEW RESIDUE.
C       CNO        I  C:N RATIO OF THE EXISTING MULCH.
C       FCR        P  FRACTION OF CARBON IN BIOMASS
C       IRES    I  INDEX TELLS WHICH (CORN,SOY,WHEAT) RESIDUE
C       RMN        I  MASS OF NEW RESIDUE (BIOMASS UNITS).
C       RMO        I  MASS OF EXISTING MULCH (BIOMASS UNITS).
C
C       CALLED FROM: MATILL
C                PGMAIN
C                MAMUNR
C                MAPEST
C                MAFERT
C                HARVST
C
C       PROGRAMMER: KEN ROJAS
C
C       VERSION: 3.0
C
C======================================================================
C
      DOUBLE PRECISION CNN,CNO,RMN,RMO,CNEW,CNMIN,FCR
      INTEGER IRES
      PARAMETER(FCR=0.4D0)
      DIMENSION CNMIN(3)
      DATA CNMIN /35.0D0,25.0D0,40.0D0/
C
C     IF RESIDUE IS KNOWN USE ESTABLISHED VALUE--ELSE USE PASSED VALUE
      IF(IRES.NE.0) THEN
        CNEW=CNMIN(IRES)
      ELSE
        CNEW=CNMIN(1)
      ENDIF
      IF((RMO.GT.0.0D0.OR.RMN.GT.0.D0).AND.(CNO.GT.0.0D0.AND.CNN.GT.
     +    0.0D0)) THEN
        CNEW=(RMO+RMN)*FCR/(RMO*FCR/CNO+RMN*FCR/CNN)
      ENDIF
C
      RETURN
      END
C=========================================================================================================
C ADJUST MATCH RDEN, RNADEN, RCADEN, ETC
C=========================================================================================================
      SUBROUTINE DENI_ADJ(I,DENCON,RDEN,C,ANETNID,ANETNSUMD,
     &           ANETNsum,anetni,CONV,RCADEN,RNADEN,DECDEN,decay)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION B(5),C(25),DEATH(3),DECAY(5),HETWT(3),IDEATH(3),
     +    RCOMTR(8),RNOMTR(8),RCABUG(3),RNABUG(3),RCD(5,3),RND(5,3),
     +    RCREL(5),DECDEN(5),RCADEN(5),RNADEN(5),ANETN(5),FRT(5),
     +    ATMCO2(8),RCAMETH(5),RNAMETH(5),DECMETH(5),ATMCH4(8),
     +    RCDEN(5),RCMETH(5)
C
C ... BRING IN PARAMETERS BY LABELED COMMON
C
      COMMON /NUTPAR/ R14,R23,R34,R43,R45,R53,R15,R25,EFFMAX,EFFNIT,
     +    EFFDEN,DENC,RPOP(3),ADCAY,ANIT,ADENIT,AUREA,ADEATH(3),CN(9),
     +    ADCAYV(5),XKP(3),AMETH,FRN2O_NIT,FRN2O_DEN,RNO_N2O,RAINNO,
     +    O2LIM,EFFMETH,ISBUG
C
C      COMMON /NUTINP/ H,PCO2,RHOB,RHOP,TEMP,U,THETA,W,ZN,PWFPC,
C     +    POPMIN(3),NHBFLG
C      IF(RDEN.LT.0.D0) THEN
C
C       COMPUTE TOTAL CARBON DECAY DEMAND FROM DENITRIFICATION ESTIMATE
C       UNITS ARE UG C/GM SOIL.
C
c      ANETNID=0.0D0
c      anetnsumD=0.0d0
      FRT(1)=R14+R15
      FRT(2)=R23+R25
      FRT(3)=R34
      FRT(4)=R43+R45
      FRT(5)=R53
c        TDDEC=-DENCON*RDEN
C
C       ... DISTRIBUTE DENITRIFICATION CARBON DECAY OVER OM POOLS (WT'ED BY
C       ... REL AEROBIC DECAY)
C
c        TDECAY1=ADCAYV(1)+ADCAYV(2)+ADCAYV(3)+ADCAYV(4)+ADCAYV(5)
c        DO 40 I=1,5
c          B(I)=ADCAYV(I)/TDECAY1
c          DECDEN(I)=B(I)*TDDEC
C
C         DECDEN CANNOT BE GREATER THAN THE AVAILABLE C MASS.
c          IF(DECDEN(I).GT.C(I)) DECDEN(I)=C(I)
C
C         LIMIT DECDEN SO THAT DECAY + DECDEN CANNOT EXCEED AVAILABLE C MASS.
C
c          IF(DECAY(I)+DECDEN(I).GT.C(I)) THEN
c            DECDEN(I)=C(I)-DECAY(I)
c            IF(DECDEN(I).LT.0.0D0) DECDEN(I)=0.0D0
c          ENDIF
C
C         NOW COMPUTE NET MINERALIZATION-IMMOBILIZATION FOR EACH OM POOL
C         ASSOCIATED WITH THIS PROCESS.  UNITS ARE MOLES N/L.  ASSUME THAT
C         MINERALIZATION PRODUCES NH4-N AND IMMOBILIZATION REMOVES NO3-N.
C
c          TEMPN=DECDEN(I)-FRT(I)*DECDEN(I)
c          RNADEN(I)=TEMPN*(1.0d0/CN(I)-EFFden/cn(9))/CONV
c          RCADEN(I)=EFFDEN* tempn  !DECDEN(I)
C       PATHWAY HERE FOR NET IMMOBILIZATION ----
        IF(RNADEN(I).LT.0.0D0) THEN
C
C         ... NOTE THAT IMMOBILIZATION REQUIRES A SOURCE OF NH4-N + NO3-N.
C         FIRST TEST FOR SUFFICIENT AMOUNT OF NH4-N. NOTE THAT NO3-N IS NOT
C         IMMOBILIZED IF SUFFICIENT NH4-N IS AVAILABLE.
C
          IF(-RNADEN(I).GT.(C(12)+ANETNsum)) THEN 
C
C           IF INSUFFICIENT NH4-N IS AVAILABLE FOR IMMOBILIZATION, DISTRIBUTE
C           DEMAND BETWEEN REMAINING NH4-N AND NO3-N.
C           LIMIT IMMOBILIZATION TO TOTAL AVAILABLE NH4-N + NO3-N.
            IF(-RNADEN(I).GT.C(11)+C(12)+ANETNsum+anetni) 
     +           RNADEN(I)=-(C(11)+C(12)+ANETNsum+anetni)
C
          IF(C(11)+C(12)+ANETNsum+anetni.GT.0.0D0) THEN
C
C             FIRST DETERMINE HOW MUCH IMMOBILIZED N IS FROM NO3-N SOURCE
c           TEMNID=min(-RNADEN(I)+C(12)+ANETNsum,c(11)+anetni)
           temnid=rnaden(i)*(C(11)+anetni)/
     +            (C(11)+C(12)+ANETNsum+anetni)
C
C             ACCUMULATE THIS AMOUNT IN THE ANETNID VARIABLE
              ANETNID=ANETNID+TEMNID
C
C             NOW ADJUST ANETN(J) SO THAT IT BECOMES THE
C             NET AMOUNT OF NH4-N IMMOBILIZED.
            TEMNHD=RNADEN(I)*(C(12)+anetnsum)/
     +             (C(11)+C(12)+ANETNsum+anetni)
c              RNADEN(I)=-1.0d0*(C(12)+ANETNsum)
             ANETNSUMD=ANETNSUMD+TEMNHD
            ELSE
              TEMNHD=0.0D0
              TEMNID=0.0D0
            ENDIF
C           ... OTHERWISE, THE MICROBES CANNOT DECAY THE OM POOL.
C
C
C           FOR THE CASE OF LIMITED NH4-N + NO3-N,
C           RECOMPUTE DECAY BASED ON ACTUAL AMOUNT OF NH4-N + NO3-N AVAILABLE
C           FOR IMMOBILIZATION.
C
c          DECDEN(I)=(TEMNHD+TEMNID)*CONV/((1.0D0/CN(I)-EFFden/cn(9))*
c     +          (1.D0-FRT(I)))
C           ** KEN ** FOLLOWING CHECK PUT IN TO FORCE NO NEGATIVE DECAY RATE
c          DECDEN(I)=MAX(DECDEN(I),0.0D0)
c          TEMPN=DECDEN(I)-FRT(I)*DECDEN(I)
c          RNADEN(I)=TEMPN*(1.0d0/CN(I)-EFFden/cn(9))/CONV
c          RCADEN(I)=EFFDEN*tempn  !DECDEN(I)
        ENDIF
      ENDIF
c   40   CONTINUE
C
C     .. ADJUST RDEN IF CHANGE IN DECDEN (LIWANG MA)
c      TDDEC=0.0D0
c      DO 60 J=1,5
c        TDDEC=TDDEC+DECDEN(J)
c   60 CONTINUE
c      RDEN=TDDEC/(-DENCON)
      END
C=========================================================================================================
C ADJUST RMETH, RNADEN, RCADEN, ETC
C=========================================================================================================
      SUBROUTINE METH_ADJ(I,DENCON,RMETH,C,ANETNIMETH,ANETNSUMD,
     &  ANETNSUMMETH,ANETNsum,CONV,RCAMETH,RNAMETH,DECMETH,decden,decay)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION B(5),C(25),DEATH(3),DECAY(5),HETWT(3),IDEATH(3),
     +    RCOMTR(8),RNOMTR(8),RCABUG(3),RNABUG(3),RCD(5,3),RND(5,3),
     +    RCREL(5),DECDEN(5),RCADEN(5),RNADEN(5),ANETN(5),FRT(5),
     +    ATMCO2(8),RCAMETH(5),RNAMETH(5),DECMETH(5),ATMCH4(8),
     +    RCDEN(5),RCMETH(5)
C
C ... BRING IN PARAMETERS BY LABELED COMMON
C
      COMMON /NUTPAR/ R14,R23,R34,R43,R45,R53,R15,R25,EFFMAX,EFFNIT,
     +    EFFDEN,DENC,RPOP(3),ADCAY,ANIT,ADENIT,AUREA,ADEATH(3),CN(9),
     +    ADCAYV(5),XKP(3),AMETH,FRN2O_NIT,FRN2O_DEN,RNO_N2O,RAINNO,
     +    O2LIM,EFFMETH,ISBUG
C       COMPUTE TOTAL CARBON DECAY DEMAND FROM METHANE PRODUCTION
C       UNITS ARE UG C/GM SOIL.
C
      FRT(1)=R14+R15
      FRT(2)=R23+R25
      FRT(3)=R34
      FRT(4)=R43+R45
      FRT(5)=R53
c      ANETNImeth=0.0D0
c        TDDEC=-RMETH*DENCON !*12.0D0/14.0D0   !CONVERSION USING CONV FROM N FOR C
C
C       ... DISTRIBUTE CARBON DECAY OVER OM POOLS (WT'ED BY
C       ... REL AEROBIC DECAY)
C
c        TDECAY1=ADCAYV(1)+ADCAYV(2)+ADCAYV(3)+ADCAYV(4)+ADCAYV(5)
c        DO 41 I=1,5
c          B(I)=ADCAYV(I)/TDECAY1
c          DECMETH(I)=B(I)*TDDEC
C
C         DECDEN CANNOT BE GREATER THAN THE AVAILABLE C MASS.
c          IF(DECMETH(I).GT.C(I)) DECMETH(I)=C(I)
C
C         LIMIT DECMETH SO THAT DECAY + DECMETH + DECDEN CANNOT EXCEED AVAILABLE C MASS.
C
c          IF(DECAY(I)+DECMETH(I)+DECDEN(I).GT.C(I)) THEN
c            DECMETH(I)=C(I)-DECAY(I)-DECDEN(I)
c            IF(DECMETH(I).LT.0.0D0) DECMETH(I)=0.0D0
c          ENDIF
C         NOW COMPUTE NET MINERALIZATION-IMMOBILIZATION FOR EACH OM POOL
C         ASSOCIATED WITH THIS PROCESS.  UNITS ARE MOLES N/L.  ASSUME THAT
C         MINERALIZATION PRODUCES NH4-N AND IMMOBILIZATION REMOVES NO3-N.
C
c          TEMPN=DECMETH(I)-FRT(I)*DECMETH(I)
c          RNAMETH(I)=TEMPN*(1.0d0/CN(I)-EFFMETH/cn(9))/(CONV)  !*12.D0/14.D0)
c          RCAMETH(I)=EFFMETH* tempn  !DECDEN(I)
C       PATHWAY HERE FOR NET IMMOBILIZATION ----
        IF(RNAMETH(I).LT.0.0D0) THEN
C
C         ... NOTE THAT IMMOBILIZATION REQUIRES A SOURCE OF NH4-N + NO3-N.
C         FIRST TEST FOR SUFFICIENT AMOUNT OF NH4-N. NOTE THAT NO3-N IS NOT
C         IMMOBILIZED IF SUFFICIENT NH4-N IS AVAILABLE.
C
          IF(-RNAMETH(I).GT.(C(12)+ANETNsum+ANETNSUMD)) THEN 
C
C           IF INSUFFICIENT NH4-N IS AVAILABLE FOR IMMOBILIZATION, DISTRIBUTE
C           DEMAND BETWEEN REMAINING NH4-N AND NO3-N.
C           LIMIT IMMOBILIZATION TO TOTAL AVAILABLE NH4-N + NO3-N.
            IF(-RNAMETH(I).GT.C(11)+C(12)+ANETNsum+anetni+ANETNSUMD) 
     +           RNAMETH(I)=-(C(11)+C(12)+ANETNsum+anetni+ANETNSUMD)
C           RNAMETH(I)=-(C(12)+ANETNsum+ANETNSUMD)
C
          IF(C(11)+C(12)+ANETNsum+anetni+anetnsumd.GT.0.0D0) THEN
C
C             FIRST DETERMINE HOW MUCH IMMOBILIZED N IS FROM NO3-N SOURCE
c           TEMNID=min(-RNADEN(I)+C(12)+ANETNsum,c(11)+anetni)
C             NET AMOUNT OF NH4-N IMMOBILIZED.
           temniMETH=rnaMETH(i)*(C(11)+anetni)/
     +            (C(11)+C(12)+ANETNsum+anetni+ANETNSUMD)
C           temnimeth=rnameth(i)
C
C             ACCUMULATE THIS AMOUNT IN THE ANETNI VARIABLE
              ANETNImeth=ANETNImeth+TEMNImeth
            TEMNHMETH=RNAMETH(I)*(C(12)+anetnsum+ANETNSUMD)/
     +             (C(11)+C(12)+ANETNsum+anetni+ANETNSUMD)
c              RNADEN(I)=-1.0d0*(C(12)+ANETNsum)
             ANETNSUMMETH=ANETNSUMMETH+TEMNHMETH
C
            ELSE
              TEMNImeth=0.0D0
              TEMNHMETH=0.0D0
            ENDIF
C           ... OTHERWISE, THE MICROBES CANNOT DECAY THE OM POOL.
C
C
C           FOR THE CASE OF LIMITED NH4-N + NO3-N,
C           RECOMPUTE DECAY BASED ON ACTUAL AMOUNT OF NH4-N + NO3-N AVAILABLE
C           FOR IMMOBILIZATION.
C
c          DECMETH(I)=RNAMETH(I)*(CONV)/ !*12.D0/14.D0
c     +          ((1.0D0/CN(I)-EFFMETH/cn(9))*(1.D0-FRT(I)))
C           ** KEN ** FOLLOWING CHECK PUT IN TO FORCE NO NEGATIVE DECAY RATE
c          DECMETH(I)=MAX(DECMETH(I),0.0D0)
c          TEMPN=DECMETH(I)-FRT(I)*DECMETH(I)
c          RNAMETH(I)=TEMPN*(1.0d0/CN(I)-EFFMETH/cn(9))/CONV  !*12.D0/14.D0)
c          RCAMETH(I)=EFFMETH*tempn  !DECDEN(I)
        ENDIF
      ENDIF
c   41   CONTINUE
C
C     .. ADJUST RMETH IF CHANGE IN DECDEN (LIWANG MA)
c      TDDEC=0.0D0
c      DO 61 J=1,5
c        TDDEC=TDDEC+DECMETH(J)
c   61 CONTINUE
c      RMETH=-TDDEC/(DENCON)  !*12.D0/14.D0)
C      ENDIF
      END
C===============================================================================================
C NITRIFICATION ADJUST
C===============================================================================================
      SUBROUTINE NIT_ADJ(RNABUG,RCABUG,RNIT,CONV)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION B(5),C(25),DEATH(3),DECAY(5),HETWT(3),IDEATH(3),
     +    RCOMTR(8),RNOMTR(8),RCABUG(3),RNABUG(3),RCD(5,3),RND(5,3),
     +    RCREL(5),DECDEN(5),RCADEN(5),RNADEN(5),ANETN(5),FRT(5),
     +    ATMCO2(8),RCAMETH(5),RNAMETH(5),DECMETH(5),ATMCH4(8),
     +    RCDEN(5),RCMETH(5)
C
C ... BRING IN PARAMETERS BY LABELED COMMON
C
      COMMON /NUTPAR/ R14,R23,R34,R43,R45,R53,R15,R25,EFFMAX,EFFNIT,
     +    EFFDEN,DENC,RPOP(3),ADCAY,ANIT,ADENIT,AUREA,ADEATH(3),CN(9),
     +    ADCAYV(5),XKP(3),AMETH,FRN2O_NIT,FRN2O_DEN,RNO_N2O,RAINNO,
     +    O2LIM,EFFMETH,ISBUG
C     ..SHUTDOWN NITRIFICATION PROCESS IF USING NITRIFICATION INHIBITOR
C     OR USE AN ANHYDROUS APPLICATION
C     IF (NHBFLG.NE.0) THEN
C     RNIT=0.0D0
C     ENDIF
C
C     WRITE(*,*)'EA=',EA,'FAER=',FAER,' FUNX=',FUNX(ANIT),' EXPTRM=',
C     1EXPTRM(EA),'SQRT(O2)=',SQRT(O2),'H=',H,' K=',K,'RNIT=',RNIT
C     2,'C(8)=',C(8)
C     ... NOTE: - UNITS CONVERSION [M/L P.W.] ==> [UG/G-SOIL]
      IF (ISBUG.EQ.1) THEN
      RNABUG(2)=(-EFFNIT*RNIT)*CONV !*12.0d3/14.0d3  !to C based mole
C     RCABUG(2) = (-EFFNIT * (-K) * C(12) / 3.D-3 ) * CONV
      RCABUG(2)=RNABUG(2)*CN(8)
      ELSE
      RCABUG(2)=0.0D0
      RNABUG(2)=0.0D0
      ENDIF
C
C     NOW REDUCE AMOUNT OF NH4-N BEING TRANSFERRED TO NO3-N, BY AMOUNT
C     GOING INTO AUTOTROPH BIOMASS.
      RNIT=RNIT+RNABUG(2)/CONV
      IF(RNIT.GT.0.0D0) THEN
        RNIT=0.0D0
      ENDIF
      END
C===============================================================================================
C NITRIFICATION ADJUST
C===============================================================================================
      SUBROUTINE BUG_ADJ(RNABUG,RCABUG,DECAY,DECDEN,DECMETH,C)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION B(5),C(25),DEATH(3),DECAY(5),HETWT(3),IDEATH(3),
     +    RCOMTR(8),RNOMTR(8),RCABUG(3),RNABUG(3),RCD(5,3),RND(5,3),
     +    RCREL(5),DECDEN(5),RCADEN(5),RNADEN(5),ANETN(5),FRT(5),
     +    ATMCO2(8),RCAMETH(5),RNAMETH(5),DECMETH(5),ATMCH4(8),
     +    RCDEN(5),RCMETH(5),BMORG(3)
C
C ... BRING IN PARAMETERS BY LABELED COMMON
C
      COMMON /NUTPAR/ R14,R23,R34,R43,R45,R53,R15,R25,EFFMAX,EFFNIT,
     +    EFFDEN,DENC,RPOP(3),ADCAY,ANIT,ADENIT,AUREA,ADEATH(3),CN(9),
     +    ADCAYV(5),XKP(3),AMETH,FRN2O_NIT,FRN2O_DEN,RNO_N2O,RAINNO,
     +    O2LIM,EFFMETH,ISBUG
C     ... CALCULATE GROSS OM--C LOST TO MICROBIAL ASSIMILATION AND CO2 RELEASE
C     BY POOL
C     ... NOTE: RCIJ = DISTRIBUTION COEF FOR TRANSFORMING OM POOL I
C     DECAY TO OM POOL J
      BMORG(1)=C(7)/RPOP(1)
      BMORG(2)=C(8)/RPOP(2)
      BMORG(3)=C(9)/RPOP(3)
      TCHET=BMORG(1)+BMORG(3)
      HETWT(1)=BMORG(1)/TCHET
      HETWT(3)=1.D0-HETWT(1)
C
      RCREL(1)=(1.D0-R14-R15)*DECAY(1)
      RCREL(2)=(1.D0-R23-R25)*DECAY(2)
      RCREL(3)=(1.D0-R34)*DECAY(3)
      RCREL(4)=(1.D0-R43-R45)*DECAY(4)
      RCREL(5)=(1.D0-R53)*DECAY(5)
C     TCREL = RCREL(1) + RCREL(2) + RCREL(3) + RCREL(4) + RCREL(5)
      RCDEN(1)=(1.D0-R14-R15)*DECDEN(1)
      RCDEN(2)=(1.D0-R23-R25)*DECDEN(2)
      RCDEN(3)=(1.D0-R34)*DECDEN(3)
      RCDEN(4)=(1.D0-R43-R45)*DECDEN(4)
      RCDEN(5)=(1.D0-R53)*DECDEN(5)
C
      RCMETH(1)=(1.D0-R14-R15)*DECMETH(1)
      RCMETH(2)=(1.D0-R23-R25)*DECMETH(2)
      RCMETH(3)=(1.D0-R34)*DECMETH(3)
      RCMETH(4)=(1.D0-R43-R45)*DECMETH(4)
      RCMETH(5)=(1.D0-R53)*DECMETH(5)
C     ... DISTRIBUTE BM POP DEMANDS OVER HET OM POOLS
C
C     WRITE(*,*) 'IN PRCRAT AT PREVIOUS PROBLEM POINT'
        RNABUG(1)=0.0D0
        RCABUG(1)=0.0D0
        RNABUG(3)=0.0D0
        RCABUG(3)=0.0D0
        IF (ISBUG.EQ.1) THEN
        DO 20 I=1,5
          RCD(I,1)=HETWT(1)*EFFMAX*RCREL(I)
          RND(I,1)=RCD(I,1)/CN(1+6)
          RNABUG(1)=RNABUG(1)+RND(I,1)
          RCABUG(1)=RCABUG(1)+RCD(I,1)
          RCD(I,3)=HETWT(3)*EFFMAX*RCREL(I)+EFFDEN*RCDEN(I)+
     +             EFFMETH*RCMETH(I)
          RND(I,3)=RCD(I,3)/CN(3+6)
          RNABUG(3)=RNABUG(3)+RND(I,3)
          RCABUG(3)=RCABUG(3)+RCD(I,3)
  20   CONTINUE
        ENDIF
      END
C==============================================================================================================
C UPDATE ANETNI, ANETNSUM
C==============================================================================================================
      SUBROUTINE DECAYN_ADJ(J,DECAY,C,ANETN,CONV,ANETNI,ANETNSUM)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION B(5),C(25),DEATH(3),DECAY(5),HETWT(3),IDEATH(3),
     +    RCOMTR(8),RNOMTR(8),RCABUG(3),RNABUG(3),RCD(5,3),RND(5,3),
     +    RCREL(5),DECDEN(5),RCADEN(5),RNADEN(5),ANETN(5),FRT(5),
     +    ATMCO2(8),RCAMETH(5),RNAMETH(5),DECMETH(5),ATMCH4(8),
     +    RCDEN(5),RCMETH(5),BMORG(3)
C
C ... BRING IN PARAMETERS BY LABELED COMMON
C
      COMMON /NUTPAR/ R14,R23,R34,R43,R45,R53,R15,R25,EFFMAX,EFFNIT,
     +    EFFDEN,DENC,RPOP(3),ADCAY,ANIT,ADENIT,AUREA,ADEATH(3),CN(9),
     +    ADCAYV(5),XKP(3),AMETH,FRN2O_NIT,FRN2O_DEN,RNO_N2O,RAINNO,
     +    O2LIM,EFFMETH,ISBUG

      FRT(1)=R14+R15
      FRT(2)=R23+R25
      FRT(3)=R34
      FRT(4)=R43+R45
      FRT(5)=R53
        TEMPN=DECAY(J)-FRT(J)*DECAY(J)
        ANETN(J)=TEMPN*(1.0d0/CN(J)-EFFMAX/cn(7))/CONV
C
C       PATHWAY HERE FOR NET IMMOBILIZATION ----
        IF(ANETN(J).LT.0.0D0) THEN
C
C         ... NOTE THAT IMMOBILIZATION REQUIRES A SOURCE OF NH4-N + NO3-N.
C         FIRST TEST FOR SUFFICIENT AMOUNT OF NH4-N. NOTE THAT NO3-N IS NOT
C         IMMOBILIZED IF SUFFICIENT NH4-N IS AVAILABLE.
C
          IF(-ANETN(J).GT.C(12)) THEN
C
C           LIMIT IMMOBILIZATION TO TOTAL AVAILABLE NH4-N + NO3-N.
            IF(-ANETN(J).GT.C(11)+C(12)) ANETN(J)=-(C(11)+C(12))
C
C           IF INSUFFICIENT NH4-N IS AVAILABLE FOR IMMOBILIZATION, DISTRIBUTE
C           DEMAND BETWEEN REMAINING NH4-N AND NO3-N.
C
            IF(C(11)+C(12).GT.0.0D0) THEN
C
C             FIRST DETERMINE HOW MUCH IMMOBILIZED N IS FROM NO3-N SOURCE
              TEMNI=ANETN(J)*C(11)/(C(11)+C(12))
c              TEMNI=min(-ANETN(J)-C(12),c(11))
C
C             ACCUMULATE THIS AMOUNT IN THE ANETNI VARIABLE
              ANETNI=ANETNI+TEMNI
C
C             NOW ADJUST ANETN(J) SO THAT IT BECOMES THE
C             NET AMOUNT OF NH4-N IMMOBILIZED.
              ANETN(J)=ANETN(J)*C(12)/(C(11)+C(12))
c              ANETN(J)=-C(12)
              anetnsum=anetnsum+anetn(j)
            ELSE
              ANETN(J)=0.0D0
              TEMNI=0.0D0
            ENDIF
C
C           ... OTHERWISE, THE MICROBES CANNOT DECAY THE OM POOL.
C
C
C           FOR THE CASE OF LIMITED NH4-N + NO3-N,
C           RECOMPUTE DECAY BASED ON ACTUAL AMOUNT OF NH4-N + NO3-N AVAILABLE
C           FOR IMMOBILIZATION.
            DECAY(J)=(ANETN(J)+TEMNI)*CONV/((1.0D0/CN(J)-EFFMAX/cn(7))*
     +          (1.D0-FRT(J)))
C           ** KEN ** FOLLOWING CHECK PUT IN TO FORCE NO NEGATIVE DECAY RATE
            DECAY(J)=MAX(DECAY(J),0.0D0)
          ENDIF
          ENDIF
        END
